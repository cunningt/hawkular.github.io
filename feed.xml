<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hawkular Blog</title>
    <link>http://www.hawkular.org</link>
    <atom:link href="http://www.hawkular.org/feed.xml" rel="self" type="application/rss+xml" />
    <description>Blog posts about Hawkular</description>
    <language>en-us</language>
    <pubDate>Tue, 4 Oct 2016 17:46:17 +0000</pubDate>
    <lastBuildDate>Tue, 4 Oct 2016 17:46:17 +0000</lastBuildDate>

    <item>
      <title>Using Hawkular APM on Red Hat&apos;s Microservices Reference Architecture example</title>
      <link>http://www.hawkular.org/blog/2016/09/19/hawkular-apm-on-msa.html</link>
      <author>noreply@hawkular.org (Juraci Paixão Kröhling)</author>
      <pubDate>Mon, 19 Sep 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/09/19/hawkular-apm-on-msa.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The focus of the &lt;a href=&quot;https://github.com/hawkular/hawkular-apm/releases/tag/0.10.0.Final&quot;&gt;latest Hawkular APM release&lt;/a&gt;
has been in building a compatibility layer for ZipKin-aware applications. In this blog post, we&amp;#8217;ll show how Hawkular APM can
be used as a drop-in replacement for ZipKin server and UI.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A video demonstrating this approach can also be viewed &lt;a href=&quot;https://www.youtube.com/watch?v=USyGYVYlDIM&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At the end of this blog post, we should see data flowing from the target applications to Hawkular APM, without any code changes
to the application themselves:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-09-19-screenshot3.png&quot; alt=&quot;Hawkular APM Dashboard&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Red Hat offers a &lt;a href=&quot;http://developers.redhat.com/products/cdk/overview/&quot;&gt;Container Developer Toolkit&lt;/a&gt;, or CDK, for its customers,
allowing for a quick start on developing applications following the best practices on the microservices architecture.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Along with the CDK, Red Hat publishes also a &lt;a href=&quot;https://github.com/redhat-helloworld-msa&quot;&gt;&quot;MSA - Hello World Microservices Architecture&quot;&lt;/a&gt;,
which demonstrates how applications might benefit from this architecture. It can also be used as seed for your own
projects, as it shows how activities can be accomplished by using several technology stacks, from &lt;code&gt;nodejs/express&lt;/code&gt; to &lt;code&gt;Wildfly Swarm&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For Hawkular APM, this offers a great way to test our APIs on different stacks, specially our ZipKin compatibility layer. Ideally,
one would simply point the ZipKin URL setting to a Hawkular APM server and everything would just work.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And that&amp;#8217;s what we are going to do in this post!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_getting_started_with_cdk_and_msa&quot;&gt;Getting started with CDK and MSA&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_cdk_and_msa&quot;&gt;CDK and MSA&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To setup CDK and MSA, we suggest that you follow the &lt;a href=&quot;http://bit.ly/msainstructions&quot;&gt;official instructions&lt;/a&gt;. At the end of the process,
you should have all the services running. Open the &quot;frontend&quot; service, and click around a bit. For instance:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Click on the &quot;Browser as client&quot; menu item, which will make the browser make Ajax calls directly to the API endpoints&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on the &quot;API Gateway&quot; menu item: on this case, the browser makes a single call to the API Gateway, which in turn makes single API calls
to each of the services&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on &quot;Service chaining&quot; menu item: on this case, each service calls the &quot;next&quot;, adding the results to its own payload.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It could be interesting to make a note about the hostnames, to later make sure that you have &quot;new&quot; Docker containers running.
The default output for each of the services include the hostname. Concretely, the output &lt;code&gt;ola-7-9wa31&lt;/code&gt; means that the service &lt;code&gt;ola&lt;/code&gt; is
running on the container with hostname &lt;code&gt;9wa31&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Open the ZipKin interface, and make sure that data is arriving there. Check also the different visualizations for the different operations.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_hawkular_apm&quot;&gt;Hawkular APM&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We&amp;#8217;ll use the &lt;a href=&quot;http://www.hawkular.org/blog/2016/07/14/hawkular-apm-openshift.html&quot;&gt;previous post on running Hawkular APM on OpenShift&lt;/a&gt;
as base to install our Hawkular APM alongside the other MSA examples. For this blog post, we&amp;#8217;ll prepare our own image based on the official
Dockerfile for Hawkular APM. For that, fork and clone &lt;a href=&quot;https://github.com/jboss-dockerfiles/hawkular&quot;&gt;our repository&lt;/a&gt; and run:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;cd hawkular-apm-server
oc new-app jboss/hawkular-apm-server
oc new-build --binary --name=hawkular-apm-server -l app=hawkular-apm-server
oc start-build hawkular-apm-server --from-dir=. --follow
oc expose service hawkular-apm-server&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Alternatively, the image from Docker Hub can be used, although it&amp;#8217;s possible that networking issues might occur. If you use this option and
the build takes more than, say, 10 minutes to finish, do a &lt;code&gt;vagrant ssh&lt;/code&gt; to enter the box, and check the logs via &lt;code&gt;journalctl -f&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;oc new-app jboss/hawkular-apm-server
oc expose service hawkular-apm-server&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This should create a new image stream, build, deployment and application.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Before anything else, make note of the admin and password credentials. Those can be seen on the build logs:
Browse → Deployments → hawkular-apm-server → Click on the latest deployment → Logs.
A sample output is as follows:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code&gt;------------------------------------
ATTENTION ATTENTION ATTENTION ATTENTION
We automatically created an admin user for you to access the Hawkular APM web interface:
Username: adminQqyEF7i
Password: KS3mmZbkdhRZ5y7oF
------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Once this is done, there should be a new service available on OpenShift&amp;#8217;s dashboard, with an URL like &lt;code&gt;&lt;a href=&quot;http://hawkular-apm-server-helloworld-msa.rhel-cdk.10.1.2.2.xip.io&quot; class=&quot;bare&quot;&gt;http://hawkular-apm-server-helloworld-msa.rhel-cdk.10.1.2.2.xip.io&lt;/a&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now that everything is in place and working as expected, it&amp;#8217;s time to switch from ZipKin to Hawkular APM!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_making_the_switch&quot;&gt;Making the switch&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Each one of the MSA modules has a &lt;code&gt;Dockerfile&lt;/code&gt;, specifying a &lt;code&gt;ENV ZIPKIN_SERVER_URL &lt;a href=&quot;http://zipkin-query:9411&quot; class=&quot;bare&quot;&gt;http://zipkin-query:9411&lt;/a&gt;&lt;/code&gt;.
From there, we have some options:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Change each &lt;code&gt;Dockerfile&lt;/code&gt; to make the env var point to &lt;code&gt;&lt;a href=&quot;http://hawkular-apm-server:8080&quot; class=&quot;bare&quot;&gt;http://hawkular-apm-server:8080&lt;/a&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Specify the &lt;code&gt;-e&lt;/code&gt; option to Docker, to override the &lt;code&gt;ZIPKIN_SERVER_URL&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set an Environment Variable in the OpenShift deployment&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We&amp;#8217;ll choose the last option, as we consider that as the less invasive one, inline with the Microservice idea that configuration should not
be a concern for the application.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;oc env dc/aloha       ZIPKIN_SERVER_URL=&quot;http://hawkular-apm-server:8080&quot;
oc env dc/api-gateway ZIPKIN_SERVER_URL=&quot;http://hawkular-apm-server:8080&quot;
oc env dc/bonjour     ZIPKIN_SERVER_URL=&quot;http://hawkular-apm-server:8080&quot;
oc env dc/hola        ZIPKIN_SERVER_URL=&quot;http://hawkular-apm-server:8080&quot;
oc env dc/ola         ZIPKIN_SERVER_URL=&quot;http://hawkular-apm-server:8080&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Wait a bit until OpenShift finishes deploying the new containers, and hit &quot;Refresh Results&quot; on the frontend. Note that the hostnames will change, indicating
that a new container is running. At around the same time, you should see the first data flowing to Hawkular APM.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Spoiler alert&lt;/strong&gt;: after the first two screenshots that we added for orientation, we also included some screenshots with the final result.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_overriding_the_environment_variable_on_an_openshift_deployment&quot;&gt;Overriding the environment variable on an OpenShift deployment:&lt;/h3&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-09-19-screenshot7.png&quot; alt=&quot;Environment variable in OpenShift deployment&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_hawkular_apm_deployment_logs_on_openshift&quot;&gt;Hawkular APM Deployment logs on OpenShift:&lt;/h3&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-09-19-screenshot6.png&quot; alt=&quot;Deployment log&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_sample_of_the_aggregated_visualization_for_the_service_chaining_technique&quot;&gt;Sample of the aggregated visualization for the &quot;Service chaining&quot; technique:&lt;/h3&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-09-19-screenshot1.png&quot; alt=&quot;Service chaining&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_details_about_a_single_instance_of_the_service_chaining_technique&quot;&gt;Details about a single instance of the &quot;Service chaining&quot; technique:&lt;/h3&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-09-19-screenshot5.png&quot; alt=&quot;Screenshot 5&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_sample_of_the_aggregated_visualization_for_the_api_gateway_technique&quot;&gt;Sample of the aggregated visualization for the &quot;API Gateway&quot; technique:&lt;/h3&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-09-19-screenshot2.png&quot; alt=&quot;API Gateway&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_details_about_a_single_instance_of_the_api_gateway_technique&quot;&gt;Details about a single instance of the &quot;API Gateway&quot; technique:&lt;/h3&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-09-19-screenshot4.png&quot; alt=&quot;Screenshot 4&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Consuming Hawkular API over SSL with self signed certificates</title>
      <link>http://www.hawkular.org/blog/2016/09/14/consuming-hawkular-api-over-ssl.html</link>
      <author>noreply@hawkular.org (Josejulio Martínez)</author>
      <pubDate>Wed, 14 Sep 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/09/14/consuming-hawkular-api-over-ssl.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this post I&amp;#8217;ll show you how to trust self-signed certificates for use with Ruby client, used on projects such as ManageIQ and HawkFX.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you haven&amp;#8217;t already, follow this guide for
&lt;a href=&quot;http://www.hawkular.org/hawkular-services/docs/installation-guide/secure-comm.html&quot;&gt;securing communications&lt;/a&gt; on your Hawkular server, because we&amp;#8217;ll make use of the files generated by that guide.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As today, there are Hawkular clients for the following programming languages:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-client-java&quot;&gt;Java&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-client-python&quot;&gt;Python&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-client-go&quot;&gt;Go&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/hawkular/hawkular-client-ruby&quot;&gt;Ruby&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Hawkular Ruby client lets you connect using a secure connection. Buying a certificate from a trusted SSL vendor to host your own development server can be cost-prohibitive or just complicated.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you are going to self-sign your own development certificates for use outside of Java, you will need to do some additional steps to tell your consumer environment to trust them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For this you will need to:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;c_rehash&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Identify where OpenSSL reads certificates and keys from.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hand over your certificate to OpenSSL in PEM format and rehash.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_install_c_rehash&quot;&gt;Install c_rehash&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;code&gt;c_rehash&lt;/code&gt; is an OpenSSL utility to create symbolic links to files by their hash values.
This format is used by OpenSSL to find certificates.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can install it on fedora by executing&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ sudo dnf install openssl-perl&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_identify_where_openssl_reads_certificates_and_keys_from&quot;&gt;Identify where OpenSSL reads certificates and keys from.&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;OpenSSL reads certificates and keys from a specific path, you will need to copy your self-signed certificates there.
You can find this path by running the following command:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ openssl version -d
OPENSSLDIR: &quot;/etc/pki/tls&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this case, OpenSSL files are located in &lt;code&gt;/etc/pki/tls&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
The above output is from Fedora 24, it should be similar on other operative systems.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock warning&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Warning&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
It seems that if you are using RVM to manage your Ruby versions, you should ignore this
and use: $rvm_path/usr/ssl
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_hand_over_your_certificate_to_openssl_in_pem_format_and_rehash&quot;&gt;Hand over your certificate to OpenSSL in PEM format and rehash.&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;code&gt;c_rehash&lt;/code&gt; specs the certificates in PEM format, so before proceeding we need make sure is in PEM format. The &lt;a href=&quot;http://www.hawkular.org/hawkular-services/docs/installation-guide/secure-comm.html&quot;&gt;guide&lt;/a&gt; for securing communications on Hawkular produces the certificate in DER format it needs to be converted to PEM format.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;OpenSSL can be used as follow to convert &lt;code&gt;hawkular.cert&lt;/code&gt; from DER to PEM format.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ openssl x509 -inform der -in hawkular.cert -out hawkular.pem&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Once created, copy your PEM certificate to &lt;code&gt;OPENSSLDIR/certs&lt;/code&gt; (you will need root permissions) and run c_rehash on that dir.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ sudo cp hawkular.pem OPENSSLDIR/certs
$ sudo c_rehash OPENSSLDIR/certs&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you are using any application that relies on JRuby (such as HawkFX) you will probably need to use old-style hashes. To do that run c_rehash a second time with flags to use the old-style hash and to keep existing hashes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ sudo c_rehash -old -n OPENSSLDIR/certs&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That should be enough to let Ruby client or any application that uses it (e.g. HawkFX) to communicate with Hawkular Server over SSL.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To use on HawkFX simply put the address with https and the secure port.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-09-14-hawkfx-over-https.png&quot; alt=&quot;HawkFX over https&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Metrics 0.19.0 - Release</title>
      <link>http://www.hawkular.org/blog/2016/09/05/hawkular-metrics-0.19.0.Final-released.html</link>
      <author>noreply@hawkular.org (Stefan Negrea)</author>
      <pubDate>Mon, 5 Sep 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/09/05/hawkular-metrics-0.19.0.Final-released.html</guid>
      	<description>
	&lt;p&gt;I am happy to announce release 0.19.0 of Hawkular Metrics. This release is anchored by performance enhancements and a lot of REST API enhancements.&lt;/p&gt;&lt;p&gt;Here is a list of major changes:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;REST API - Query Improvements&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;It is now possible to use relative timestamps when querying for data via &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; added to timestamp parameters. When used, the timestamp is relative to the local system timestamp (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-358&quot;&gt;HWKMETRICS-358&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-457&quot;&gt;HWKMETRICS-457&lt;/a&gt;)&lt;/li&gt;
    &lt;li&gt;Querying for data from earliest available data point has been expanded to raw data queries for gauges and counters (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-435&quot;&gt;HWKMETRICS-435&lt;/a&gt;)&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;DELETE tenants/{id}&lt;/code&gt; has been added to allow the deletion of an entire tenant (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-446&quot;&gt;HWKMETRICS-446&lt;/a&gt;)&lt;/li&gt;
    &lt;li&gt;AvailabilityType is serialized as simple string in bucket data points (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-436&quot;&gt;HWKMETRICS-436&lt;/a&gt;)&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Performance Enhancements&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;The write performance has been increased by 10% across the board after reorganizing the meta-data internal indexes. (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-422&quot;&gt;HWKMETRICS-422&lt;/a&gt;)&lt;/li&gt;
    &lt;li&gt;GZIP replaced LZ4 as the compression algorithm for the data table. This produces anywhere between 60% to 70% disk usage savings over LZ4. (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-454&quot;&gt;HWKMETRICS-454&lt;/a&gt;)&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Job Scheduler - Improvements&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;The newly introduced internal job scheduler received several improvements and fixes; the main focus was to enhance the scalability and fault tolerance.&lt;/li&gt;
    &lt;li&gt;The job scheduler will be used only for internal tasks.&lt;/li&gt;
    &lt;li&gt;For more details: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-221&quot;&gt;HWKMETRICS-221&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-451&quot;&gt;HWKMETRICS-451&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-453&quot;&gt;HWKMETRICS-453&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-94&quot;&gt;HWKMETRICS-94&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Hawkular Metrics Clients&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Python: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-python&quot;&gt;https://github.com/hawkular/hawkular-client-python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Go: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-go&quot;&gt;https://github.com/hawkular/hawkular-client-go&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Ruby: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-ruby&quot;&gt;https://github.com/hawkular/hawkular-client-ruby&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Java: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-java&quot;&gt;https://github.com/hawkular/hawkular-client-java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Release Links&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Github Release: &lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/releases/tag/0.19.0&quot;&gt;https://github.com/hawkular/hawkular-metrics/releases/tag/0.19.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;JBoss Nexus Maven artifacts: &lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Jira release tracker: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12331192&quot;&gt;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12331192&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;A big &quot;Thank you&quot; goes to John Sanda, Thomas Segismont, Mike Thompson, Matt Wringe, Michael Burman, Joel Takvorian, and Heiko Rupp for their project contributions.&lt;/p&gt;
	</description>
    </item>
    <item>
      <title>Metric Data Analysis using the Apache Spark</title>
      <link>http://www.hawkular.org/blog/2016/08/31/spark-metric-analysis.html</link>
      <author>noreply@hawkular.org (Jiri Kremser)</author>
      <pubDate>Wed, 31 Aug 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/08/31/spark-metric-analysis.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The goal of this blog post is to show how to easily connect &lt;a href=&quot;https://spark.apache.org/&quot;&gt;Apache Spark&lt;/a&gt; to the
Cassandra with the metric data; perform simple transformation on the data as well as some examples of calculating correlation
between the two time series data streams. Last but not least we will show how to create a
&lt;a href=&quot;https://en.wikipedia.org/wiki/K-means_clustering&quot;&gt;k-means&lt;/a&gt; clustering model.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-08-31-spark-logo.png&quot; alt=&quot;Spark logo&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The situation is visualized on the figure bellow. After the WildFly Agent was collecting the data for some time period and
reporting them to Hawkular Metrics. Hawkular Metrics stores them into Cassandra to which we will be connecting with Spark.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-08-31-spark.png&quot; alt=&quot;Components interaction&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_initialization&quot;&gt;Initialization&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;First we need to create a spark context with the &lt;code&gt;spark.cassandra.connection.host&lt;/code&gt; property correctly set.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;val conf = new SparkConf()
  .setAppName(&quot;HelloHawkular&quot;)
  .setMaster(&quot;local&quot;)
  .set(&quot;spark.cassandra.connection.host&quot;, &quot;127.0.0.1&quot;)
val sc = new SparkContext(conf)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It is very simple, the only assumption here is that the &lt;code&gt;spark-cassandra-connector&lt;/code&gt; jar is on the class path.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
Apache Spark is completely written in Scala so also the examples are written in Scala.
Although, it provides also Java and Python APIs, using the language it has been written in is the best choice,
because one can track down the calls in the (native) source code.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_reading_the_data_from_cassandra&quot;&gt;Reading the data from Cassandra&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let&amp;#8217;s create a &quot;Resilient Distributed Dataset&quot; (RDD) from Cassandra table called &quot;data&quot; in &quot;hawkular_metrics&quot; keyspace.
Resilient Distributed Datasets have &lt;a href=&quot;https://spark.apache.org/docs/latest/api/scala/#org.apache.spark.rdd.RDD&quot;&gt;plenty&lt;/a&gt;
of useful operations defined. RDD is a leitmotif in Spark, all the data manipulation
is represented by chaining the operations on RDDs. It is an immutable structure that inherently supports parallelization.
Generally speaking, RDDs can be created as a result of calling a method on another RDD(s)
or by calling a method the &lt;code&gt;SparkContext&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;val rdd: RDD[CassandraRow] = sc.cassandraTable(&quot;hawkular_metrics&quot;, &quot;data&quot;)
println(rdd.count)
println(rdd.first)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This prints the number of rows (in my case 245609) and the very first row, just to have an idea how it looks like:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;CassandraRow{tenant_id: hawkular, type: 0, metric: MI~R~[e69a19f7-76e7-4fd2-8ed5-864d1570f3ff/Local~/deployment=hawkular-alerts-rest.war/subsystem=ejb3/singleton-bean=PartitionManagerImpl]~MT~Singleton EJB Metrics~Execution Time, dpart: 0, time: baef5a00-6e31-11e6-96d2-5f826fbc8eb1, aggregates: {}, availability: null, data_retention: null, l_value: null, n_value: 0.0, s_value: null, tags: {}}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The data table contains all the metrics so we need to filter only what we are interested in.
RDD provides a &lt;code&gt;groupBy&lt;/code&gt; method that takes a function that is applied on all the data in the RDD and returns the key by
which the grouping should be done. We can group by the &lt;code&gt;metric&lt;/code&gt;. This can be useful when working with more
metrics. But for our purposes, let&amp;#8217;s just do simple filter method.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;val feedId = &quot;e69a19f7-76e7-4fd2-8ed5-864d1570f3ff&quot;
val metric1 = &quot;Total Memory&quot;
val metric2 = &quot;Available Memory&quot;
val total: RDD[Double] = rdd.filter(x =&amp;gt; {
    val metricId = x.getString(&quot;metric&quot;)
    metricId.contains(feedId) &amp;amp;&amp;amp; metricId.contains(metric1)
  })
  .map(_.getDouble(&quot;n_value&quot;))
  .repartition(8)

val free: RDD[Double] = rdd.filter(x =&amp;gt; {
    val metricId = x.getString(&quot;metric&quot;)
    metricId.contains(feedId) &amp;amp;&amp;amp; metricId.contains(metric2)
  })
  .map(_.getDouble(&quot;n_value&quot;))
  .repartition(8)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;code&gt;repartition()&lt;/code&gt; method needs to be called because methods like &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;flatMap&lt;/code&gt; and similar have impact on the
number of elements in each partition. We need those two RDDs to have the same amount of partitions and the same amount
of elements in each partition in order to be able to apply some statistical methods on them. Method called &lt;code&gt;coalesce&lt;/code&gt;
is an alternative option to use here. Perhaps even better because it does not shuffle the data over the network in case
of multi node environment. However, the data model of Hawkular metrics ensures that data from one metric are always on
the same node.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now, we have two RDDs. The &lt;code&gt;total&lt;/code&gt; and &lt;code&gt;free&lt;/code&gt; that represent the amounts of memory that was &quot;free&quot; on the platform and the total value.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_doing_something_fancy&quot;&gt;Doing something fancy&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let us create a derived RDD that will represent the used memory on the platform.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;val used: RDD[Double] = total.zip(free).map(e =&amp;gt; e._1 - e._2)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;What we have done here is that we have created a new RDD, representing a metric data that were calculated using two
other metric streams. The transformation was trivial, but RDD provides also methods for aggregation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now, let&amp;#8217;s calculate the correlation between the used and free memory. There should be some correlation, right?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;val correlation: Double = Statistics.corr(used, free, &quot;pearson&quot;)
println(s&quot;Correlation is: $correlation&quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This will print &lt;code&gt;Correlation is: -0.9999999999999781&lt;/code&gt;. That means there is total negative
&lt;a href=&quot;https://en.wikipedia.org/wiki/Pearson_product-moment_correlation_coefficient&quot;&gt;correlation&lt;/a&gt; between the two
(the higher the first one, the lower the second one).
This example was artificial, but in general, one can calculate the correlation between any two metric streams. Of course,
correlation doesn&amp;#8217;t imply causation, so we can&amp;#8217;t extract any higher level information like business rules here.
But we obtain some information that metrics are somehow related together and with further analysis we can for example detect, that
change in one metric stream always precedes the change in the second metric stream. Again, it&amp;#8217;s not causation, but something stronger than
correlation. &lt;a href=&quot;https://en.wikipedia.org/wiki/Granger_causality&quot;&gt;Granger causality test&lt;/a&gt; is possible method,
nonetheless, this is out of the scope of this blog post.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Last thing, I wanted to show is the k-means clustering.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;val usedMemoryVector = used.map(x =&amp;gt; Vectors.dense(x))
val numClusters = 3
val numIterations = 20
val clusters: KMeansModel = KMeans.train(usedMemoryVector, numClusters, numIterations)
println(&quot;Cluster centers:&quot;)
clusters.clusterCenters.foreach(println)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The code above will print the three cluster representatives. It is also possible to test the new data point by
calling &lt;code&gt;clusters.predics(point)&lt;/code&gt; that will return the expected cluster the point is attracted to.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There is &lt;a href=&quot;https://spark.apache.org/docs/latest/mllib-guide.html&quot;&gt;much more&lt;/a&gt; in the MLlib. One can find outliers,
common patterns, do a classification, etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock tip&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Tip&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
All the code examples can be &lt;a href=&quot;https://github.com/Jiri-Kremser/spark-hawkular-demo&quot;&gt;downloaded&lt;/a&gt; and run against the Cassandra with the metric data.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_summary&quot;&gt;Summary&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;By using the &lt;code&gt;spark-cassandra-connector&lt;/code&gt;, we were able to get the data from C* as RDD, call the simple operations on RDDs
and some smart functions from the MLlib package, but we entirely neglected the temporal aspect of the data. The only
reason it worked reasonably well is because the data is sorted in the table by the timestamp. There is a Spark library for
time series data out there called &lt;a href=&quot;https://github.com/sryza/spark-timeseries&quot;&gt;spark-ts&lt;/a&gt;. Nice improvement would
be connecting the &lt;code&gt;spark-cassandra-connector&lt;/code&gt; and &lt;code&gt;spark-ts&lt;/code&gt; to provide convenient way of working with time series data
on top of Cassandra.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It is also worth mentioning that Spark does not offer only data processing on the data that was obtained by some &quot;data pump&quot;.
Spark is so popular because it allows running the algorithms close to the data. In our case we had only single headed Cassandra,
but in general it can be run on a cluster consisting of multiple nodes. This, of course, requires the wisely chosen
partition keys in the schema respecting it when working with RDDs.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Vert.x agent inventory implementation</title>
      <link>http://www.hawkular.org/blog/2016/08/11/vertx-agent-inventory-impl.html</link>
      <author>noreply@hawkular.org (Austin Kuo)</author>
      <pubDate>Thu, 11 Aug 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/08/11/vertx-agent-inventory-impl.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hi all,
This is Austin, who is responsible for the gsoc project &lt;a href=&quot;https://developer.jboss.org/wiki/JBossCommunityGoogleSummerOfCode2016Ideas#jive_content_id_Hawkularagent_for_vertx&quot;&gt;Hawkular-agent for vert.x&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;What I do is to implement the functionality to report the running vertx instances to the hawkular inventory service.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_reported_entities&quot;&gt;Reported Entities&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;_feed_and_root_resource&quot;&gt;Feed and Root resource&lt;/h4&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;A feed represents the vertx instance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A root resource which is the parent of all other subresources.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;_subresources&quot;&gt;Subresources&lt;/h4&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;1 eventbus resource&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1 http client resource&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1 net client resource&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1 datagram socket resource&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;0&amp;#8230;&amp;#8203;N http server resources depends on how many http servers are running.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;0&amp;#8230;&amp;#8203;N net server resources depends on how many net servers are running.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_hawkfx_snapshot&quot;&gt;Hawkfx Snapshot&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You now can view the inventory structure from the &lt;a href=&quot;https://github.com/pilhuhn/hawkfx&quot;&gt;hawkfx client&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-08-11-vertx-agent-inventory-snapshot.png&quot; alt=&quot;Hawkfx snapshot&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_how_to_use_it&quot;&gt;How to use it?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The implementation is now at the brach &lt;a href=&quot;https://github.com/vert-x3/vertx-hawkular-metrics/tree/inventory-reporter&quot;&gt;inventory-reporter&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Just follow the instruction in the repository but&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock important&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Important&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
You have to enable inventory and provide the feed id and root resource id in &lt;strong&gt;VertxHawkularOptions&lt;/strong&gt;.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;VertxHawkularOptions vertxHawkularOptions = new VertxHawkularOptions();
vertxHawkularOptions.setEnabled(true); // By default Vert.x Metrics is disabled

VertxOptions vertxOptions = new VertxOptions();
vertxOptions.setMetricsOptions(vertxHawkularOptions);
vertxOptions.setInventoryEnabled(true);
vertxOptions.setFeedId(&quot;vertx-feed-id&quot;);
vertxOptions.setVertxRootResourceId(&quot;root-resource-id&quot;);&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Metrics 0.18.0 - Release</title>
      <link>http://www.hawkular.org/blog/2016/08/01/hawkular-metrics-0.18.0.Final-released.html</link>
      <author>noreply@hawkular.org (Stefan Negrea)</author>
      <pubDate>Mon, 1 Aug 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/08/01/hawkular-metrics-0.18.0.Final-released.html</guid>
      	<description>
	&lt;p&gt;I am happy to announce release 0.18.0 of Hawkular Metrics. This release is anchored by performance enhancements and a new internal job scheduler.&lt;/p&gt;&lt;p&gt;Here is a list of major changes:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;InfluxDB API - REMOVED&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;The InfluxDB API has been removed from the code base.&lt;/li&gt;
    &lt;li&gt;This was an addition to make project integrations easier. As the REST interface matured, the role of the InfluxDB compatibility interface was reduced only serve as the Grafana interface. With the release of the native Grafana plugin, this was no longer needed.&lt;/li&gt;
    &lt;li&gt;For more details: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-431&quot;&gt;HWKMETRICS-431&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Fetching Stats Data - Multiple Metrics - Experimental&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;Prior to this release, it was possible to only fetch stats for a single type metric. This release added &lt;code&gt;POST /metrics/stats/query&lt;/code&gt; endpoint that allows querying for mixed stats for multiple metrics.&lt;/li&gt;
    &lt;li&gt;The endpoint accepts a list of metrics ids and allows filtering by providing start time, end time, sort order and limit, as well as the typical stats options such as bucket duration, number of buckets, or percentiles.&lt;/li&gt;
    &lt;li&gt;For more details: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-424&quot;&gt;HWKMETRICS-424&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Performance Enhancements&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;All the JAX-RS handlers are now singletons. This reduces the GC pressure and was relatively simple change since the code was completely stateless. This lead to a significant performance increase. For more details: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-437&quot;&gt;HWKMETRICS-437&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Job Scheduler - New Implementation - Experimental&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;The new internal job scheduler is by far the biggest contribution in this release.&lt;/li&gt;
    &lt;li&gt;This is the foundation for a number of features that will make their way into upcoming releases; a few examples are metric aggregates, adjustable data retention, or complex data purges.&lt;/li&gt;
    &lt;li&gt;The implementation keeps the Hawkular Metrics server stateless so scaling will be just as easy going forward, with zero additional configuration.&lt;/li&gt;
    &lt;li&gt;The job scheduler will be used only for internal tasks.&lt;/li&gt;
    &lt;li&gt;For more details: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-360&quot;&gt;HWKMETRICS-360&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-375&quot;&gt;HWKMETRICS-375&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Hawkular Metrics Clients&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Python: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-python&quot;&gt;https://github.com/hawkular/hawkular-client-python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Go: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-go&quot;&gt;https://github.com/hawkular/hawkular-client-go&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Ruby: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-ruby&quot;&gt;https://github.com/hawkular/hawkular-client-ruby&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Java: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-java&quot;&gt;https://github.com/hawkular/hawkular-client-java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Release Links&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Github Release: &lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/releases/tag/0.18.0&quot;&gt;https://github.com/hawkular/hawkular-metrics/releases/tag/0.18.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;JBoss Nexus Maven artifacts: &lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Jira release tracker: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12330870&quot;&gt;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12330870&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;A big &quot;Thank you&quot; goes to John Sanda, Thomas Segismont, Mike Thompson, Matt Wringe, Michael Burman, and Heiko Rupp for their project contributions.&lt;/p&gt;
	</description>
    </item>
    <item>
      <title>What is new in Android Client</title>
      <link>http://www.hawkular.org/blog/2016/07/19/android-client-progess.html</link>
      <author>noreply@hawkular.org (Anuj Garg)</author>
      <pubDate>Tue, 19 Jul 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/07/19/android-client-progess.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hello to all. My last post was on March 2016 and after that a lot of things have changed. Well here is progress report of Android client.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_stepwise_short_points&quot;&gt;Stepwise short points&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Below are the steps taken till now.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Tokens are removed as Hawkular no longer use keycloak for authentication.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Filter to allow and hide acknowledged alerts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Separate activity for detailed alert.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reading and posting comment on alert.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inventory explorer is added.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add and remove favourite metrics.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jump to associated metric from explorer.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_detailed_alert_screen&quot;&gt;Detailed Alert Screen&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Detailed screen for alert get a detailed information about alert, associated resource, trigger that caused it and state of alert etc. Now you can also add comment/note to alerts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-07-19-android-alert_detail.png&quot; alt=&quot;Detailed Alert Screen&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_inventory_explorer_list_view&quot;&gt;Inventory Explorer (List view)&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Inventory explorer let the user move across the the feeds, resources and metrics. User can long press to metric to add a metric from explorer view to favourite metrics, Which is then available to home screen. If a single press is made then you are directed to chart view of metric.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-07-19-android-explorer.png&quot; alt=&quot;Inventory Explorer&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_watch_the_demo_online&quot;&gt;Watch the demo online&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Visit the recording here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;600&quot; height=&quot;400&quot; src=&quot;http://www.hawkular.org/https://www.youtube.com/embed/SF_3ZiUqcAY?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Monitoring Application Performance within Openshift</title>
      <link>http://www.hawkular.org/blog/2016/07/14/hawkular-apm-openshift.html</link>
      <author>noreply@hawkular.org (Gary Brown)</author>
      <pubDate>Thu, 14 Jul 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/07/14/hawkular-apm-openshift.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This post will show how to use the Hawkular APM project, previously known as Hawkular BTM, to monitor an application running within Openshift. To achieve this both the Hawkular APM server, and the application (a vert.x Javascript example), will be deployed as Docker images.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We will use the Openshift CLI, and therefore will need to login. For example, to login into the Openshift CDK environment:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;oc login 10.1.2.2:8443 -u openshift-dev -p devel&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_deploy_hawkular_apm_server&quot;&gt;Deploy Hawkular APM Server&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The first step is to deploy the Hawkular APM server. There are two ways that this can be achieved.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;_image_from_docker_hub&quot;&gt;Image from Docker Hub&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Hawkular APM server has a docker image registered at &lt;a href=&quot;https://hub.docker.com/r/jboss/hawkular-apm-server&quot;&gt;Docker Hub&lt;/a&gt;. This can be deployed to Openshift using the following commands:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;oc new-app jboss/hawkular-apm-server
oc expose service hawkular-apm-server&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;em&gt;new-app&lt;/em&gt; command deploys the image as a service, and the &lt;em&gt;expose&lt;/em&gt; command makes it available via a stable URI.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
If the deploy fails with an &quot;unknown manifest&quot; error in the openshift events log, this is due to a &lt;a href=&quot;http://lists.openshift.redhat.com/openshift-archives/users/2016-June/msg00054.html&quot;&gt;known docker issue related to a change between version 1.9 and 1.10&lt;/a&gt;. In this case, use the local deploy approach described below.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;_local_image&quot;&gt;Local Image&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To deploy the APM server from a local build, it will be necessary to get the &lt;a href=&quot;https://github.com/jboss-dockerfiles/hawkular/blob/8ffb752b68c0f49a2150fe345e660c53c32fb954/hawkular-apm-server/Dockerfile&quot;&gt;&lt;em&gt;Dockerfile&lt;/em&gt;&lt;/a&gt;. Place this file in a suitable folder and from that location run the following:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;oc new-build --binary --name=hawkular-apm-server
oc start-build hawkular-apm-server --from-dir=. --follow
oc new-app hawkular-apm-server
oc expose service hawkular-apm-server&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_hawkular_apm_server_in_the_openshift_console&quot;&gt;Hawkular APM Server in the Openshift Console&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Once either of these options has been used to deploy the Hawkular APM Server, it can be seen within the Openshift console.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-07-14-osapmserver.png&quot; alt=&quot;Hawkular APM Server&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. Hawkular APM Server deployed in Openshift&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_deploy_example_vert_x_javascript_application&quot;&gt;Deploy Example Vert.x Javascript Application&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The application that we will monitor is a Vert.x Javascript example application. Either clone the &lt;a href=&quot;https://github.com/vert-x3/vertx-examples&quot;&gt;github repository&lt;/a&gt; or simply copy the two relevant files from the &lt;a href=&quot;https://github.com/vert-x3/vertx-examples/tree/master/docker-examples/vertx-docker-javascript&quot;&gt;vertx-examples/docker-examples/vertx-docker-javascript&lt;/a&gt; folder.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To enable the application to be instrumented by Hawkular APM, it will be necessary to add the following lines in the &lt;em&gt;Dockerfile&lt;/em&gt;, before the &lt;em&gt;EXPOSE 8080&lt;/em&gt; line:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;ENV HAWKULAR_APM_VERSION 0.9.0.Final

ADD https://github.com/hawkular/hawkular-apm/releases/download/$HAWKULAR_APM_VERSION/hawkular-apm-agent.jar hawkular-apm-agent.jar

ENV JAVA_OPTS -javaagent:/hawkular-apm-agent.jar&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then, from the same folder in which these files are located, run the following:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;oc new-build --binary --name=vertx-javascript
oc start-build vertx-javascript --from-dir=. --follow
oc new-app -e HAWKULAR_APM_URI=http://hawkular-apm-server-sample-project.rhel-cdk.10.1.2.2.xip.io -e HAWKULAR_APM_USERNAME=jdoe -e HAWKULAR_APM_PASSWORD=password vertx-javascript

oc expose service vertx-javascript&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
The &lt;em&gt;HAWKULAR_APM_URI&lt;/em&gt; must use the URI exposed by the Hawkular APM server, as shown in the console image above.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_example_vert_x_javascript_application_in_the_openshift_console&quot;&gt;Example Vert.x Javascript Application in the Openshift Console&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Once these commands have been performed, the Openshift console should also now include:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-07-14-osvertx.png&quot; alt=&quot;Vert.x Javascript example&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 2. Vert.x Javascript example deployed in Openshift&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_running_the_example_application&quot;&gt;Running the Example Application&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To access the example Vert.x Javascript application, simply open a browser window at the URL displayed in the console entry for the application (or just select the link which will cause a new tab to be opened). This will cause the simple Javascript application to return a response and show the message &quot;Wild world&quot;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-07-14-osvertxapp.png&quot; alt=&quot;Vert.x Javascript example&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 3. Vert.x Javascript example running within a browser&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now if we access the URL associated with the Hawkular APM server, by simply selecting the link in the Openshift console, we will be presented with a login window. Enter the username &lt;em&gt;jdoe&lt;/em&gt; and password &lt;em&gt;password&lt;/em&gt;, and then you will see some basic information showing the result of executing the Vert.x Javascript application - in this case the application was run multiple times by refreshing the browser page.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-07-14-osapm.png&quot; alt=&quot;APM info&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 4. Application Performance Management information captured from the example application&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_conclusion&quot;&gt;Conclusion&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To summarise, this blog has shown:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;How to monitor an existing application &lt;strong&gt;without requiring any code changes&lt;/strong&gt; simply by adding a few lines to the docker configuration file. Even if it is not possible to modify the application&amp;#8217;s &lt;em&gt;Dockerfile&lt;/em&gt; (i.e. because it is obtained from Docker Hub), it is still possible to achieve the same result by deriving a new &lt;em&gt;Dockerfile&lt;/em&gt; from the image of interest, that contains the additional lines shown in this blog.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How to deploy the Hawkular APM Server, along with the monitored application, as &lt;em&gt;Docker&lt;/em&gt; images that can be run within Openshift.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How to visualise the response time associated with a REST call to a Vert.x Javascript application. In this particular example, a single URL was invoked multiple times - hence only a single entry. However for more complex examples, detailed component information (such as EJBs, Databases, etc) and the dependencies between remotely invoked services, may be shown.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you have any questions please &lt;a href=&quot;http://www.hawkular.org/community/index.html&quot;&gt;contact us&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Getting started with ManageIQ and Hawkular</title>
      <link>http://www.hawkular.org/blog/2016/07/14/hawkular-miq.html</link>
      <author>noreply@hawkular.org (Heiko W. Rupp)</author>
      <pubDate>Thu, 14 Jul 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/07/14/hawkular-miq.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This post describes the first steps to get started with ManageIQ master and Hawkular-services.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_setup_of_manageiq&quot;&gt;Setup of ManageIQ&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The functionality to support the Hawkular-Middleware provider is not in the Darga-Release.
You will need to build ManageIQ from their master branch.
There is a good &lt;a href=&quot;http://manageiq.org/documentation/development/developer_setup/&quot;&gt;guide on developer setup&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Once you have completed the instructions, you should have ManageIQ available at&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;code&gt;&lt;a href=&quot;http://localhost:3000&quot; class=&quot;bare&quot;&gt;http://localhost:3000&lt;/a&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_setup_of_hawkular_services&quot;&gt;Setup of Hawkular-services&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Run Hawkular-services with some WildFly servers connected. While it is possible to only run Hawkular-services with the built-in agent enabled, you will get more interesting results if you point other instrumented WildFly servers at Hawkular.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_docker&quot;&gt;Docker&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you are a Docker user, you can &lt;a href=&quot;http://pilhuhn.blogspot.de/2016/06/using-hawkular-services-via-docker.html&quot;&gt;follow this route&lt;/a&gt;. This uses Docker-compose to stand up Cassandra 3.7, Hawkular-services and a connected WildFly10 server.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_classical_route&quot;&gt;Classical route&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;div class=&quot;title&quot;&gt;NOTE You need to have Cassandra set up&lt;/div&gt;
&lt;p&gt;The release notes for Hawkular-Services 0.0.5 have a &lt;a href=&quot;http://www.hawkular.org/blog/2016/07/05/hawkular-services-0.0.5.Final.html#_get_started&quot;&gt;Getting started&lt;/a&gt; section that describes how to locally set up Hawkular-services along with the needed Cassandra settings.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To start the hawkular server you should also pass option &lt;code&gt;-Dhawkular.agent.enabled=true&lt;/code&gt; to enable the embedded agent.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Start Hawkular server&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&quot;${HAWKULAR_HOME}/bin/standalone.sh&quot; -Dhawkular.rest.user=&quot;${HAWKULAR_USERNAME}&quot; -Dhawkular.rest.password=&quot;${HAWKULAR_PASSWORD} -Dhawkular.agent.enabled=true&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_the_endpoint&quot;&gt;The endpoint&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Going forward we assume that Hawkular-services listens on &lt;code&gt;&lt;a href=&quot;http://localhost:8080&quot; class=&quot;bare&quot;&gt;http://localhost:8080&lt;/a&gt;&lt;/code&gt; and has a user/password of &lt;em&gt;jdoe/password&lt;/em&gt; defined.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_adding_hawkular_as_provider_in_manageiq&quot;&gt;Adding Hawkular as provider in ManageIQ&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Log into ManageIQ at &lt;code&gt;&lt;a href=&quot;http://localhost:3000&quot; class=&quot;bare&quot;&gt;http://localhost:3000&lt;/a&gt;&lt;/code&gt; with &lt;em&gt;admin/smartvm&lt;/em&gt; as user/password.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then select &lt;em&gt;Middleware&lt;/em&gt; from the menu bar on the left and then &lt;em&gt;Providers&lt;/em&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-main&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-07-14-miq-hawk-menu.png&quot; alt=&quot;Menu in ManageIQ&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. Menu in ManageIQ with Middleware section&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;On that page click on &lt;em&gt;Configuration&lt;/em&gt; and choose &lt;em&gt;Add new provider&lt;/em&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-main&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-07-14-miq-hawk-add.png&quot; alt=&quot;Add provider button&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 2. Add provider menu entry&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Next thing you see is the settings page.
Here you need to choose Hawkular from the type dropdown and fill in the host and port and also the credentials.
When you are done you need to &lt;em&gt;validate&lt;/em&gt; the credentials. If that went well, you can click on &lt;em&gt;add&lt;/em&gt; to add the Hawkular provider.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-main&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-07-14-miq-hawk-settings.png&quot; alt=&quot;Settings for the provider&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 3. Settings to add a new Hawkular provider&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This should take a short while and you should then see a screen with a nice Hawkular logo :-)&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-main&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-07-14-miq-hawk-providers.png&quot; alt=&quot;Overview of Middleware providers&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 4. Overview over middleware providers&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Clicking on the provider name below the icon then leads you to the so called summary page of the provider where you can see an overivew and have links to managed servers etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-main&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-07-14-miq-hawk-provider.png&quot; alt=&quot;Hawkular provider summary&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 5. Hawkular provider summary&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Introducing HawkFX</title>
      <link>http://www.hawkular.org/blog/2016/07/13/hawkfx.html</link>
      <author>noreply@hawkular.org (Heiko W. Rupp)</author>
      <pubDate>Wed, 13 Jul 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/07/13/hawkfx.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;HawkFX is an explorer for Hawkular. It is a pet project of mine and &lt;a href=&quot;https://github.com/pilhuhn/hawkfx&quot;&gt;hosted on Github&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-main&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/hawkfx-main.png&quot; alt=&quot;HawkFX main screen&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. Main screen with availability popup&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_what_is_it&quot;&gt;What is it?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As the Hawkular-services distribution only contains the server and not UI on purpose, I had the need to explore the content of the inventory and metrics. Of course this is easily doable via &lt;code&gt;curl&lt;/code&gt; commands, but ever so often I mistyped or did not correctly escape the forbidden characters in a URL.
At around the same time I intensivated my work on the Hawkular Ruby client, so I started creating some tool in Ruby. I was looking first at some other Ruby UI toolkit, but that did not really please me. After a bit of investigation I came around JRubyFX, which is cool, as it combines Ruby with JavaFX.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_running&quot;&gt;Running&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The explorer requires JRuby in version 9+ and Java8&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you are using &lt;code&gt;rvm&lt;/code&gt; you can select JRuby9 via&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;code&gt;rvm use jruby-9.0.5.0&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There is no distribution yet. So you need to clone the git-repository and use it from source&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;git clone https://github.com/pilhuhn/hawkfx.git
cd hawkfx&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;install and use &lt;code&gt;bundler&lt;/code&gt; to install the required gems:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;gem install bundler
bundle install&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;then run&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;bundle exec jruby hawkfx.rb&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_more&quot;&gt;More&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In an earlier stage of HawkFX I wrote a &lt;a href=&quot;http://pilhuhn.blogspot.de/2016/05/introducing-hawkfx.html&quot;&gt;blog post on it on my personal blog&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Again: this is a pet project of mine with no support.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular and JMX/Jolokia</title>
      <link>http://www.hawkular.org/blog/2016/07/12/hawkular-and-jmx-jolokia.html</link>
      <author>noreply@hawkular.org (John Mazzitelli)</author>
      <pubDate>Tue, 12 Jul 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/07/12/hawkular-and-jmx-jolokia.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Since this is a relatively unknown feature, I decided to write a blog about it to get the word out. Hawkular
has the ability to pull inventory and metric data from JMX via Jolokia and push that data to a Hawkular Server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;See: &lt;a href=&quot;http://management-platform.blogspot.com/2016/07/collecting-jmx-data-and-storing-in.html&quot; class=&quot;bare&quot;&gt;http://management-platform.blogspot.com/2016/07/collecting-jmx-data-and-storing-in.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular and Prometheus</title>
      <link>http://www.hawkular.org/blog/2016/07/12/hawkular-and-prometheus.html</link>
      <author>noreply@hawkular.org (John Mazzitelli)</author>
      <pubDate>Tue, 12 Jul 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/07/12/hawkular-and-prometheus.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Since this is a relatively unknown feature, I decided to write a blog about it to get the word out. Hawkular
has the ability to pull metric data from a Prometheus endpoint and push that data to a Hawkular Server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;See: &lt;a href=&quot;http://management-platform.blogspot.com/2016/07/collecting-prometheus-data-and-storing.html&quot; class=&quot;bare&quot;&gt;http://management-platform.blogspot.com/2016/07/collecting-prometheus-data-and-storing.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Metrics 0.17.0 - Release</title>
      <link>http://www.hawkular.org/blog/2016/07/06/hawkular-metrics-0.17.0.Final-released.html</link>
      <author>noreply@hawkular.org (Stefan Negrea)</author>
      <pubDate>Wed, 6 Jul 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/07/06/hawkular-metrics-0.17.0.Final-released.html</guid>
      	<description>
	&lt;p&gt;I am happy to announce release 0.17.0 of Hawkular Metrics. This release is anchored by performance enhancements and new Grafana Datasource Plugin.&lt;/p&gt;&lt;p&gt;Here is a list of major changes:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Grafana Datasource Plugin - Experimental&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;A new Grafana 3 datasource plugin is now available for Hawkular Metrics. This plugin integrates natively via the REST API.&lt;/li&gt;
    &lt;li&gt;For downloads and installation instructions please visit &lt;a href=&quot;https://github.com/hawkular/hawkular-grafana-datasource&quot;&gt;Hawkular Datasource for Grafana&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;The plugin is developed as an independent project and contributions are welcomed.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;InfluxDB API - DEPRECATED&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;The InfluxDB API has been deprecated and will be removed in the upcoming release.&lt;/li&gt;
    &lt;li&gt;This was an addition to make project integrations easier. As the REST interface matured, the role of the InfluxDB compatibility interface was reduced only serve as the Grafana interface. With the release of the native Grafana plugin, this is no longer needed.&lt;/li&gt;
    &lt;li&gt;For more details: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-411&quot;&gt;HWKMETRICS-411&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Fetching Raw Data - Multiple Metrics - Experimental&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;Prior to this release, it was possible to only fetch raw data points for a single metric. This release added &lt;code&gt;POST */query&lt;/code&gt; endpoint that allows querying for raw data points for multiple metrics.&lt;/li&gt;
    &lt;li&gt;The endpoints are:&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;POST /hawkular/metrics/gauges/raw/query&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;POST /hawkular/metrics/counters/raw/query&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;POST /hawkular/metrics/counters/rates/query&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;POST /hawkular/metrics/strings/raw/query&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;POST /hawkular/metrics/availability/raw/query&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;POST /hawkular/metrics/metrics/raw/query&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;The endpoint accepts a list of metrics ids and allows filtering by providing start time, end time, sort order and limit.&lt;/li&gt;
    &lt;li&gt;For more details: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-393&quot;&gt;HWKMETRICS-393&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Performance Enhancements&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;Two Cassandra driver settings (maxConnectionsPerHost and maxRequestsPerConnection) are now user configurable. Part of the update, the default values have been increased from the driver defaults. The new defaults had a significant performance boost for a simple test deployment. The settings are configurable to allow users to optimize driver behavior for larger Hawkular Metrics deployments. (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-430&quot;&gt;HWKMETRICS-430&lt;/a&gt;)&lt;/li&gt;
    &lt;li&gt;On Linux deployments, the Cassandra driver uses Netty native epoll (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-418&quot;&gt;HWKMETRICS-418&lt;/a&gt;)&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Cassandra&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;Fixed an issue with schema upgrades present in Hawkular Metrics 0.15.0 and 0.16.0. We recommend upgrading from previous versions directly to 0.17.0. For more details: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-425&quot;&gt;HWKMETRICS-425&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;Cassandra 3.7 is now the supported version of Cassandra. Support has been deprecated for Cassandra 3.5.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Hawkular Metrics Clients&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Python: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-python&quot;&gt;https://github.com/hawkular/hawkular-client-python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Go: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-go&quot;&gt;https://github.com/hawkular/hawkular-client-go&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Ruby: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-ruby&quot;&gt;https://github.com/hawkular/hawkular-client-ruby&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Java: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-java&quot;&gt;https://github.com/hawkular/hawkular-client-java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Release Links&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Github Release: &lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/releases/tag/0.17.0&quot;&gt;https://github.com/hawkular/hawkular-metrics/releases/tag/0.17.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;JBoss Nexus Maven artifacts: &lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Jira release tracker: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12330692&quot;&gt;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12330692&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;A big &quot;Thank you&quot; goes to John Sanda, Thomas Segismont, Mike Thompson, Matt Wringe, Michael Burman, and Heiko Rupp for their project contributions.&lt;/p&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Services 0.0.5.Final</title>
      <link>http://www.hawkular.org/blog/2016/07/05/hawkular-services-0.0.5.Final.html</link>
      <author>noreply@hawkular.org (Heiko W. Rupp)</author>
      <pubDate>Tue, 5 Jul 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/07/05/hawkular-services-0.0.5.Final.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Services is a new base line distribution including only the basic Hawkular components, such as Alerts, Inventory and Metrics.
The version &lt;a href=&quot;https://repository.jboss.org/nexus/content/groups/public/org/hawkular/services/hawkular-services-dist/0.0.5.Final/hawkular-services-dist-0.0.5.Final.zip&quot;&gt;0.0.5.Final&lt;/a&gt; has just been released and is ready to be tested and integrated with other projects.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_what_s_in_this_release&quot;&gt;What&amp;#8217;s in this release&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This release has updated components:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Inventory is now at v 0.17.2, which features a new api. The old api endpoint has been moved to &lt;code&gt;/deprecated&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hawkular-Metrics is at v 0.17.0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hawkular-agent has been bumped to v 0.20.0 to make use of the new Inventory api. Please note that some inventory objects now have a different name.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_hawkular_ruby_client&quot;&gt;Hawkular Ruby Client&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;While not included in these release zips above, we have upgraded the &lt;a href=&quot;https://github.com/hawkular/hawkular-client-ruby&quot;&gt;Hawkular-Ruby-Gem&lt;/a&gt; to &lt;a href=&quot;https://rubygems.org/gems/hawkular-client/versions/2.2.0&quot;&gt;v2.2.0&lt;/a&gt; to cater
for the change in the Inventory api. All changes can be seen in the &lt;a href=&quot;https://github.com/hawkular/hawkular-client-ruby/blob/master/CHANGES.rdoc&quot;&gt;Changes file&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_differences_to_hawkular_main&quot;&gt;Differences to Hawkular-main&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Notable differences between the main Hawkular distribution and Hawkular Services are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Hawkular Services does not ship with a User Interface. Interaction with the backend is exclusively done via REST.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Authentication is accomplished via JAAS, configured directly via Wildfly. Please refer to the Wildfly documentation on how to accomplish scenarios like LDAP user database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Due to the changes in the authentication, Keycloak is not part of the distribution, although it can still be used via JAAS. Please refer to the Keycloak documentation on how to protect deployments.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Due to the removal of Keycloak, multi tenancy is also simplified. The backend endpoints expect to receive a &lt;code&gt;Hawkular-Tenant&lt;/code&gt;, so, multi tenancy is now handled on the consumer side.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For more information on the details of this new distribution as well as the background, see the blog post &lt;a href=&quot;http://www.hawkular.org/blog/2016/04/28/new-packaging.html&quot;&gt;New Hawkular packaging&lt;/a&gt;. Note that
&lt;code&gt;hawkular-core-services&lt;/code&gt; on that post is what we now know as &lt;code&gt;hawkular-services&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Services is released every week on Tuesdays.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_get_started&quot;&gt;Get started&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To get started with Hawkular Services, &lt;a href=&quot;https://repository.jboss.org/nexus/content/groups/public/org/hawkular/services/hawkular-services-dist/0.0.5.Final/hawkular-services-dist-0.0.5.Final.zip&quot;&gt;download the latest release&lt;/a&gt;, unzip it,
add a user and set the Agent to use the credentials for the user just added.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It can be accomplished with the following commands:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;export HAWKULAR_HOME=&quot;/path/to/hawkular-services&quot;
export HAWKULAR_USERNAME=&quot;jdoe&quot;
export HAWKULAR_PASSWORD=&quot;password&quot;

cd &quot;${HAWKULAR_HOME}&quot;
&quot;${HAWKULAR_HOME}/bin/add-user.sh&quot; \
  -a \
  -u &quot;${HAWKULAR_USERNAME}&quot; \
  -p &quot;${HAWKULAR_PASSWORD}&quot; \
  -g read-write,read-only
&quot;${HAWKULAR_HOME}/bin/standalone.sh&quot; -Dhawkular.rest.user=&quot;${HAWKULAR_USERNAME}&quot; -Dhawkular.rest.password=&quot;${HAWKULAR_PASSWORD}&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Before starting the server, you need to have Cassandra 3.7 up and running with the RPC port enabled either via
setting the env variable of &lt;code&gt;CASSANDRA_START_RPC&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;or by editing &lt;code&gt;cassandra.yml&lt;/code&gt; and setting it there:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;# Whether to start the thrift rpc server.
start_rpc: true&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Using &lt;code&gt;ccm&lt;/code&gt; you can use this to update the config: &lt;code&gt;ccm updateconf &apos;start_rpc: true&apos;&lt;/code&gt;.
Another option is via &lt;code&gt;nodetool enablethrift&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_build_from_master_and_cassandra&quot;&gt;Build from master and Cassandra&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you build from master, you can pass &lt;code&gt;-Pembeddedc&lt;/code&gt; to get a distribution with embedded Cassandra for local development.
Similarly if you build via &lt;code&gt;-Pdev&lt;/code&gt; a default user of &lt;em&gt;jdoe/password&lt;/em&gt; will be installed and also be used with the agent.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_use_grafana_with_hawkular_services&quot;&gt;Use Grafana with Hawkular-services&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We do now have a Grafana datasource to make it easier to connect to Hawkular-services from Grafana.
The &lt;a href=&quot;https://github.com/hawkular/hawkular-grafana-datasource&quot;&gt;website of the datasource tells more&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_get_started_via_inofficial_docker_builds&quot;&gt;Get started via (inofficial) Docker builds&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are inofficial Docker images of the release and also an instrumented WildFly available on
DockerHub at &lt;a href=&quot;https://hub.docker.com/r/pilhuhn/hawkular-services/&quot;&gt;Hawkular services&lt;/a&gt;
and &lt;a href=&quot;https://hub.docker.com/r/pilhuhn/hawkfly/&quot;&gt;Instrumented WildFly&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Both images have been instrumented with the &lt;em&gt;jdoe/password&lt;/em&gt; user for the Hawkular server and the agent.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;See also &lt;a href=&quot;http://pilhuhn.blogspot.de/2016/06/using-hawkular-services-via-docker.html&quot; class=&quot;bare&quot;&gt;http://pilhuhn.blogspot.de/2016/06/using-hawkular-services-via-docker.html&lt;/a&gt; on some more
details about using those images.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Scaling stateful services: an example in Hawkular Alerting</title>
      <link>http://www.hawkular.org/blog/2016/07/05/scaling-hawkular-alerting.html</link>
      <author>noreply@hawkular.org (Lucas Ponce)</author>
      <pubDate>Tue, 5 Jul 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/07/05/scaling-hawkular-alerting.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Today stateless service architectures have the benefit to simplify the design of distributed scenarios.
With no state in the logic and a common backend, scaling could be implemented with simple additions of new nodes in the topology and distributing incoming requests with load balancer solutions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;But a stateless design can not be applied to every scenario, there are computational problems that have a stateful behaviour by nature.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Scaling distributed systems with stateful scenario is both a complex but thrilling task for a software engineer.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this post we are going to expose some highlights of the design included in Hawkular Alerting.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_hawkular_alerting&quot;&gt;Hawkular Alerting&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Alerting is the component responsible for detecting behaviours within hawkular system by defining rules.
These rules can generate events or alerts that can also be used in additional rules to detect complex scenarios and to respond with customized actions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This highlevel process is stateful by nature in the sense that rules might depend on the past and future data received.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_scaling_fault_tolerance_vs_distributed_computation&quot;&gt;Scaling: fault tolerance vs distributed computation&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A first (non trivial) question is what is meant by &apos;scaling&apos; in our problem domain.
For example, &apos;scaling&apos; in some traditional databases scenarios could mean to add more resources in a big backend machine, on the contrary scaling in a network means to have more nodes to distribute load and increase the computational power.
Also another preliminary point is that we add more nodes to increase the fault tolerance of our system, meaning that we add more nodes to replicate our load, but not necessary to increase the capacity of the system.
For example, some networks should be able to support more than one concurrent failure of the system.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For our specific Hawkular Alerting domain scaling means to have more computational capacity but also offering a minimal fault tolerance capacity.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_partitionmanager_interface&quot;&gt;PartitionManager interface&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Alerting implements its main logic in the engine service, the engine is responsible for managing the rules definitions and matching the data and events within the rules to update its internal state.
The engine is the main actor to use the scaling services and in this context the scaling/clustering services have been designed from an abstract interface API called PartitionManager.
Main benefit of this abstraction layer is that we can improve in the future the implementation of the distributed scenarios without bringing technical debt into the main logic of Hawkular Alerting.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The main strategy of the design is to partition and distribute the rules across all the nodes of the topology following a consistent hashing algorithm.
This means that when topology changes the PartitionManager minimizes the tasks needed to reconfigure the state.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So, at a high level, the PartitionManager interface is responsible for the following clustering services:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Notify when a new rule (called Trigger in Hawkular Alerting context) has been added, modified or removed in order to update the engine state.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Detect changes to the topology to re-calculate and re-distribute the triggers in a transparent way when a node is added/removed from the cluster.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Notify when a new data/event has been received in order to route it to the engine node responsible for its processing.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_some_implementation_details&quot;&gt;Some implementation details&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The goal of a scaling design is efficiency, it should distribute the rules in a way that minimize the changes and cost of re-distribution when cluster changes.
In our PartitionManagerImpl we have used the hashing functions provided by the &lt;strong&gt;guava&lt;/strong&gt; library to implement a shared topology as it is shown in the next example.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;    /**
     * Distribute triggers on nodes using a consistent hashing strategy.
     * This strategy allows to scale and minimize changes and re-distribution when cluster changes.
     *
     * @param entries a list of entries to distribute
     * @param buckets a table of nodes
     * @return a map of entries distributed across nodes
     */
    public Map&amp;lt;PartitionEntry, Integer&amp;gt; calculatePartition(List&amp;lt;PartitionEntry&amp;gt; entries,
                                                           Map&amp;lt;Integer, Integer&amp;gt; buckets) {
        if (entries == null) {
            throw new IllegalArgumentException(&quot;entries must be not null&quot;);
        }
        if (buckets == null || buckets.isEmpty()) {
            throw new IllegalArgumentException(&quot;entries must be not null&quot;);
        }
        HashFunction md5 = Hashing.md5();
        int numBuckets = buckets.size();
        Map&amp;lt;PartitionEntry, Integer&amp;gt; newPartition = new HashMap&amp;lt;&amp;gt;();
        for (PartitionEntry entry : entries) {
            newPartition.put(entry, buckets.get(Hashing.consistentHash(md5.hashInt(entry.hashCode()), numBuckets)));
        }
        return newPartition;
    }
[source,java]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The backbone of the PartitionManagerImpl is based on &lt;strong&gt;Infinispan&lt;/strong&gt; services and its eventing architecture.
Infinispan let us define small caches used to share minimal topology information about the rules distribution.
The infinispan eventing architecture let us add our own listeners implementations to provide a high level API that the Hawkular Alerting engine can consume.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Further details can be found under the following examples.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Consistent hashing algorithm tests applied to topology&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-alerts/blob/master/hawkular-alerts-engine/src/test/java/org/hawkular/alerts/engine/impl/BucketsTest.java&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-alerts/blob/master/hawkular-alerts-engine/src/test/java/org/hawkular/alerts/engine/impl/BucketsTest.java&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Consistent hashing algorithm tests applied to rules distribution&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-alerts/blob/master/hawkular-alerts-engine/src/test/java/org/hawkular/alerts/engine/impl/DistributionTest.java&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-alerts/blob/master/hawkular-alerts-engine/src/test/java/org/hawkular/alerts/engine/impl/DistributionTest.java&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;div class=&quot;title&quot;&gt;PartitionManager high level interface&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-alerts/blob/master/hawkular-alerts-engine/src/main/java/org/hawkular/alerts/engine/service/PartitionManager.java&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-alerts/blob/master/hawkular-alerts-engine/src/main/java/org/hawkular/alerts/engine/service/PartitionManager.java&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Implementation of PartitionManager interface&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-alerts/blob/master/hawkular-alerts-engine/src/main/java/org/hawkular/alerts/engine/impl/PartitionManagerImpl.java&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-alerts/blob/master/hawkular-alerts-engine/src/main/java/org/hawkular/alerts/engine/impl/PartitionManagerImpl.java&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_conclusion_and_future_work&quot;&gt;Conclusion and future work&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Today we have a clustering profile in Hawkular Alerting project where we can test and run these distributed scenarios.
In our future work we will increase the coverage of distributed scenario and refine our design accordingly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We hope this small intro could help to share the main decisions points to build our distributed design for Hawkular Alerting.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Comments and questions are welcome, here or in &lt;a href=&quot;http://webchat.freenode.net/?channels=hawkular&quot;&gt;#hawkular&lt;/a&gt; room on freenode.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular APM 0.9.0.Final Released</title>
      <link>http://www.hawkular.org/blog/2016/06/27/hawkular-apm-0.9-released.html</link>
      <author>noreply@hawkular.org (Gary Brown)</author>
      <pubDate>Mon, 27 Jun 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/06/27/hawkular-apm-0.9-released.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As mentioned in a blog post at the beginning of the month, the Hawkular BTM (Business Transaction Management) project has been renamed Hawkular APM (Application Performance Management), to reflect the wider scope of the project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is the first release under the new project name, and consequently there are a number of naming related changes (e.g. REST endpoints, Java package/class names, model, etc) that mean this release is &lt;strong&gt;not&lt;/strong&gt; backward compatible with the previous release.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The details of the release can be found &lt;a href=&quot;https://github.com/hawkular/hawkular-apm/releases/tag/0.9.0.Final&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As part of this release, we have also moved the documentation for the project to &lt;a href=&quot;https://hawkular.gitbooks.io/hawkular-apm-user-guide/content/&quot;&gt;gitbook&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you have any questions regarding the change of name, or anything else related to the project, please &lt;a href=&quot;http://www.hawkular.org/community/index.html&quot;&gt;contact us&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Services 0.0.2.Final</title>
      <link>http://www.hawkular.org/blog/2016/06/14/hawkular-services-0.0.2.Final.html</link>
      <author>noreply@hawkular.org (Juraci Paixão Kröhling)</author>
      <pubDate>Tue, 14 Jun 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/06/14/hawkular-services-0.0.2.Final.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Services is a new base line distribution including only the basic Hawkular components, such as Alerts, Inventory and Metrics.
The version &lt;a href=&quot;https://repository.jboss.org/nexus/content/groups/public/org/hawkular/services/hawkular-services-dist/0.0.2.Final/hawkular-services-dist-0.0.2.Final.zip&quot;&gt;0.0.2.Final&lt;/a&gt; has just been released and is ready to be tested and integrated with other projects.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Notable differences between the main Hawkular distribution and Hawkular Services are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Hawkular Services does not ship with a User Interface. Interaction with the backend is exclusively done via REST.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Authentication is accomplished via JAAS, configured directly via Wildfly. Please refer to the Wildfly documentation on how to accomplish scenarios like LDAP user database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Due to the changes in the authentication, Keycloak is not part of the distribution, although it can still be used via JAAS. Please refer to the Keycloak documentation on how to protect deployments.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Due to the removal of Keycloak, multi tenancy is also simplified. The backend endpoints expect to receive a &lt;code&gt;Hawkular-Tenant&lt;/code&gt;, so, multi tenancy is now handled on the consumer side.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For more information on the details of this new distribution as well as the background, see the blog post &lt;a href=&quot;http://www.hawkular.org/blog/2016/04/28/new-packaging.html&quot;&gt;New Hawkular packaging&lt;/a&gt;. Note that
&lt;code&gt;hawkular-core-services&lt;/code&gt; on that post is what we now know as &lt;code&gt;hawkular-services&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Services is released every week on Tuesdays.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To get started with Hawkular Services, &lt;a href=&quot;https://repository.jboss.org/nexus/content/groups/public/org/hawkular/services/hawkular-services-dist/0.0.2.Final/hawkular-services-dist-0.0.2.Final.zip&quot;&gt;download the latest release&lt;/a&gt;, unzip it, add a user and set the Agent to use the credentials for the user just added.
It can be accomplished with the following commands:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code&gt;export HAWKULAR_HOME=&quot;/path/to/hawkular-services&quot;
export HAWKULAR_USERNAME=&quot;jdoe&quot;
export HAWKULAR_PASSWORD=&quot;password&quot;

cd &quot;${HAWKULAR_HOME}&quot;
&quot;${HAWKULAR_HOME}/bin/add-user.sh&quot; \
  -a \
  -u &quot;${HAWKULAR_USERNAME}&quot; \
  -p &quot;${HAWKULAR_PASSWORD}&quot; \
  -g read-write,read-only
&quot;${HAWKULAR_HOME}/bin/standalone.sh&quot; -Dhawkular.rest.user=&quot;${HAWKULAR_USERNAME}&quot; -Dhawkular.rest.password=&quot;${HAWKULAR_PASSWORD}&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular BTM component rename</title>
      <link>http://www.hawkular.org/blog/2016/06/01/hawkular-btm-to-apm.html</link>
      <author>noreply@hawkular.org (Gary Brown)</author>
      <pubDate>Wed, 1 Jun 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/06/01/hawkular-btm-to-apm.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When the Hawkular BTM component project was started in April 2015 the vision was to provide a Business Transaction Management solution - hence the name.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;However, as demonstrated in the recent posts, the scope of the project has now expanded to include Application Performance Management, which as discussed in the APM Conceptual Framework on &lt;a href=&quot;https://en.wikipedia.org/wiki/Application_performance_management&quot;&gt;Wikipedia&lt;/a&gt;, subsumes the area of Business Transaction Management.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Therefore, to avoid confusion and prior to the project reaching a stable 1.0 version, we have decided to rename the component from Hawkular BTM to Hawkular APM.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This change will be implemented within the next couple of weeks, and will consist of renaming the github repository, the jira issue tracking system, the Java maven artifacts (and packages) and the REST endpoints. Therefore the next release will not be backward compatible with version 0.8.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you have any questions regarding this change, please &lt;a href=&quot;http://www.hawkular.org/community/index.html&quot;&gt;contact us&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Metrics 0.16.0 - Release</title>
      <link>http://www.hawkular.org/blog/2016/06/01/hawkular-metrics-0.16.0.Final-released.html</link>
      <author>noreply@hawkular.org (Stefan Negrea)</author>
      <pubDate>Wed, 1 Jun 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/06/01/hawkular-metrics-0.16.0.Final-released.html</guid>
      	<description>
	&lt;p&gt;I am happy to announce release 0.16.0 of Hawkular Metrics. This release is anchored by overall enhancements in the API and updates to String metric type.&lt;/p&gt;&lt;p&gt;Here is a list of major changes:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;String Metric Type - Enhancements&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;code&gt;/strings&lt;/code&gt; endpoint was enhanced with querying capabilities similar to other metric types, including tag related features (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-402&quot;&gt;HWKMETRICS-402&lt;/a&gt;)&lt;/li&gt;
    &lt;li&gt;The endpoints under &lt;code&gt;/strings&lt;/code&gt; are still experimental, so changes which break backwards compatibility could be introduced in future releases. The experimental tag allows time for feedback to better determine what the API should be.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code&gt;*/stats&lt;/code&gt; &amp;amp; &lt;code&gt;*/raw&lt;/code&gt; Replace &lt;code&gt;*/data&lt;/code&gt;&lt;/strong&gt; - &lt;strong&gt;second deprecation warning!&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;code&gt;*/data&lt;/code&gt; has been &lt;strong&gt;deprecated&lt;/strong&gt; and functionality split into two single purpose endpoints, this is applicable for all metric types (gauge, counter, availability, and string)&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;*/stats&lt;/code&gt; endpoints return bucketed, statistical or query-time aggregated data&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;*/raw&lt;/code&gt; endpoints accept and return raw data for a metric&lt;/li&gt;
    &lt;li&gt;Please update your code to use the new endpoints and follow the release notes for more details regarding removal.&lt;/li&gt;
    &lt;li&gt;For more details: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-24&quot;&gt;HWKMETRICS-24&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-57&quot;&gt;HWKMETRICS-57&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;REST API Updates&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;Empty buckets are now reported with default values and no samples (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-345&quot;&gt;HWKMETRICS-345&lt;/a&gt;)&lt;/li&gt;
    &lt;li&gt;Rate of change stats can be retrieved for Gauge metrics. This feature was exclusive for Counter metrics but was expanded to Gauge metrics. The rates are computed at query time based on stored data (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-365&quot;&gt;HWKMETRICS-365&lt;/a&gt;)&lt;/li&gt;
    &lt;li&gt;Min and max timestamps of stored datapoints are now returned when querying for metric definitions (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-383&quot;&gt;HWKMETRICS-383&lt;/a&gt;)&lt;/li&gt;
    &lt;li&gt;The endpoint for fetching rates now supports standard query parameters and sort behavior (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-390&quot;&gt;HWKMETRICS-390&lt;/a&gt;)&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Hawkular Metrics - Hawkular Services distribution&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;Hawkular Metrics distribution build for inclusion in Hawkular Services is now independent of Hawkular Accounts.&lt;/li&gt;
    &lt;li&gt;Only for this distribution, the authentication is done at container level and tenant id header becomes required.&lt;/li&gt;
    &lt;li&gt;For more details: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-399&quot;&gt;HWKMETRICS-399&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-401&quot;&gt;HWKMETRICS-401&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Hawkular Metrics Clients&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Python: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-python&quot;&gt;https://github.com/hawkular/hawkular-client-python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Go: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-go&quot;&gt;https://github.com/hawkular/hawkular-client-go&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Ruby: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-ruby&quot;&gt;https://github.com/hawkular/hawkular-client-ruby&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Java: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-java&quot;&gt;https://github.com/hawkular/hawkular-client-java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Release Links&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Github Release: &lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/releases/tag/0.16.0&quot;&gt;https://github.com/hawkular/hawkular-metrics/releases/tag/0.16.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;JBoss Nexus Maven artifacts: &lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Jira release tracker: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12330316&quot;&gt;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12330316&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;A big &quot;Thank you&quot; goes to John Sanda, Thomas Segismont, Mike Thompson, Matt Wringe, Michael Burman, and Heiko Rupp for their project contributions.&lt;/p&gt;
	</description>
    </item>
    <item>
      <title>Monitoring Microservices for Application Performance, Distributed Tracing and Business Transactions</title>
      <link>http://www.hawkular.org/blog/2016/05/26/hawkular-btm-booker-demo.html</link>
      <author>noreply@hawkular.org (Gary Brown)</author>
      <pubDate>Thu, 26 May 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/05/26/hawkular-btm-booker-demo.html</guid>
      	<description>
	&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe src=&quot;http://www.hawkular.org/https://player.vimeo.com/video/167714637&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Although distributed systems and the concept of services have been around for a long time, the current trend towards microservices has added some new dimensions to the management problem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The architectural approach leads to business applications comprised of a larger number of simple interacting services, each focused on specific business capabilities, and being responsible for their own data management. This has the benefit of allowing each service to be independently deployable, generally using automated continuous delivery. When used in a cloud environment, it facilitates dynamic scaling of individual services as required, and enables parts of the business application to be upgraded independently with minimal impact, allowing faster turnaround for fixing bugs and adding new features.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The downside of this dynamic, scalable and flexible architecture is being able to understand how your business application is operating, and when necessary tracing the execution path of a particular invocation through the multitude of services potentially geographically distributed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;From a management perspective we need to understand:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Application Performance&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;How is a particular service performing, understanding the internal components and how the implementation can be improved. This is of interest to the development team responsible for the service, but also for business and IT managers who need to understand how use of particular services is impacting a business.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Distributed Tracing&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Isolating the path of execution across communicating services - identifying which service instances were actually interacting, what was the latency between service invocations, were particular regions impacted by problems, etc. This information can be used during development and testing, to identify performance issues, but also in production to understand what runtime issues may have impacted an individual or set of invocations of the system.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Business Transactions&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;How different business transaction types, that may span across multiple shared services, are impacted when service failures/performance issues occur. We also want to extract business metrics from the information being exchanged between services, to help business analysts gain insight into how their systems are being used and therefore improve how their business operates.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;The demo&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The demo shows how &lt;em&gt;Hawkular BTM&lt;/em&gt; can present these three different views of information captured (in a non-intrusive manner) from a microservices example. &lt;em&gt;Hawkular BTM&lt;/em&gt; requires no changes to the services (or frameworks) being monitored, to allow the information to be captured, as it uses a &lt;a href=&quot;http://byteman.jboss.org&quot;&gt;Byteman&lt;/a&gt; based javaagent to instrument the services.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The architecture of the microservices example being monitored is:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-05-26-btm-swarm-booker.png&quot; alt=&quot;Swarm Booker Example&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. &lt;a href=&quot;https://github.com/wildfly-swarm/booker&quot;&gt;Swarm booker example&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The example includes the following services:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Keycloak - Provides authentication and authorization.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Web client - Provides the web UI for the application.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Library - Tracks which items are bought by a user, communicating with the &lt;em&gt;Store&lt;/em&gt; service to associate details with a given book ID.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Store - Provides a book inventory, and uses the &lt;em&gt;Pricing&lt;/em&gt; service to obtain a price for each the item in the store.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pricing - Simple pricing service that indicates everything is $10 if you&amp;#8217;re browsing anonymously, or $9 if you&amp;#8217;re logged in.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the demo, two business tranactions are configured to represent business relevant activities that may be performed by, or on behalf of, a customer. These are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add Book - This business transaction is triggered by an invocation on the &lt;strong&gt;&lt;em&gt;Library&lt;/em&gt; POST /items&lt;/strong&gt; endpoint, and only involves the &lt;em&gt;Library&lt;/em&gt; service.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get Books - This business transaction is triggered by an invocation on the &lt;strong&gt;&lt;em&gt;Library&lt;/em&gt; GET /items&lt;/strong&gt; endpoint, and results in a call to the &lt;em&gt;Store&lt;/em&gt; service to obtain information about the books contained in the user&amp;#8217;s library, which in turn calls the &lt;em&gt;Pricing&lt;/em&gt; service to obtain the price of each of the books.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Categorizing the activities that the user may perform on your business applications in this way enables business analysts to understand patterns, and where appropriate, extract additional business metrics from those interactions for further more detailed analysis.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Obtaining business metrics without the need to instrument your application</title>
      <link>http://www.hawkular.org/blog/2016/05/24/hawkular-btm-ticketmonster-demo.html</link>
      <author>noreply@hawkular.org (Gary Brown)</author>
      <pubDate>Tue, 24 May 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/05/24/hawkular-btm-ticketmonster-demo.html</guid>
      	<description>
	&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;_why&quot;&gt;Why?&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are many solutions available to allow a business to instrument its applications to report relevant business metrics. However most (if not all) of these solutions require the application to be modified to extract the information and report it to the chosen management solution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;What happens if you need the flexibility to begin recording and analysing new business metrics immediately? Even with the current trend towards continuous delivery, there is still a delay while the business analyst creates a feature request, and the development team understands the requirement, makes the modifications and pushes the changes through the pipeline.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Would it not be better for business analysts to be able to react immediately to emerging requirements, which may also be temporary (i.e. short lived), to collect and analyse the required business metrics?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;_the_demo&quot;&gt;The demo&lt;/h4&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe src=&quot;http://www.hawkular.org/https://player.vimeo.com/video/167739840&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This &lt;em&gt;Hawkular BTM&lt;/em&gt; demo shows how to capture business metrics from an executing business application without having to introduce changes to the application or any frameworks being used. The business metrics can be presented in the form of charts, and also used within filters to help a user to focus in on the important information required to analyse how a business is functioning. The business metrics are organised based on the concept of a &lt;em&gt;&quot;Business Transaction&quot;&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;_what_is_a_business_transaction&quot;&gt;What is a Business Transaction?&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The term &lt;em&gt;&quot;Business Transaction&quot;&lt;/em&gt; is generally used to signify activities performed within a business that result in some form of accounting event (i.e. buying some goods). The &lt;em&gt;Hawkular BTM&lt;/em&gt; project uses the term in a more general way, referring to activities performed within a business, potentially initiated on behalf of a consumer (e.g. customer), that result in some direct or indirect value.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The ticket monster example application used in the demo is configured with two business transactions. The first is for retrieving information about an event (e.g. a concert), and the second for booking tickets. Although the first business transaction does not have any financial (accounting) consequence for the business, retrieving information about the events is a precursor to a customer being able to purchase the tickets, so it is a necessary but separate activity provided by the business to help meet the needs of its customers.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;_how_is_the_business_transaction_concept_used_within_hawkular_btm&quot;&gt;How is the Business Transaction concept used within Hawkular BTM?&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Hawkular BTM&lt;/em&gt; uses the concept of a &lt;em&gt;&quot;Business Transaction&quot;&lt;/em&gt; to associate the invocation of a particular endpoint(s) with a logical business transaction configuration.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This configuration can include the definition of &apos;processors&apos; (represented by a series of actions), that define how the data passed through a business application can be processed to extract business metrics (e.g. number of tickets purchased).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A business application can be a single service, as in the case of the ticket monster example, or comprised of multiple interacting (micro) services.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Metrics 0.15.0 - Release</title>
      <link>http://www.hawkular.org/blog/2016/05/02/hawkular-metrics-0.15.0.Final-released.html</link>
      <author>noreply@hawkular.org (Stefan Negrea)</author>
      <pubDate>Mon, 2 May 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/05/02/hawkular-metrics-0.15.0.Final-released.html</guid>
      	<description>
	&lt;p&gt;I am happy to announce release 0.15.0 of Hawkular Metrics. This is one of the largest ever Hawkular Metrics releases with a lot of new features and changes.&lt;/p&gt;&lt;p&gt;Here is a list of major changes:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Cassandra 3.5 Support&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;Cassandra 3.5 is now the supported version of Cassandra&lt;/li&gt;
    &lt;li&gt;Cassandra 2.2.x support is deprecated&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Schema Management Tools&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;First release with tooling for schema change management&lt;/li&gt;
    &lt;li&gt;Only upgrades are supported; incremental schema changes are installed when Hawkular Metrics starts&lt;/li&gt;
    &lt;li&gt;Going forward new versions of Hawkular Metrics can be installed without the need to start with a fresh database or manually update existing database even if the schema has been modified in the new version&lt;/li&gt;
    &lt;li&gt;For more details: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-361&quot;&gt;HWKMETRICS-361&lt;/a&gt;, &lt;a href=&quot;https://github.com/jsanda/cassalog&quot;&gt;Cassalog&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code&gt;*/stats&lt;/code&gt; &amp;amp; &lt;code&gt;*/raw&lt;/code&gt; Replace &lt;code&gt;*/data&lt;/code&gt;&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;code&gt;*/data&lt;/code&gt; has been **deprecated* and its functionality split into two single purpose endpoints, &lt;code&gt;*/raw&lt;/code&gt; and &lt;code&gt;*/stats&lt;/code&gt;. This is applicable for all metric types (gauge, counter, availability, and string)
&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;*/data&lt;/code&gt; will not receive any updates going forward, and will be removed in future releases. There is no clear timeline for the removal since a lot of clients use it; it will be around at least for another two releases.&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;*/stats&lt;/code&gt; endpoints return bucketed, statistical or query-time aggregated data&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;*/raw&lt;/code&gt; endpoints accept and return raw data for a metric&lt;/li&gt;
    &lt;li&gt;Please update your code to use the new endpoints and follow the release notes for more details regarding removal.&lt;/li&gt;
    &lt;li&gt;For more details: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-24&quot;&gt;HWKMETRICS-24&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-57&quot;&gt;HWKMETRICS-57&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Data Point Tags&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;An optional set of tags can be supplied with each data point when inserting data. Unlike metric definition tags, data point tags cannot be modified. &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-368&quot;&gt;HWKMETRICS-368&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-54&quot;&gt;HWKMETRICS-54&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;Tag based bucketing for data points is supported for counters and gauges &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-377&quot;&gt;HWKMETRICS-377&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-373&quot;&gt;HWKMETRICS-373&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;New endpoints for filtering and grouping data by tags:&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;GET /hawkular/metrics/gauges/{id}/stats/tags/{tags}&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;GET /hawkular/metrics/counters/{id}/stats/tags/{tags}&lt;/code&gt;&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Tags&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;Deleting tags only requires the tag keys and not the values, this simplifies the process for tag deletion. For backwards compatibility, the API will still accept name value pairs but will not take the value into account &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-385&quot;&gt;HWKMETRICS-385&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;A new endpoint was added to query for the available values contained in a tag &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-197&quot;&gt;HWKMETRICS-197&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;Endpoint: &lt;code&gt;GET hawkular/metrics/gauge/tags/{tags}&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;Example: &lt;code&gt;GET hawkular/metrics/gauge/tags/hostname:*01*&lt;/code&gt; returns &lt;code&gt;hostname: [&amp;quot;web01prod&amp;quot;, &amp;quot;web01qa&amp;quot;, &amp;quot;backend01prod&amp;quot;, &amp;quot;backend01qa&amp;quot; ]&lt;/code&gt;&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;String Metric Type (Experimental)&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;Hawkular Metrics now provides a string metric type. This release introduces new endpoints for reading and writing string data points &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-384&quot;&gt;HWKMETRICS-384&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;There is a 2 KB size limit for each data point. That limit may be configurable in future releases.&lt;/li&gt;
    &lt;li&gt;New endpoints under &lt;code&gt;/strings&lt;/code&gt; are experimental, so changes which break backwards compatibility could be introduced in future releases. The experimental tag allows time for feedback to better determine what the API should be.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Asynchronous authentication for Openshift Metrics&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;Important performance improvement: the authentication code now uses a non blocking HTTP Client (Undertow Client) to validate authentication tokens calling Kubernetes&apos; master&lt;/li&gt;
    &lt;li&gt;Performance improvements details: &lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/pull/481#issue-148320027&quot;&gt;https://github.com/hawkular/hawkular-metrics/pull/481#issue-148320027&lt;/a&gt;, &lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/pull/481#issuecomment-209876952&quot;&gt;https://github.com/hawkular/hawkular-metrics/pull/481#issuecomment-209876952&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;For more details: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-330&quot;&gt;HWKMETRICS-330&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;API Updates&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;Stats are excluded from empty bucket data points rather than returning the string NaN and zero for the samples property &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-396&quot;&gt;HWKMETRICS-396&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;Endpoints that use the order param also accept lower case values &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-389&quot;&gt;HWKMETRICS-389&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;Sum is included in bucket output for gauges and counters &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-370&quot;&gt;HWKMETRICS-370&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;The status page can now be loaded over HTTPS without errors &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-388&quot;&gt;HWKMETRICS-388&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;Added overwrite param to tenant and metric creation. This will only overwrite the configuration (such as retention settings or tags) of the metric or tenant and not the actual data stored. Also overwrite the retention will only affect new data points added and not existing data already stored &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-148&quot;&gt;HWKMETRICS-148&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Updated Documentation&lt;/h3&gt;&lt;p&gt;The entire &lt;a href=&quot;http://www.hawkular.org/docs/components/metrics/index.html&quot;&gt;Hawkular Metrics User Guide&lt;/a&gt; has been rewritten and it is now accessible from the top menu of &lt;a href=&quot;https://hawkular.org&quot;&gt;Hawkular.org&lt;/a&gt;. The new guide has extensive documentation about metric types, query and tagging capabilities along lots of examples. Thank you &lt;a href=&quot;https://github.com/jsanda&quot;&gt;@jsanda&lt;/a&gt; for this amazing update!&lt;/p&gt;&lt;h3&gt;Java Client (Experimental)&lt;/h3&gt;&lt;p&gt;Thanks to an effort started by the &lt;a href=&quot;https://github.com/hawkular-qe&quot;&gt;Hawkular QE&lt;/a&gt; organization, Hawkular Metrics now has an official &lt;a href=&quot;https://github.com/hawkular/hawkular-client-java&quot;&gt;Java client&lt;/a&gt;. The repository has been fully transferred to Hawkular community where will be maintained going forward. The client is now at an experimental alpha stage and we expect to polish the API and internals in the coming months.&lt;/p&gt;&lt;p&gt;A big thank you goes to &lt;a href=&quot;https://github.com/jkandasa&quot;&gt;@jkandasa&lt;/a&gt; and &lt;a href=&quot;https://github.com/vnugent&quot;&gt;@vnugent&lt;/a&gt; for creating and the maintaining the project until now. &lt;a href=&quot;https://github.com/jkandasa&quot;&gt;@jkandasa&lt;/a&gt; will continue to serve as an active contributor and core member.&lt;/p&gt;&lt;h3&gt;Blog Posts &amp;amp; Articles&lt;/h3&gt;&lt;p&gt;Here are some recently published Metrics related blog posts and articles from around the Hawkular community:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.hawkular.org/blog/2016/04/19/jmxtrans-to-hawkular-metrics.html&quot;&gt;Monitoring JVM applications with jmxtrans&lt;/a&gt; by &lt;a href=&quot;https://github.com/tsegismont&quot;&gt;@tsegismont&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.hawkular.org/blog/2016/04/22/collecting-metrics-from-prometheus-endpoints.html&quot;&gt;Collecting Metrics from Prometheus Endpoints&lt;/a&gt; by &lt;a href=&quot;https://github.com/jmazzitelli&quot;&gt;@jmazzitelli&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.hawkular.org/blog/2016/04/21/datamining-first-release.html&quot;&gt;Hawkular Data Mining 0.1.0.Final Released&lt;/a&gt; by &lt;a href=&quot;https://github.com/pavolloffay&quot;&gt;@pavolloffay&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Hawkular Metrics Clients&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Python: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-python&quot;&gt;https://github.com/hawkular/hawkular-client-python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Go: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-go&quot;&gt;https://github.com/hawkular/hawkular-client-go&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Ruby: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-ruby&quot;&gt;https://github.com/hawkular/hawkular-client-ruby&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Java: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-java&quot;&gt;https://github.com/hawkular/hawkular-client-java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Release Links&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Github Release: &lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/releases/tag/0.15.0&quot;&gt;https://github.com/hawkular/hawkular-metrics/releases/tag/0.15.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;JBoss Nexus Maven artifacts: &lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Jira release tracker: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12329846&quot;&gt;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12329846&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;A big &quot;Thank you&quot; goes to John Sanda, Thomas Segismont, Mike Thompson, Matt Wringe, Michael Burman, and Heiko Rupp for their project contributions.&lt;/p&gt;
	</description>
    </item>
    <item>
      <title>New Hawkular packaging</title>
      <link>http://www.hawkular.org/blog/2016/04/28/new-packaging.html</link>
      <author>noreply@hawkular.org (Heiko W. Rupp, Stefan Negrea)</author>
      <pubDate>Thu, 28 Apr 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/04/28/new-packaging.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;[ This blog post has been sent before to the hawkular-dev mailing list ]&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With a growing community and an increasingly large number of sub-projects, it is the perfect time to rethink the
packaging of Hawkular. This post is a blueprint for changes to come to Hawkular as well as establish some patterns
for futures decisions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_motivation&quot;&gt;Motivation&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So far we have created Hawkular &quot;All-in-one&quot; releases that contain everything, Hawkular server components, UI,
the agent and also embedded versions of Cassandra and KeyCloak.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It&amp;#8217;s certainly the case that for community we will still deliver an all-in-one package.
We also need to consider separate distributions for other projects that integrate with Hawkular.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The recent effort to integrate with &lt;a href=&quot;blog/2016/02/22/hawkular-manage-iq.html&quot;&gt;ManageIQ&lt;/a&gt; comes with
its own set of requirements for services.
Not all of the Hawkular components are needed and required components may be configured differently.
For example the UI is supplied from within ManageIQ side and Hawkular is to be run headless. Other
components like Cassandra will not be run in embedded mode, so that there is no need to supply it in the package.
Likewise KeyCloak will not be shipped and probably not even needed because we only have technical
users that will access Hawkular services.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_existing_components_services&quot;&gt;Existing Components / Services&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here a list of projects that are part of Hawkular project&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;hdlist&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;hdlist1&quot;&gt;
Metrics
&lt;/td&gt;
&lt;td class=&quot;hdlist2&quot;&gt;
&lt;p&gt;scalable, asynchronous, multi tenant, long term metrics storage engine&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;hdlist1&quot;&gt;
Inventory
&lt;/td&gt;
&lt;td class=&quot;hdlist2&quot;&gt;
&lt;p&gt;registry of &quot;things&quot; that contains info about your applications, servers, etc. and also keeps track of
their relationships with each other&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;hdlist1&quot;&gt;
Alerts
&lt;/td&gt;
&lt;td class=&quot;hdlist2&quot;&gt;
&lt;p&gt;alerting engine that allows trigger definitions to evaluate incoming data, generate alerts (or events), and
react with flexible actions ond lifecycle management&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;hdlist1&quot;&gt;
CommandGW
&lt;/td&gt;
&lt;td class=&quot;hdlist2&quot;&gt;
&lt;p&gt;messaging framework for communicating between components&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;hdlist1&quot;&gt;
Bus+Nest
&lt;/td&gt;
&lt;td class=&quot;hdlist2&quot;&gt;
&lt;p&gt;messaging framework used for communicating between components&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;hdlist1&quot;&gt;
BTM
&lt;/td&gt;
&lt;td class=&quot;hdlist2&quot;&gt;
&lt;p&gt;provide capabilities to monitor the flow of a business transaction instance and enable performance analysis of
the individual components that make up an application&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;hdlist1&quot;&gt;
Agent
&lt;/td&gt;
&lt;td class=&quot;hdlist2&quot;&gt;
&lt;p&gt;used to monitor WildFly and related projects&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;hdlist1&quot;&gt;
Accounts
&lt;/td&gt;
&lt;td class=&quot;hdlist2&quot;&gt;
&lt;p&gt;is the user/organization module that provides authentication, authorization and configuration for user accounts&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;hdlist1&quot;&gt;
Data Mining
&lt;/td&gt;
&lt;td class=&quot;hdlist2&quot;&gt;
&lt;p&gt;alert predictions based on time series data&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;hdlist1&quot;&gt;
Hawkular UI
&lt;/td&gt;
&lt;td class=&quot;hdlist2&quot;&gt;
&lt;p&gt;The current UI&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;hdlist1&quot;&gt;
Hawkular Charts
&lt;/td&gt;
&lt;td class=&quot;hdlist2&quot;&gt;
&lt;p&gt;Angular Directives for Metrics Visualization used by the current UI&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;hdlist1&quot;&gt;
Embedded Cassandra
&lt;/td&gt;
&lt;td class=&quot;hdlist2&quot;&gt;
&lt;p&gt;embedded Cassandra server specifically configured for project use&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are also various clients like the Ruby Gem or the Android client. Those are not part of this discussion.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_options_for_packages&quot;&gt;Options for Packages&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The distribution packages need to follow product integrations with a special distribution for community.
The community package could potentially include every single package from the Hawkular organization. However,
the rest of the packages need to be created along the lines of product use and include only the minimal amount of
components, services and third-party libraries to satisfy integration requirements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The distributions should be seen as funels, the Hawkular community creates a set of sub-projects that then get
combined into few distributions that in turn get consumed. Following this analogy, the number of packaged distributions
should also be kept to a minimum possible. For now we settled on 3 packages detailed below, all will be available
for download on JBoss.org.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With the exception of the community distribution:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;the QA team will be engaged in testing the package.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;the sub-components will strive to be aligned in terms of tech stack and maturity&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;an automated test suite is required for packages that combine more than one project&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_hawkular_community_distribution&quot;&gt;Hawkular - Community Distribution&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Will include every single service listed above. The UI is a requirement because some services are very hard to
understand or use without a friendly interface. The UI will be a community only effort at this point since there
are no plans for productization.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The current Hawkular repository will be adjusted to reflect this new mission; the current UI will be moved
to a separate repository. This package builds on Hawkular Core Services as described next.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_hawkular_core_services&quot;&gt;Hawkular Core Services&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Geared towards ManageIQ integrations and will include only the components needed for the MiQ provider.
This package uses the Metrics Distribution as described below.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Components included: Metrics, Alerts, Inventory, CommandGW, Nest and Bus as well as the agent.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Reasons for some exclusions: Keycloak (different security model), Embedded Cassandra
(only full C* deployments will be supported), and no Hawkular UI because it will use a special purpose UI for ManageIQ&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_metrics_distribution&quot;&gt;Metrics Distribution&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Geared towards usage as a pure Time Series Database (TSDB) and will be exclusively made of Hawkular Metrics service.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_graphical_overview&quot;&gt;Graphical overview&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This graphic visualizes the 3 packages again&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-packages&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/hawkular-packaging-new.png&quot; alt=&quot;Packages and components&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. Packages and components&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Orange is the Metrics distribution, green+orange (with the red box around it) is Hawkular-core-services and
everything in the blue box is the all-in-one community distribution&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_expansion_and_contraction&quot;&gt;Expansion and Contraction&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Since its inception Hawkular has been growing by all metrics: projects, lines of code, binary downloads,
contributors, etc. But uncontrolled increase in some metrics can be detrimental to the organization.
This is especially true for the number of projects. We will always need new projects to experiment, but the
reverse might be true for mature and established projects.
As the packaging and requirements for each package mature we need to consider the reverse, combining projects.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_packaging_format&quot;&gt;Packaging Format&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This post did not touch one important aspect: physical packaging formats (rpm, zip, war, jar) for the 3 distributions.
We will follow-up with additional details in the coming weeks.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Inventory 0.15.0.Final - Release</title>
      <link>http://www.hawkular.org/blog/2016/04/27/hawkular-inventory-0.15.0.Final-released.html</link>
      <author>noreply@hawkular.org (Lukas Krejci)</author>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/04/27/hawkular-inventory-0.15.0.Final-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;m happy to announce the release of Hawkular Inventory 0.15.0.Final.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_changes&quot;&gt;Changes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This release was brewing for a long time and brings just 1 important and big
feature.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_inventory_synchronization&quot;&gt;Inventory Synchronization&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To ensure only the minimal amount of work is done when syncing, feeds,
resource and metric types as well as resources and metrics have now an
associated &quot;identity hash&quot;, which is a Merkle tree hash of the entity&amp;#8217;s ID,
important data (depends on entity type) and the hashes of its children. This
way one can quickly check if a feed reported any new changes since the last
time - just compare its identity hash with the last value known to you.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can now describe the structure of the inventory a feed wants to report
locally on the feed and report it back to inventory server - it will ensure
that all creates, updates and deletes are applied so that inventory reflects
what the feed &quot;sees&quot;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_other&quot;&gt;Other&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Apart from the inventory synchronization there&amp;#8217;s been a handful of bugfixes
and improvements and updates to REST documentation that should make it a
little bit easier to understand (further enhancements are hopefully coming,
we&amp;#8217;re still learning how to use swagger in java efficiently ;-) ).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Additionally, the API of canonical paths has been extracted from the inventory
project into Hawkular Commons and lives as a standalone artifact -
&lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/commons/hawkular-inventory-paths/&quot; class=&quot;bare&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/commons/hawkular-inventory-paths/&lt;/a&gt;.
This was done to minimize the dependencies between various Hawkular components
that need to use canonical paths.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_future&quot;&gt;Future&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the future releases, we plan to refine the inventory sync further,
restructure the REST API to get rid of the potential ambiguities and many
other things.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_relase_links&quot;&gt;Relase Links&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;dlist&quot;&gt;
&lt;dl&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Github&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-inventory/releases/tag/0.15.0.Final&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-inventory/releases/tag/0.15.0.Final&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Maven Artifacts&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;&lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/inventory/&quot; class=&quot;bare&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/inventory/&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_thanks&quot;&gt;Thanks&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Special thanks go out to Justine Tunney, Heiko Rupp, Jirka Kremser, Pavol
Loffay and Peter Palaga for their contributions to the release.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Collecting Metrics from Prometheus Endpoints</title>
      <link>http://www.hawkular.org/blog/2016/04/22/collecting-metrics-from-prometheus-endpoints.html</link>
      <author>noreply@hawkular.org (John Mazzitelli)</author>
      <pubDate>Fri, 22 Apr 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/04/22/collecting-metrics-from-prometheus-endpoints.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular WildFly Agent 0.17.2.Final has just been released. This new release introduces a very interesting feature.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_prometheus_metrics&quot;&gt;Prometheus Metrics&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The agent now has the ability to monitor Prometheus endpoints and store their metrics to Hawkular Metrics. This means any
component that exports Prometheus metric data via either &lt;a href=&quot;https://prometheus.io/docs/instrumenting/exposition_formats/&quot;&gt;the Prometheus binary or text formats&lt;/a&gt; can have those metric data collected by the agent
and pushed up into Hawkular Metrics.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_configuration&quot;&gt;Configuration&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It is very easy to configure the Hawkular WildFly Agent to collect Prometheus metric data. In the WildFly container
that houses the agent, edit its standalone.xml configuration file and add one or more &amp;lt;remote-prometheus&amp;gt; elements
in the &amp;lt;managed-servers&amp;gt; section of the agent subsystem:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;remote-prometheus name=&quot;My Remote Prometheus Endpoint&quot;
                   enabled=&quot;true&quot;
                   url=&quot;http://my-prometheus-endpoint:9090/metrics&quot;
                   interval=&quot;30&quot;
                   timeUnits=&quot;seconds&quot; /&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This tells the agent to periodically scrape the metric data from that remote Prometheus endpoint and whatever metrics
it finds will be pushed to Hawkular Metrics.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In fact, if you only want to collect Prometheus metric data (and not collect any other kind of metric data,
like those from DMR endpoints or Jolokia/JMX endpoints) you need only those &amp;lt;remote-prometheus&amp;gt; declarations. You
do not have to also collect from &amp;lt;remote-dmr&amp;gt; or &amp;lt;remote-jmx&amp;gt; servers (though you are free to do so if you want to monitor
types of those components, too).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Some Prometheus endpoints expose a lot of metrics, some of which you may not be interested in collecting and storing. In
this case, you have the option to define metric sets which tell the agent which metrics to collect and store (any others
will be ignored).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here is an example of a full agent subsystem configuration that defines a remote Prometheus endpoint and the metrics
to be collected from that endpoint:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;subsystem xmlns=&quot;urn:org.hawkular.agent:agent:1.0&quot; enabled=&quot;true&quot;&amp;gt;
    &amp;lt;diagnostics enabled=&quot;true&quot; interval=&quot;1&quot; reportTo=&quot;LOG&quot; timeUnits=&quot;minutes&quot;/&amp;gt;
    &amp;lt;storage-adapter type=&quot;HAWKULAR&quot; serverOutboundSocketBindingRef=&quot;hawkular&quot; username=&quot;jdoe&quot; password=&quot;password&quot;/&amp;gt;

    &amp;lt;metric-set-prometheus name=&quot;Important Metrics&quot;&amp;gt;
        &amp;lt;metric-prometheus name=&quot;http_.*&quot;/&amp;gt;
        &amp;lt;metric-prometheus name=&quot;evaluation_failures_total&quot; /&amp;gt;
    &amp;lt;/metric-set-prometheus&amp;gt;

    &amp;lt;managed-servers&amp;gt;
        &amp;lt;remote-prometheus enabled=&quot;true&quot;
                           name=&quot;My Remote Prometheus Endpoint&quot;
                           url=&quot;http://my-remote-prometheus-endpoint:9090/metrics&quot;
                           metricSets=&quot;Important Metrics&quot;
                           interval=&quot;30&quot;
                           timeUnits=&quot;seconds&quot; /&amp;gt;
    &amp;lt;/managed-servers&amp;gt;
&amp;lt;/subsystem&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The above configuration tells the agent to scrape the given Prometheus endpoint URL every 30 seconds and
store all the metrics with the name &quot;evaluation_failures_total&quot; or with a name that matches
the regular expression &quot;http_.*&quot;. Any other metrics exported by that remote Prometheus endpoint will be
ignored.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Information about this release can be found on Github here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-agent/tree/0.17.2.Final&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-agent/tree/0.17.2.Final&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-agent/releases/tag/0.17.2.Final&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-agent/releases/tag/0.17.2.Final&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Data Mining 0.1.0.Final Released</title>
      <link>http://www.hawkular.org/blog/2016/04/21/datamining-first-release.html</link>
      <author>noreply@hawkular.org (Pavol Loffay)</author>
      <pubDate>Thu, 21 Apr 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/04/21/datamining-first-release.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce the first release 0.1.0.Final of the Hawkular Data Mining project. It contains several time
series models and utility classes for time series modelling.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_time_series_models&quot;&gt;Time series models&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Simple exponential smoothing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Double exponential smoothing (Holt&amp;#8217;s linear trend)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Seasonal triple exponential smoothing (Holt Winters)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Simple moving average (Weighted moving average)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AutomaticForecaster - which automatically selects the best model&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Parameters of all models are estimated using maximum likelihood estimation and models are designed for online
learning&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_time_series_manipulation_statistics&quot;&gt;Time series manipulation &amp;amp; Statistics&lt;/h3&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Augmented Dickey-Fuller test&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Autocorrelation function (ACF)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Time series decomposition&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Time series lagging&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Time series differencing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Automatic period identification&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_integration_into_hawkular&quot;&gt;Integration into Hawkular&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The integration into Hawkular can be found in &lt;em&gt;datamining&lt;/em&gt; branch in the main Hawkular repository.
Predictive charts are located in Explorer tab. Predictions can be enabled for any number of steps in the future for
any metric being collected. Prediction engine automatically selects the best model for given time series. Currently it
selects from simple, double and triple exponential smoothing models. In the following charts predictions produced
by these models are showed.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-datamining-triple&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/datamining-first-release-triple-ex.jpg&quot; alt=&quot;datamining&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. Model Triple exponential smoothing&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;img-datamining-double&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/datamining-first-release-double-ex.jpg&quot; alt=&quot;datamining&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 2. Model Double exponential smoothing&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;img-datamining-simple&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/datamining-first-release-simple-ex.jpg&quot; alt=&quot;datamining&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 3. Model Simple exponential smoothing&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Note that currently there is an issue with querying historical data from Metrics due to authentication issues. However
Data Mining still receives metrics from bus so it is important to enable predictions as soon as possible and wait for
some time to collect data (or increase collection interval). This will be fixed in the next versions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_next_steps&quot;&gt;Next Steps&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Fix querying historical metric data&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Prediction intervals&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_links&quot;&gt;Links&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Github Release:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-datamining/releases/tag/0.1.0.Final&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-datamining/releases/tag/0.1.0.Final&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Module documentation:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;../../../../docs/components/datamining/index.html&quot;&gt;Docs&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Module REST API:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;../../../../docs/rest/rest-datamining.html&quot;&gt;REST API&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_thanks&quot;&gt;Thanks&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thanks goes to Jiri Kremser and UI team for helping with predictive charts.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Monitoring JVM applications with jmxtrans</title>
      <link>http://www.hawkular.org/blog/2016/04/19/jmxtrans-to-hawkular-metrics.html</link>
      <author>noreply@hawkular.org (Thomas Segismont)</author>
      <pubDate>Tue, 19 Apr 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/04/19/jmxtrans-to-hawkular-metrics.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this post, you&amp;#8217;ll learn how to monitor applications running on the Java Virtual Machine with jmxtrans and Hakwular Metrics.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics&quot;&gt;Hawkular Metrics&lt;/a&gt; is an easy to install, scalable metric storage component.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://www.jmxtrans.org/&quot;&gt;jmxtrans&lt;/a&gt; is a popular monitoring tool for Java based applications. It connects to a JVM via
JMX, collects metrics, and sends the data to the backend of your choice. Very often a Graphite backend is used.
As an example, we will monitor a Tomcat 8 server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Metrics can store data sent over the Graphite text protocol, thanks to
&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/tree/master/clients/ptranslator&quot;&gt;ptrans&lt;/a&gt;. ptrans is a proxy server
taking in metrics data in several common formats and emitting them as REST requests into Hawkular Metrics backend for
storage. The figure below illustrates the process.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-ptrans&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/ptrans.png&quot; alt=&quot;ptrans&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. ptrans (Protocol Translator)&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;jmxtrans will communicate with ptrans over the Graphite text protocol.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_the_setup_in_details&quot;&gt;The setup in details&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_hawkular_metrics_and_ptrans&quot;&gt;Hawkular Metrics and PTrans&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://www.hawkular.org/docs/components/metrics/installation.html&quot;&gt;Hawkular Metrics standalone installation&lt;/a&gt; is
documented on the Hawkular website. ptrans setup is documented on the same page.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_tomcat_8&quot;&gt;Tomcat 8&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;JMX remote access must be enabled otherwise jmxtrans can&amp;#8217;t connect. To do this, create (or modify) the &lt;code&gt;setenv.sh&lt;/code&gt;
script in the &lt;code&gt;bin&lt;/code&gt; directory.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;setenv.sh&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;#!/bin/bash

CATALINA_OPTS=&quot;-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=35135&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_jmxtrans&quot;&gt;jmxtrans&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Download the latest &lt;a href=&quot;https://github.com/jmxtrans/jmxtrans/releases&quot;&gt;jmxtrans distribution&lt;/a&gt;. Expand it somewhere on
your disk.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the &lt;code&gt;bin&lt;/code&gt; directory, create a &lt;code&gt;jmxtrans.conf&lt;/code&gt; file. It will be sourced by the &lt;code&gt;jmxtrans.sh&lt;/code&gt; script.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;jmxtrans.conf&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;#!/bin/bash

JAR_FILE=&quot;/path/to/jmx-trans/lib/jmxtrans-all.jar&quot; &lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
LOG_DIR=&quot;/path/to/jmx-trans/bin&quot; &lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
LOG_FILE=&quot;/path/to/jmx-trans/bin/jmxtrans.out&quot; &lt;i class=&quot;conum&quot; data-value=&quot;3&quot;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
SECONDS_BETWEEN_RUNS=5 &lt;i class=&quot;conum&quot; data-value=&quot;4&quot;&gt;&lt;/i&gt;&lt;b&gt;(4)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Where the script will find the jmxtrans fat JAR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The directory where log files should be written&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;3&quot;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The file where the process output will be redirected&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;4&quot;&gt;&lt;/i&gt;&lt;b&gt;4&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Instructs jmxtrans to collect metrics and send data every 5 seconds&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then create the main configuration file, &lt;code&gt;config.json&lt;/code&gt;. The &lt;a href=&quot;https://github.com/jmxtrans/jmxtrans/wiki&quot;&gt;jmxtrans wiki&lt;/a&gt;
has a detailed reference.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;config.json&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;{
  &quot;servers&quot;: [
    {
      &quot;numQueryThreads&quot;: &quot;2&quot;,
      &quot;host&quot;: &quot;localhost&quot;, &lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
      &quot;port&quot;: &quot;35135&quot;, &lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
      &quot;queries&quot;: [ &lt;i class=&quot;conum&quot; data-value=&quot;3&quot;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
        {
          &quot;outputWriters&quot;: [ &lt;i class=&quot;conum&quot; data-value=&quot;4&quot;&gt;&lt;/i&gt;&lt;b&gt;(4)&lt;/b&gt;
            {
              &quot;@class&quot;: &quot;com.googlecode.jmxtrans.model.output.StdOutWriter&quot; &lt;i class=&quot;conum&quot; data-value=&quot;5&quot;&gt;&lt;/i&gt;&lt;b&gt;(5)&lt;/b&gt;
            },
            {
              &quot;@class&quot;: &quot;com.googlecode.jmxtrans.model.output.GraphiteWriter&quot;, &lt;i class=&quot;conum&quot; data-value=&quot;6&quot;&gt;&lt;/i&gt;&lt;b&gt;(6)&lt;/b&gt;
              &quot;settings&quot;: {
                &quot;host&quot;: &quot;127.0.0.1&quot;, &lt;i class=&quot;conum&quot; data-value=&quot;7&quot;&gt;&lt;/i&gt;&lt;b&gt;(7)&lt;/b&gt;
                &quot;port&quot;: &quot;2003&quot; &lt;i class=&quot;conum&quot; data-value=&quot;8&quot;&gt;&lt;/i&gt;&lt;b&gt;(8)&lt;/b&gt;
              }
            }
          ],
          &quot;obj&quot;: &quot;java.lang:type=OperatingSystem&quot;, &lt;i class=&quot;conum&quot; data-value=&quot;9&quot;&gt;&lt;/i&gt;&lt;b&gt;(9)&lt;/b&gt;
          &quot;attr&quot;: [ &lt;i class=&quot;conum&quot; data-value=&quot;10&quot;&gt;&lt;/i&gt;&lt;b&gt;(10)&lt;/b&gt;
            &quot;SystemLoadAverage&quot;,
            &quot;AvailableProcessors&quot;,
            &quot;TotalPhysicalMemorySize&quot;,
            &quot;FreePhysicalMemorySize&quot;,
            &quot;TotalSwapSpaceSize&quot;,
            &quot;FreeSwapSpaceSize&quot;,
            &quot;OpenFileDescriptorCount&quot;,
            &quot;MaxFileDescriptorCount&quot;
          ]
        },
        {
          &quot;outputWriters&quot;: [
            {
              &quot;@class&quot;: &quot;com.googlecode.jmxtrans.model.output.StdOutWriter&quot;
            },
            {
              &quot;@class&quot;: &quot;com.googlecode.jmxtrans.model.output.GraphiteWriter&quot;,
              &quot;settings&quot;: {
                &quot;host&quot;: &quot;127.0.0.1&quot;,
                &quot;port&quot;: &quot;2003&quot;
              }
            }
          ],
          &quot;resultAlias&quot;: &quot;heap&quot;,
          &quot;obj&quot;: &quot;java.lang:type=Memory&quot;,
          &quot;attr&quot;: [
            &quot;HeapMemoryUsage&quot;,
            &quot;NonHeapMemoryUsage&quot;
          ]
        },
        {
          &quot;outputWriters&quot;: [
            {
              &quot;@class&quot;: &quot;com.googlecode.jmxtrans.model.output.StdOutWriter&quot;
            },
            {
              &quot;@class&quot;: &quot;com.googlecode.jmxtrans.model.output.GraphiteWriter&quot;,
              &quot;settings&quot;: {
                &quot;host&quot;: &quot;127.0.0.1&quot;,
                &quot;port&quot;: &quot;2003&quot;
              }
            }
          ],
          &quot;resultAlias&quot;: &quot;cmsoldgen&quot;,
          &quot;obj&quot;: &quot;java.lang:name=CMS Old Gen,type=MemoryPool&quot;,
          &quot;attr&quot;: [
            &quot;Usage&quot;
          ]
        },
        {
          &quot;outputWriters&quot;: [
            {
              &quot;@class&quot;: &quot;com.googlecode.jmxtrans.model.output.StdOutWriter&quot;
            },
            {
              &quot;@class&quot;: &quot;com.googlecode.jmxtrans.model.output.GraphiteWriter&quot;,
              &quot;settings&quot;: {
                &quot;host&quot;: &quot;127.0.0.1&quot;,
                &quot;port&quot;: &quot;2003&quot;
              }
            }
          ],
          &quot;resultAlias&quot;: &quot;gc&quot;,
          &quot;obj&quot;: &quot;java.lang:type=GarbageCollector,name=*&quot;,
          &quot;attr&quot;: [
            &quot;CollectionCount&quot;,
            &quot;CollectionTime&quot;
          ]
        },
        {
          &quot;outputWriters&quot;: [
            {
              &quot;@class&quot;: &quot;com.googlecode.jmxtrans.model.output.StdOutWriter&quot;,
              &quot;settings&quot;: {}
            },
            {
              &quot;@class&quot;: &quot;com.googlecode.jmxtrans.model.output.GraphiteWriter&quot;,
              &quot;settings&quot;: {
                &quot;host&quot;: &quot;127.0.0.1&quot;,
                &quot;port&quot;: &quot;2003&quot;
              }
            }
          ],
          &quot;resultAlias&quot;: &quot;memorypool&quot;,
          &quot;obj&quot;: &quot;java.lang:type=MemoryPool,name=*&quot;,
          &quot;attr&quot;: [
            &quot;Usage&quot;
          ]
        },
        {
          &quot;outputWriters&quot;: [
            {
              &quot;@class&quot;: &quot;com.googlecode.jmxtrans.model.output.StdOutWriter&quot;
            },
            {
              &quot;@class&quot;: &quot;com.googlecode.jmxtrans.model.output.GraphiteWriter&quot;,
              &quot;settings&quot;: {
                &quot;host&quot;: &quot;127.0.0.1&quot;,
                &quot;port&quot;: &quot;2003&quot;
              }
            }
          ],
          &quot;resultAlias&quot;: &quot;threads&quot;,
          &quot;obj&quot;: &quot;java.lang:type=Threading&quot;,
          &quot;attr&quot;: [
            &quot;DaemonThreadCount&quot;,
            &quot;PeakThreadCount&quot;,
            &quot;ThreadCount&quot;,
            &quot;TotalStartedThreadCount&quot;
          ]
        },
        {
          &quot;outputWriters&quot;: [
            {
              &quot;@class&quot;: &quot;com.googlecode.jmxtrans.model.output.StdOutWriter&quot;
            },
            {
              &quot;@class&quot;: &quot;com.googlecode.jmxtrans.model.output.GraphiteWriter&quot;,
              &quot;settings&quot;: {
                &quot;host&quot;: &quot;127.0.0.1&quot;,
                &quot;port&quot;: &quot;2003&quot;
              }
            }
          ],
          &quot;resultAlias&quot;: &quot;tomcat8-connectors&quot;,
          &quot;obj&quot;: &quot;Catalina:type=ThreadPool,name=*&quot;,
          &quot;attr&quot;: [
            &quot;currentThreadCount&quot;,
            &quot;currentThreadsBusy&quot;
          ]
        },
        {
          &quot;outputWriters&quot;: [
            {
              &quot;@class&quot;: &quot;com.googlecode.jmxtrans.model.output.StdOutWriter&quot;
            },
            {
              &quot;@class&quot;: &quot;com.googlecode.jmxtrans.model.output.GraphiteWriter&quot;,
              &quot;settings&quot;: {
                &quot;host&quot;: &quot;127.0.0.1&quot;,
                &quot;port&quot;: &quot;2003&quot;
              }
            }
          ],
          &quot;resultAlias&quot;: &quot;tomcat8-requests&quot;,
          &quot;obj&quot;: &quot;Catalina:type=GlobalRequestProcessor,name=*&quot;,
          &quot;attr&quot;: [
            &quot;bytesReceived&quot;,
            &quot;bytesSent&quot;,
            &quot;errorCount&quot;,
            &quot;processingTime&quot;,
            &quot;requestCount&quot;
          ]
        }
      ]
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;name of the host where Tomcat is running&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;jmx remoting port (must match the value set in &lt;code&gt;setenv.sh&lt;/code&gt; in Tomcat installation)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;3&quot;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;queries item lists the MBeans which should be invoked&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;4&quot;&gt;&lt;/i&gt;&lt;b&gt;4&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;output writers item indicates where data collected should be sent&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;5&quot;&gt;&lt;/i&gt;&lt;b&gt;5&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;StdOutWriter simply prints collected data to the process output stream (useful for configuration debugging)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;6&quot;&gt;&lt;/i&gt;&lt;b&gt;6&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;GraphiteWriter sends data to a remote server which understands the Graphite protocols; by default, the text protocol
is used&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;7&quot;&gt;&lt;/i&gt;&lt;b&gt;7&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;graphite remote host (must match the value set in &lt;code&gt;ptrans.conf&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;8&quot;&gt;&lt;/i&gt;&lt;b&gt;8&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;graphite remote port (must match the value set in &lt;code&gt;ptrans.conf&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;9&quot;&gt;&lt;/i&gt;&lt;b&gt;9&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;name of the MBean to invoke&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;10&quot;&gt;&lt;/i&gt;&lt;b&gt;10&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;list of attributes to collect&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Eventually, start jmxtrans.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Starting jmxtrans&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;./jmxtrans.sh start config.json&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That&amp;#8217;s it!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular in ManageIQ sprint demo(s)</title>
      <link>http://www.hawkular.org/blog/2016/04/08/hawkular-manage-iq-sprint-demo.html</link>
      <author>noreply@hawkular.org (Heiko W. Rupp)</author>
      <pubDate>Fri, 8 Apr 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/04/08/hawkular-manage-iq-sprint-demo.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Like Hawkular, ManageIQ is also doing Sprint reviews at regular intervals.
Those reviews are announced on the &lt;a href=&quot;https://calendar.google.com/calendar/embed?src=contact%40manageiq.org&quot;&gt;ManageIQ calendar&lt;/a&gt;
and also on the &lt;a href=&quot;https://twitter.com/manageiq&quot;&gt;ManageIQ Twitter feed&lt;/a&gt;. Reviews usually happen every third week on Wednesday.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Hawkular provider integration that we &lt;a href=&quot;blog/2016/02/22/hawkular-manage-iq.html&quot;&gt;talked about before&lt;/a&gt; was now
part of the &lt;a href=&quot;http://manageiq.org/blog/2016/03/sprint-38-review-march-30-2016/&quot;&gt;Sprint 38 demo&lt;/a&gt;. Check the recording at around minute 10:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;600&quot; height=&quot;400&quot; src=&quot;http://www.hawkular.org/https://www.youtube.com/embed/ImKCajLxUn8?rel=0&amp;amp;start=612&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The next sprint review will be on April 20, 2016 @ 7:30am PDT/10:30am EDT/14:30 GMT and I expect more Hawkular goodies
being present.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Metrics 0.14.0 - Release</title>
      <link>http://www.hawkular.org/blog/2016/03/29/hawkular-metrics-0.14.0.Final-released.html</link>
      <author>noreply@hawkular.org (Stefan Negrea)</author>
      <pubDate>Tue, 29 Mar 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/03/29/hawkular-metrics-0.14.0.Final-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce release 0.14.0 of Hawkular Metrics. This release is anchored by the launch of a developer oriented distribution to help developers that want to integrate with Hawkular Metrics.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_major_changes&quot;&gt;Major Changes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Developer Distribution&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;First release of a Hawkular Metrics distribution oriented towards developers that integrate with Hawkular Metrics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This is an all inclusive distribution that developers can just download and run to easily test integration code&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The distribution is available in two flavors :&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Hawkular Metrics Web API + Wildfly 10 (requires an external C* cluster)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hawkular Metrics Web APi + Wildfly 10 + Embedded Cassandra Server&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The second distribution is available for installation on OS X via brew&lt;/p&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;$ brew tap hawkular/hawkular
$ brew install hawkular-metrics-ec&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To download and use on other platforms:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/hawkular-metrics-wildfly-standalone/0.14.0.Final/hawkular-metrics-wildfly-standalone-0.14.0.Final.zip&quot;&gt;Web API + WildFly 10&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/hawkular-metrics-wildfly-embedded-cassandra/0.14.0.Final/hawkular-metrics-wildfly-embedded-cassandra-0.14.0.Final.zip&quot;&gt;Web API + WildFly 10 + Embedded Cassandra&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For more details: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-364&quot;&gt;HWKMETRICS-364&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-366&quot;&gt;HWKMETRICS-366&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Upgraded Cassandra Driver&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The Cassandra driver has been update to version 3.0.0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This is part of the planned upgrade to Cassandra 3.x&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For more details: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-359&quot;&gt;HWKMETRICS-359&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;RxJava Improvements&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Resolved an issue where the RX computation threads could block while iterating over data results&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For more details: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-357&quot;&gt;HWKMETRICS-357&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_release_links&quot;&gt;Release links&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Github Release:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/releases/tag/0.14.0&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-metrics/releases/tag/0.14.0&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JBoss Nexus Maven artifacts:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&quot; class=&quot;bare&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jira release tracker:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12329845&quot; class=&quot;bare&quot;&gt;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12329845&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_hawkular_metrics_clients&quot;&gt;Hawkular Metrics Clients&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One of Hawkular Metrics&apos; objectives is to &lt;strong&gt;be easy to integrate with&lt;/strong&gt;; providing language specific clients is an important component for fulfilling this objective. Here is the current list of official clients:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ruby: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-ruby&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-ruby&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-python&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-python&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-go&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-go&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_thanks&quot;&gt;Thanks&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A big &quot;Thank  you&quot; goes to John Sanda, Thomas Segismont, Mike Thompson, Matt Wringe, Michael Burman, Libor Zoubek, and Heiko Rupp for their project  contributions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>QR Code support for Android Client</title>
      <link>http://www.hawkular.org/blog/2016/03/20/qr-android.html</link>
      <author>noreply@hawkular.org (Anuj Garg)</author>
      <pubDate>Mon, 21 Mar 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/03/20/qr-android.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Android Client now support QR code (contains combination of key, secret and optionally an expireAt attribute).
Tokens are great to be used as we can revoke it from the server without affecting the user credentials.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_ways_to_log_in&quot;&gt;Ways to log in&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are two ways to login into Hawkular Server with Android Client.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;With your credentials, client will generate a token for you and will save it for future use, until it is either expired or revoked.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;By using a already existing token. It can be done by simply opening QR code for corresponding token in the Web UI and scanning it with your android device.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_watch_the_demo_online&quot;&gt;Watch the demo online&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Visit the recording here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;600&quot; height=&quot;400&quot; src=&quot;http://www.hawkular.org/https://www.youtube.com/embed/kmI5kodxZmY?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_what_s_next&quot;&gt;What’s next?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Triggers are needed to be handled remotely. So feature to create, enable and disable them remotely can be of great help. Activities in the next time will be around that goal.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Metrics - Roadmap</title>
      <link>http://www.hawkular.org/blog/2016/03/16/hawkular-metrics-roadmap.html</link>
      <author>noreply@hawkular.org (Stefan Negrea)</author>
      <pubDate>Wed, 16 Mar 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/03/16/hawkular-metrics-roadmap.html</guid>
      	<description>
	&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_about&quot;&gt;About&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Metrics contributors have been working for the past few weeks on a roadmap for the upcoming year. The goal is to give clarity on the project direction, serve as a planning tool for releases, and show our strong commitment to open source. The roadmap below contains proposals that will need further research before becoming actual project features. The design, implementation, and review processes are open to the community, so contributions and feedback are always welcomed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The project and community are enjoying excellent growth. A maturing code base, an ever growing set of integrations, and consistent community contributions are ingredients that make this project successful and also an indication of the future.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For those not familiar with Hawkular Metrics, the project is a high performance and high availability storage engine for large volume metric data. Cassandra is used as the storage engine because of its flexible data model well suited for time-series data storage and linear scalability with no single point of failure.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_roadmap&quot;&gt;Roadmap&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cassandra 3.x&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The 3.x release of Cassandra is maturing, making the perfect timing for the project to transition from current 2.2.x line&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Expect this transition to happen rather soon since work is already in progress (driver updates, and a schema management tool)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Pre-computed aggregates&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Needed to support long term data storage and retrieval for high volume metrics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Single metrics roll-ups are also the foundation for pre-computed multi-metric aggregations, that goal is to work on this subsequent to single metric roll-ups&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Metric Enhancements&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Histogram metrics are fairly common in other time series databases. The plan is to add histogram metrics as a sub-metric to existing gauge metrics, analogous to what counter-rate metrics are counter metrics. It is common to do the calculations need for the histogram on the client side, but there are a lot of advantages to push the calculations to the server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add support for metrics baselines; automatically computed server-side and stored&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Implement an Apdex score, similar purpose to baselines, but based on the open standard&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Native Grafana integration&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Grafana integration is important for Hawkular Metrics due to lack of a dedicated UI. Currently Grafana integration works through an InfluxDB compatibility layer that has obvious disadvantages (maintaining compatibility with InfluxDB, limited set of features based on the InfluxDB capability).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A native Grafana provider will be easier to maintain and expose the full feature set of Hawkular Metrics&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Developer Support&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Provide a Hawkular Metrics distribution with all components needed for third-party developers to get a developer environment running with minimal effort&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An easy-to-use and all-inclusive distribution will avoid having platform developers configure Wildfly server and a Casasndra cluster just to test or write integration code&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Data Import &amp;amp; Export APIs&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The project already provides a growing set of APIs for querying metric data, but there are scenarios that require bulk data export into another system for further analysis. And vice-versa, import large amounts of data from another system for longer term storage and aggregation by Hawkular Metrics.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The goal is to provide APIs optimized for bulk importing or exporting data. Tools need to be both fast and easy to use, with the primary use case of moving a large amounts data well beyond the capability of current REST interface (eg. moving 100GB of data).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ElasticSearch integration&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;An optional integration with Elastic Search for tasks beyond the capability of Cassandra.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Basic examples for this are whole tenant searches and aggregation of text based data, such as tags, and even availability.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you have any other suggestion or would like to contribute to the project, please contact us; feedback is more than welcomed.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>The eleventh milestone of Hawkular released</title>
      <link>http://www.hawkular.org/blog/2016/03/15/hawkular-1.0.0.Alpha11-released.html</link>
      <author>noreply@hawkular.org (Heiko W.Rupp)</author>
      <pubDate>Tue, 15 Mar 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/03/15/hawkular-1.0.0.Alpha11-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular, the monitoring platform, is happy to announce milestone release 1.0.0.Alpha11.
You may perhaps wonder if you have missed Alpha 10. Don&amp;#8217;t worry, you did not miss anything.
We had an Alpha 10 build ready, but then decided to withdraw it and to bring you more features.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_running_on_wildfly_10_final&quot;&gt;Running on WildFly 10 final&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As announced in the last release we have rebased to WildFly 10 Final.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_tokens_and_qr_codes&quot;&gt;Tokens and QR Codes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It is now possible to generate tokens (combination of key and secret), that can be used
instead of username/password as credentials. Those tokens are great to be used in the
agent configuration so that no username/password is visible.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For future usage (e.g. for the Android client) it is possible to obtain a QR code, that
can be scanned and which contains the token information.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-token-screen&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/1alpha11_token_qr.png&quot; alt=&quot;Token screen&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. Token screen with QR code&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_apm_and_btm_included&quot;&gt;APM and BTM included&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_application_performance_management_apm&quot;&gt;Application Performance Management (APM)&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The new Application Performance tab provides a breakdown of the execution performance of each component
within applications deployed to the monitored servers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The graph provides a summary per component type. The table provides a breakdown of the activity by component type,
URI and optionally operation. Each row shows the elapsed and actual time spent in the component, where the elapsed
time also incorporates any time spent in sub (i.e. called) components.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-apm-subtab&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/hawka11-apm.png&quot; alt=&quot;APM tab&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 2. Tab for APM&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_business_transaction_management_btm&quot;&gt;Business Transaction Management (BTM)&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The “Business Transaction Management” capability is used to classify and monitor specific paths of execution through an
organisation’s applications and services. Rather than viewing application performance just at the component level, it
is possible to view information about end to end transactions.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-btm-subtab&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/hawka11-btm-overview.png&quot; alt=&quot;BTM Overview&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 3. Tab for BTM&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Managed tab provides an overview of any configured business transactions, such as the “Booking Service” and “Events
Service” above. It shows the number of transactions per hour, completion times and the number of transactions that
ended with a fault.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Selecting a particular business transaction will provide a more detailed view.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-btm-detail&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/hawka11-btm-details.png&quot; alt=&quot;BTM Details&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 4. BTM detail view&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The top graph shows statistics, aggregated over a selected time interval, related to the business transaction instances.
The details displayed are the transaction and fault counts as a bar chart, with the min, average and max completion
times as a line chart.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The left hand pie chart represents the breakdown of specific fault types associated with the completed business
transaction instances that ended in fault.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The right hand pie chart is used to display information about properties extracted from the business transaction
instances (defined when setting up a business transaction configuration). In this specific example, the
“performance id” values are being displayed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The segments of the pie charts (fault and different properties) can be selected to filter the business transaction
instances, to refine the information being viewed.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_inventory_explorer&quot;&gt;Inventory explorer&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We have added a generic inventoy explorer, that allows you to browse through
inventory in a hierarchical way and to pick metrics that then are displayed
on the page. The metrics to be shown are stored in the browser internal database.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-explorer-screen&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/1alpha11_explorer.png&quot; alt=&quot;Generic Inventory explorer&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 5. Screen with inventory explorer&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_release_notes&quot;&gt;Release notes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Full list of Jira issues fixed in this release:
&lt;a href=&quot;/releasenotes/1.0.0.Alpha11.html&quot;&gt;Release Notes - Hawkular - Version 1.0.0.Alpha11&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_notes_for_windows_users&quot;&gt;Notes for Windows users&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To run successfully you must start Hawkular like:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;openblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;standalone.bat -Dorg.hawkular.data.dir=&amp;lt;HawkulaInstallDirUsingFORWARDSlashes&amp;gt;/standalone/data&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_downloads&quot;&gt;Downloads&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can download the release here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha11/hawkular-dist-1.0.0.Alpha11.zip&quot;&gt;Hawkular 1.0.0.Alpha11 (zip)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha11/hawkular-dist-1.0.0.Alpha11.tar.gz&quot;&gt;Hawkular 1.0.0.Alpha11 (tar.gz)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_what_s_next&quot;&gt;What&amp;#8217;s next?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You have probably seen
that &lt;a href=&quot;http://www.hawkular.org/blog/2016/02/22/hawkular-manage-iq.html&quot;&gt;Hawkular and ManageIQ are now working together&lt;/a&gt;.
Activities in the next time will be around that goal.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Metrics 0.13.0 - Release</title>
      <link>http://www.hawkular.org/blog/2016/03/02/hawkular-metrics-0.13.0.Final-released.html</link>
      <author>noreply@hawkular.org (Stefan Negrea)</author>
      <pubDate>Wed, 2 Mar 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/03/02/hawkular-metrics-0.13.0.Final-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce release 0.13.0 of Hawkular Metrics. This release is anchored by Hawkular integration enhancements, under-the-cover refactorings and fixes, and a new bulk data generation tool.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_major_changes&quot;&gt;Major Changes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Data Generation Tool&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A new tool that generates bulk metrics data to be used in performance and load testing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It generates directly Cassandra data files (SSTables), which leads to a very fast generation process for large amounts of metrics data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For more details: &lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/tree/master/data-generator&quot;&gt;Data Generator&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-355&quot;&gt;HWKMETRICS-355&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Receive Metrics via Hawkular Bus&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;When deployed within Hawkular distribution, the project now accepts metrics via the Hawkular Bus; until now only the REST API had support for Metrics insertion.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hawkular Metrics currently support publishing of newly inserted metrics to the bus and receiving metrics via the bus.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For more details: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-347&quot;&gt;HWKMETRICS-347&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-352&quot;&gt;HWKMETRICS-352&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Sorted Stacked Metrics Results&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;When requesting stacked metrics aggregation the result is now ordered &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-353&quot;&gt;HWKMETRICS-353&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;External Integrations&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Heapster sink now divides storing to multiple calls. This is an improvement over the initial implementation that had one REST API call per metric (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-290&quot;&gt;HWKMETRICS-290&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ptrans now works with a Hawkular Metrics instance protected by Hawkular Accounts via Hawkular distribution  (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-342&quot;&gt;HWKMETRICS-342&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Grafana integration via Influxdb compatible end-point allows connections to a Hawkular Metrics instance protected by Hawkular Accounts via Hawkular distribution (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-343&quot;&gt;HWKMETRICS-343&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_release_links&quot;&gt;Release links&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Github Release:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/releases/tag/0.13.0&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-metrics/releases/tag/0.13.0&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JBoss Nexus Maven artifacts:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&quot; class=&quot;bare&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jira release tracker:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12329530&quot; class=&quot;bare&quot;&gt;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12329530&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_hawkular_metrics_clients&quot;&gt;Hawkular Metrics Clients&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One of Hawkular Metrics&apos; objectives is to &lt;strong&gt;be easy to integrate with&lt;/strong&gt;; providing language specific clients is an important component for fulfilling this objective. Here is the current list of official clients:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ruby: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-ruby&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-ruby&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-python&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-python&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-go&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-go&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_thanks&quot;&gt;Thanks&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A big &quot;Thank  you&quot; goes to John Sanda, Thomas Segismont, Mike Thompson, Matt Wringe, Michael Burman, Libor Zoubek, and Heiko Rupp for their project  contributions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Integration with ManageIQ</title>
      <link>http://www.hawkular.org/blog/2016/02/22/hawkular-manage-iq.html</link>
      <author>noreply@hawkular.org (Heiko W. Rupp)</author>
      <pubDate>Tue, 23 Feb 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/02/22/hawkular-manage-iq.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When we started Hawkular some time ago, we did it under the slogan of
&lt;em&gt;&quot;The Open Source Monitoring and Management Platform&quot;&lt;/em&gt;. And since then
we have achieved a lot and built components like our metrics store,
a powerful graph-oriented inventory or awesome alerting functionality.
And on top of all that a very nice and snappy Web 2.0 UI.&lt;br&gt;
&lt;br&gt;
It also became clear during development that users not only want excellent Middleware
management, which is the focus of Hawkular, but also need to know if
for example slowness of the application is coming from other components
of the stack way below the application server. Which is why we are
&lt;strong&gt;partnering with the ManageIQ project&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_collaborating_with_manageiq&quot;&gt;Collaborating with ManageIQ&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://www.manageIQ.org&quot;&gt;ManageIQ&lt;/a&gt; provides a huge amount of functionality
to manage and monitor virtual machines and containers on VMWare, EC2,
OpenStack, OpenShift, Azure, Rhevm and many more, which nicely complements
the application-centric view of Hawkular.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;ManageIQ has all the knowledge
about the OS and infrastructure the Middleware servers are running on,
where Hawkular only provides some basic information. ManageIQ can be
used to provision new VMs and containers with Middleware in them, which
can then be monitored and managed by Hawkular.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;ManageIQ itself operates as &lt;em&gt;manager of managers&lt;/em&gt;, where it does
not directly talk to a WildFly server, a VM or a container,
but rather tells Hawkular, oVirt or Kubernetes to act on its behalf.
ManageIQ then displays the results of these actions in its UI.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Hawkular team will, together with the ManageIQ team, build a
so called &lt;em&gt;provider integration&lt;/em&gt; in ManageIQ. This integration
lives inside the ManageIQ code base and talks to Hawkular over the
Hawkular-Ruby-Client gem. This integration brings to
ManageIQ the infrastructure needed to talk to the Hawkular server
as manager and thus the connected Middleware servers. This work
includes work on the ManageIQ UI to show the managed Middleware.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-platform-subtab&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/hawk_miq_arch.png&quot; alt=&quot;Hawkular and ManageIQ&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. Overall architecture&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_first_results_of_the_new_collaboration&quot;&gt;First results of the new collaboration&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;An initial outcome of this work can already be seen in the
Hawkular-client Ruby gem, that is used by the provider to talk to
the Hawkular server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Another big milestone is the initial version of the
Hawkular-Provider-integration inside ManageIQ master.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-platform-subtab&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/hawk_miq.png&quot; alt=&quot;Middelware tab in ManageIQ&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 2. Middleware tab in ManageIQ&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Metrics 0.12.0 - Release</title>
      <link>http://www.hawkular.org/blog/2016/02/02/hawkular-metrics-0.12.0.Final-released.html</link>
      <author>noreply@hawkular.org (Stefan Negrea)</author>
      <pubDate>Tue, 2 Feb 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/02/02/hawkular-metrics-0.12.0.Final-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce release 0.12.0 of Hawkular Metrics. This release is anchored by Hawkular integration enhancements, under-the-cover refactoring and changes in code structure, and removal of the deprecated JAX-RS 1.1 implementation.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_major_changes&quot;&gt;Major Changes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Hawkular Authentication&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;When deployed part of Hawkular distribution, Hawkular Metrics uses Hawkular Accounts for authentication and authorization&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Due to multi-tenant data segregation, Hawkular Accounts does both authentication and authorization since there are no specific permissions within Hawkular Metrics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For more details: (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-69&quot;&gt;HWKMETRICS-69&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-344&quot;&gt;HWKMETRICS-344&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Performance Improvements&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Removed obsolete code for tracking tenants; this increased for cases where data was written for a tenant that did not exist before  (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-341&quot;&gt;HWKMETRICS-341&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Removed the virtual clock handler (used to accelerate internal metrics clock) since it is no longer used (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-340&quot;&gt;HWKMETRICS-340&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;JAX-RS 1.1 Implementation - Removed&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The already deprecated JAX-RS 1.1 implementation of Hawkular Metrics has now been removed from the source tree and the modules consolidated&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Going forward only JAX-RS 2.0 implementation of the REST API is available&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Wildfly 10 - Deploying &amp;amp; Running&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Deploying and running the project on Wildfly 10  is now fully supported&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Support for Wildfly 9 is now dropped&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_release_links&quot;&gt;Release links&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Github Release:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/releases/tag/0.12.0&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-metrics/releases/tag/0.12.0&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JBoss Nexus Maven artifacts:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&quot; class=&quot;bare&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jira release tracker:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12329375&quot; class=&quot;bare&quot;&gt;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12329375&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_hawkular_metrics_clients&quot;&gt;Hawkular Metrics Clients&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One of Hawkular Metrics&apos; objectives is to &lt;strong&gt;be easy to integrate with&lt;/strong&gt;; providing language specific clients is an important component for fulfilling this objective. Here is the current list of official clients:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ruby: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-ruby&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-ruby&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-python&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-python&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-go&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-go&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_thanks&quot;&gt;Thanks&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A big &quot;Thank  you&quot; goes to John Sanda, Thomas Segismont, Mike Thompson, Matt Wringe, Michael Burman, Libor Zoubek, and Heiko Rupp for their project  contributions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular-BTM now includes Application Performance Management</title>
      <link>http://www.hawkular.org/blog/2016/01/25/hawkular-btm-apm.html</link>
      <author>noreply@hawkular.org (Gary Brown)</author>
      <pubDate>Mon, 25 Jan 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/01/25/hawkular-btm-apm.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce release 0.7.0.Final of the Hawkular Business Transaction Management project. The main focus for this release has been on adding Application Performance Management capabilities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now when you log into the BTM UI, you will first see the new Application Performance tab. Any activity that is recorded from the servers being managed will be presented as follows:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/2016-01-25-btm-apm.png&quot; alt=&quot;Application Performance Management&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. Application performance management information&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The graph represents the aggregation of durations based on the component type, at the specified interval and time span.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The information shown within the table is aggregated based on the component type (e.g. Database, EJB, Consumer, etc), the URI and (depending on whether relevant for the component type), the operation name.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The metrics shown are the number of aggregated records (e.g. the count), and the durations associated with the elapsed time and actual time. The elapsed time is the total amount of time spent within a component, including any calls to other (child) components, whereas the actual time represents only the time associated with that component.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The filters on the left hand side can be used to restrict the information that is displayed. The &lt;em&gt;search&lt;/em&gt; field can be used to locate specific entries in the table. The &lt;em&gt;Business Transaction&lt;/em&gt; field restricts the aggregated information to that associated with a business transaction configured within the other tab. Finally, the &lt;em&gt;Host Name&lt;/em&gt; field can restrict the viewed information to a specific host.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This &lt;em&gt;Application Performance&lt;/em&gt; view is very similar to a profiling tool, and therefore can be used to identify performance bottlenecks within a distributed application. The main difference is the level of granularity, profiling tools focus on method invocations, whereas this view is based on higher level components.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>The nineth milestone of Hawkular released</title>
      <link>http://www.hawkular.org/blog/2016/01/21/hawkular-1.0.0.Alpha9-released.html</link>
      <author>noreply@hawkular.org (Heiko W.Rupp)</author>
      <pubDate>Thu, 21 Jan 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/01/21/hawkular-1.0.0.Alpha9-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular, the monitoring platform, is happy to announce milestone release 1.0.0.Alpha9.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_rebase_on_wildfly_10_cr5&quot;&gt;Rebase on Wildfly 10 (CR5)&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The biggest, but also least visible change of this release has been the upgrade of the underling
appserver to WildFly 10 (CR5), that also features the new AMQ Artemis messaging subsystem.
On top of that Keycloak has also been upgrade to latest and greatest.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_agent_installer_screen&quot;&gt;Agent installer screen&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We made the agent installer screen generally available with the knowledge that
we are going to change and move that in the next release. This way you can
use it and the installer more easily to instrument your WildFly 10 and EAP 7 Beta
servers.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-installer-screen&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/1alpha9_installer.png&quot; alt=&quot;Installer Screen&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. Screen to get an agent installer from&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_platform_subtab_for_app_servers&quot;&gt;Platform subtab for App servers&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When you go to an individual application server you will now see a brand new
platform tab, that gives you some information about the (virtual) host, the
server is running on&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-platform-subtab&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/1alpha9_platform.png&quot; alt=&quot;Platform Overview&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 2. Platform subtab&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_tiling_of_datasources&quot;&gt;Tiling of Datasources&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The datasources tab has been converted to show a tile view for the individual datasources.
Clickin on one then leads to the detail view.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-ds-tiles&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/1alpha9_ds.png&quot; alt=&quot;Datasources&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 3. Datasources view&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_new_transactions_subtab&quot;&gt;New Transactions subtab&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Application servers now also show information about transactions&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-ts-tab&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/1alpha9_tx.png&quot; alt=&quot;URL List&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 4. Transactions subtab&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_release_notes&quot;&gt;Release notes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Full list of Jira issues fixed in this release:
&lt;a href=&quot;/releasenotes/1.0.0.Alpha9.html&quot;&gt;Release Notes - Hawkular - Version 1.0.0.Alpha9&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_notes_for_windows_users&quot;&gt;Notes for Windows users&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To run successfully you must start Hawkular like:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;openblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;standalone.bat -Dorg.hawkular.data.dir=&amp;lt;HawkulaInstallDirUsingFORWARDSlashes&amp;gt;/standalone/data&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_watch_the_demo_online&quot;&gt;Watch the demo online&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Visit the recording here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;600&quot; height=&quot;400&quot; src=&quot;http://www.hawkular.org/https://www.youtube.com/embed/jod9T7hCOGg?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We will announce the next milestone demo on our
&lt;a href=&quot;https://plus.google.com/b/100667078659222571663/+HawkularOrgProject&quot;&gt;Google Plus page&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_downloads&quot;&gt;Downloads&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can download the release here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha9/hawkular-dist-1.0.0.Alpha9.zip&quot;&gt;Hawkular 1.0.0.Alpha9 (zip)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha9/hawkular-dist-1.0.0.Alpha9.tar.gz&quot;&gt;Hawkular 1.0.0.Alpha9 (tar.gz)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_what_s_next&quot;&gt;What&amp;#8217;s next?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The next Alpha is planned for February 17th, and we are planning to work on the following features:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Move Hawkular onto WildFly 10 Final (if available )&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Improvements in agent installer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WF state display (&quot;reload needed&quot;) + action to reload&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Faceted filtering&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bug fixing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ruby-client work&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Perf improvements&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;metrics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;agent-inventory-sync&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Command Gateway Clients</title>
      <link>http://www.hawkular.org/blog/2016/01/21/hawkular-command-gateway-clients.html</link>
      <author>noreply@hawkular.org (John Mazzitelli)</author>
      <pubDate>Thu, 21 Jan 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/01/21/hawkular-command-gateway-clients.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I posted a new blog entry that briefly goes over what a client must do in order to be able to send and receive requests and responses over the Hawkular Command Gateway Web Socket interface.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;See: &lt;a href=&quot;http://management-platform.blogspot.com/2016/01/hawkular-command-gateway-clients.html&quot; class=&quot;bare&quot;&gt;http://management-platform.blogspot.com/2016/01/hawkular-command-gateway-clients.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Data Mining - Predictive Charts</title>
      <link>http://www.hawkular.org/blog/2016/01/20/hawkular-datamining-demo-hwk-alpha9.html</link>
      <author>noreply@hawkular.org (Pavol Loffay)</author>
      <pubDate>Wed, 20 Jan 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/01/20/hawkular-datamining-demo-hwk-alpha9.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I would like to present you functionality of Hawkular Data Mining module.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Data Mining module can be deployed in Hawkular and can be used to predict future values of metrics.
Predicted values are automatically sent to Alerts where conditions are evaluated and an alert can be triggered.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_time_series_models&quot;&gt;Time series models&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At the beginning, we &lt;a href=&quot;http://www.hawkular.org/blog/2015/10/24/hawkular-datamining.html&quot;&gt;started&lt;/a&gt; with linear
regression in Apache Spark. This simple model was a good start. Now we use Holt&amp;#8217;s linear trend method which is
a variant of exponential smoothing with linear trend. For an alert forecasting it is important to model a trend.
&lt;a href=&quot;https://en.wikipedia.org/wiki/Autoregressive_integrated_moving_average&quot;&gt;ARIMA&lt;/a&gt; models
were also proposed, however they require stationary time series and periodical recalculation of parameters would
have to be done. Which requires all historical data in place. For seasonal time series we plan to use Holt Winters
model which is just an extension of the model which is currently used.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_data_mining_with_hawkular&quot;&gt;Data Mining with Hawkular&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Predictions are by default disabled. Enabling can by done by creating Relationship from Tenant to Metric, MetricType
or Tenant. Relationship to Tenant enables forecasting of all metrics under given Tenant, to MetricType enables all
metrics of given type. Configuration properties at lower levels override uppers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Configuration has only one property&amp;#8201;&amp;#8212;&amp;#8201;forecasting horizon in seconds. If a new metric data is available
module predicts future values up to the last timestamp + forecasting horizon. Then, the predicted
values are sent to Alerts where conditions are evaluated.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;openblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Hawkular with integrated Data Mining:&lt;/div&gt;&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;$ git clone -b datamining git@github.com:hawkular/hawkular.git
$ cd hawkular
$ mvn clean install -Pdev
$ dist/target/hawkular-*/bin/standalone.sh&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;openblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Enable prediction for Heap Used Metric, &lt;a href=&quot;https://gist.github.com/pavolloffay/5c0a7aea318818f59293&quot;&gt;helper functions&lt;/a&gt;.&lt;/div&gt;&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;$ tenant=$(curl -s GET &apos;http://jdoe:password@localhost:8080/hawkular/inventory/tenant&apos;| grep --color=never -oP &apos;path&quot; : &quot;\K/t;[0-9a-z\-]+&apos;)
$ metric=`feed`&apos;/m;MI~R~%5B&apos;`feedId`&apos;%2FLocal~~%5D~MT~WildFly%20Memory%20Metrics~Heap%20Used&apos;
$ curl -ivX POST -H &quot;Content-Type: application/json&quot; &apos;http://jdoe:password@localhost:8080/hawkular/inventory/tenants/relationships&apos; -d &apos;{
    &quot;name&quot;: &quot;__inPrediction&quot;,
    &quot;source&quot;: &quot;&apos;$tenant&apos;&quot;,
    &quot;target&quot;: &quot;&apos;$metric&apos;&quot;,
    &quot;properties&quot;: {&quot;forecastingHorizon&quot;: 150}
}&apos;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now, we can query predictions for any time in the future. Of course we cannot get reasonable result for predictions
of further future. Confidence intervals widen as the forecast horizon increases. The rate at which the
confidence interval widen is a function of the selected model. The prediction API takes the number of steps to the
future for which it returns the predicted values. One step is equal to the interval at which given metric is collected.
So the number of steps intuitively corresponds to n future measurements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;openblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Get five step ahead predictions for Heap Used metric, &lt;a href=&quot;https://gist.github.com/pavolloffay/5c0a7aea318818f59293&quot;&gt;helper functions&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;$ metricId=&apos;MI~R~%5B&apos;`feedId`&apos;%2FLocal~~%5D~MT~WildFly%20Memory%20Metrics~Heap%20Used&apos;
$ curl -s GET -H &apos;Hawkular-Tenant:&apos;`tenantId` &apos;http://localhost:8080/hawkular/datamining/models/&apos;$metricId&apos;/predict?ahead=5&apos;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2016/datamining-heap-used-holt.png&quot; alt=&quot;Forecast of Heap Used&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. Blue dashed line represents forecast of &apos;Heap Used&apos; metric using Holt&amp;#8217;s linear trend model.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Chart in the Figure 1 can be found in Hawkular UI from branch
&lt;a href=&quot;https://github.com/hawkular/hawkular/tree/datamining&quot;&gt;datamining&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_as_standalone&quot;&gt;As Standalone&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Data Mining can be used also as standalone application. Following snippets of code show how to create a new
model directly through Data Mining REST API, insert data and get predictions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;openblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Create model&lt;/div&gt;&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;$ curl -ivX POST -H &apos;Content-Type: application/json&apos; -H &apos;Hawkular-Tenant: tenant1&apos; &apos;http://localhost:8080/hawkular/datamining/models&apos; -d &apos;{
   &quot;metricId&quot;: &quot;metric1&quot;,
   &quot;collectionInterval&quot;: &quot;150&quot;
  }&apos;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;$ curl -ivX POST -H &apos;Content-Type: application/json&apos; -H &apos;Hawkular-Tenant: tenant1&apos; &apos;http://localhost:8080/hawkular/datamining/models/metric1/learn&apos; -d &apos;[
  {&quot;timestamp&quot;: 1, &quot;value&quot;: 1},  {&quot;timestamp&quot;: 2, &quot;value&quot;: 10}, {&quot;timestamp&quot;: 3, &quot;value&quot;: 20},
  {&quot;timestamp&quot;: 4, &quot;value&quot;: 40}, {&quot;timestamp&quot;: 5, &quot;value&quot;: 50}]
 ]&apos;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;$ curl -ivX GET -H &apos;Hawkular-Tenant: tenant1&apos; &apos;http://localhost:8080/hawkular/datamining/models/metric1/predict?ahead=5&apos;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_what_s_next&quot;&gt;What&amp;#8217;s next?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Improve model - estimate smoothing parameters from historical data&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Holt-Winters seasonal version, model AR process with adaptive filter&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the most important metrics and tune models for them&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Metrics 0.11.0 - Release</title>
      <link>http://www.hawkular.org/blog/2016/01/12/hawkular-metrics-0.11.0.Final-released.html</link>
      <author>noreply@hawkular.org (Stefan Negrea)</author>
      <pubDate>Tue, 12 Jan 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/01/12/hawkular-metrics-0.11.0.Final-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce release 0.11.0 of Hawkular Metrics. This is a large release anchored by query API enhancements, large under-the-cover refactoring of the metric models, and support for deploying the project on Wildfly 10.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_major_changes&quot;&gt;Major Changes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Query API Updates&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Limit and Sort Order for raw data queries (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-334&quot;&gt;HWKMETRICS-334&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-62&quot;&gt;HWKMETRICS-62&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-51&quot;&gt;HWKMETRICS-51&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;limit&lt;/code&gt; and &lt;code&gt;order&lt;/code&gt; parameters are now available for raw data queries on all metric types&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;limit&lt;/code&gt; - integer representing the maximum number of raw data points to be returned&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;order&lt;/code&gt; - either &lt;code&gt;ASC&lt;/code&gt; or &lt;code&gt;DESC&lt;/code&gt; based on the timestamp of the data point&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;if both are specified than limit is applied from the start of the sorted list&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;for defaults and additional details please visit - &lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/blob/release/0.11.0/api/metrics-api-jaxrs/src/main/rest-doc/base.adoc&quot;&gt;Hawkular Metrics - Rest Documentation&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ability to query all metric raw or aggregate metric data (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-331&quot;&gt;HWKMETRICS-331&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;fromEarliest&lt;/code&gt; query parameter was added to allow querying for all available data for a metric&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;this allows querying all data without specifying start and end&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;data retention for the metric is taken account, so the max time span is from &lt;code&gt;now&lt;/code&gt; to &lt;code&gt;now - data retention&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fixed the url for querying rate data across multiple metrics (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-332&quot;&gt;HWKMETRICS-332&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Filtering metrics by id (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-234&quot;&gt;HWKMETRICS-234&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;with tag filtering enabled, it is now possible add id filtering via &lt;code&gt;id&lt;/code&gt; parameter&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;id&lt;/code&gt; parameter supports regex&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Internal Updates&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Model refactoring  (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-326&quot;&gt;HWKMETRICS-326&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-323&quot;&gt;HWKMETRICS-323&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;this was a large effort to consolidate the internal domain model without changing any of the user APIs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;this change will help the documentation efforts for future releases as well as a consistent data structure for the REST APIs&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Hawkular Integration&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The integration with Hawkular has now been updated to use asynchronous messages (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-337&quot;&gt;HWKMETRICS-337&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Wildfly 10 - Deploying &amp;amp; Running&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Deploying and running the project on Wildfly 10  is now fully supported&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Support for Wildfly 9 is deprecated and will be completely dropped in the next release&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_release_links&quot;&gt;Release links&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Github Release:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/releases/tag/0.11.0&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-metrics/releases/tag/0.11.0&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JBoss Nexus Maven artifacts:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&quot; class=&quot;bare&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jira release tracker:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12328918&quot; class=&quot;bare&quot;&gt;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12328918&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_hawkular_metrics_clients&quot;&gt;Hawkular Metrics Clients&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One of Hawkular Metrics&apos; objectives is to &lt;strong&gt;be easy to integrate with&lt;/strong&gt;; providing language specific clients is an important component for fulfilling this objective. Here is the current list of official clients:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ruby: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-ruby&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-ruby&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-python&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-python&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-go&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-go&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_thanks&quot;&gt;Thanks&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A big &quot;Thank  you&quot; goes to John Sanda, Thomas Segismont, Mike Thompson, Matt Wringe, Michael Burman, Libor Zoubek, and Heiko Rupp for their project  contributions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>We are hiring !</title>
      <link>http://www.hawkular.org/blog/2016/01/05/we-are-hiring.html</link>
      <author>noreply@hawkular.org (Thomas Heute)</author>
      <pubDate>Tue, 5 Jan 2016 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2016/01/05/we-are-hiring.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Red Hat is hiring a Java sustaining engineer&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_jboss_operations_network_jon_rhq_and_hawkular&quot;&gt;JBoss Operations Network (JON), RHQ and Hawkular&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.redhat.com/en/technologies/jboss-middleware/operations-network&quot;&gt;JBoss Operations Network&lt;/a&gt; is the product that is fully supported by Red Hat, it is currently based on the &lt;a href=&quot;rhq-project.org&quot;&gt;RHQ project&lt;/a&gt;. The RHQ project is still being maintained and enhanced while developing &lt;a href=&quot;http://www.hawkular.org&quot;&gt;Hawkular&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_who_are_we_looking_for&quot;&gt;Who are we looking for ?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We are looking for a talented Java developer, preferably with Java EE experience willing to help us on RHQ/JBoss Operations Network. You will join the sustaining engineering team and when time allows help on Hawkular as well.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You need to be in a country where &lt;a href=&quot;https://www.redhat.com/en/about/office-locations&quot;&gt;Red Hat has a legal entity&lt;/a&gt; but preferably Czech Republic, Poland, India, Mexico&amp;#8230;&amp;#8203;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_what_do_we_offer&quot;&gt;What do we offer ?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We offer a great place to work, Red Hat is listed as one of the &lt;a href=&quot;https://www.glassdoor.com/Best-Places-to-Work-LST_KQ0,19.htm&quot;&gt;best place to work&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Sustaining engineers get to learn a lot and fast, you will be challenged on many areas of the project, from Cassandra storage to Google Web Toolkit with the help of very talented engineers who will help you grow as a developer. We&amp;#8217;ll spread the work with the rest of the team depending on what you enjoy doing, what you want to do/learn and things that must be done.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You will be able to work remotely from home, partially or fully.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_how_to_apply&quot;&gt;How to apply ?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please &lt;a href=&quot;http://jobs.redhat.com/jobs/descriptions/middleware-software-engineer-management-and-monitoring-brno-jihomoravsky-kraj-czech-republic-job-1-5929970&quot;&gt;apply here&lt;/a&gt;, you can also contact me directly via direct message &lt;a href=&quot;https://twitter.com/theute&quot;&gt;through Twitter&lt;/a&gt; or find me (theute) on IRC Freenode servers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Best thing you can do is also to create Pull Requests on either of &lt;a href=&quot;https://github.com/hawkular/hawkular&quot;&gt;Hawkular&lt;/a&gt; or &lt;a href=&quot;https://github.com/rhq-project/rhq&quot;&gt;RHQ&lt;/a&gt; project, this would beat any other reference, if you are looking for ideas, feel free to join #hawkular or #rhq on the IRC Freenode servers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;m looking forward to grow the team and deliver more, faster, better, happier, stronger together.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>The eigth milestone of Hawkular released</title>
      <link>http://www.hawkular.org/blog/2015/12/16/hawkular-1.0.0.Alpha8-released.html</link>
      <author>noreply@hawkular.org (Heiko W.Rupp)</author>
      <pubDate>Wed, 16 Dec 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/12/16/hawkular-1.0.0.Alpha8-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular, the monitoring platform, is happy to announce milestone release 1.0.0.Alpha8.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_dealing_with_keycloak&quot;&gt;Dealing with Keycloak&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular uses Keycloak
&lt;a href=&quot;http://keycloak.jboss.org&quot;&gt;Keycloak&lt;/a&gt;
as its Single Sign On and Identity Management System.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the downloads, Keycloak is/as always running embedded and expected the Hawkular
server to run on localhost - if what was not the case the user had to edit two
files before being able to bind the server on a different (public) IP or even use
an external Keycloak server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With Hawkular 1.0.0.Alpha 8 it is now possible to pass a command line option on
startup to point to the Keycloak server:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;openblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;bin/standalone.sh -Dkeycloak.server.url=http://&amp;lt;kc-server&amp;gt;:&amp;lt;kc-port&amp;gt;/auth&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_tokens&quot;&gt;Tokens&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So far when doing REST calls from your client, via &lt;code&gt;curl&lt;/code&gt; or also when using the
 agent, it was required to pass username and password, which was not optimal.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We now started supporting the use of token + secret. For this purpose there is a
new UI part in the user menu&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-token-screen&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/a8_token_screen.png&quot; alt=&quot;Token Screen&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. Screen to create and list tokens&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When you have such a token, you will be then able to access URLs via&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;openblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;curl -H &apos;Accept: application/json&apos; -i -u b3063b1f-640b-4853-81df-47257c01e63e:94edc711ef80c592cb417bfffd9bc496 &lt;a href=&quot;http://snert:8080/hawkular/accounts/personas/current&quot; class=&quot;bare&quot;&gt;http://snert:8080/hawkular/accounts/personas/current&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;instead of&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;openblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;curl -H &apos;Accept: application/json&apos; -i -u jdoe:password &lt;a href=&quot;http://snert:8080/hawkular/accounts/personas/current&quot; class=&quot;bare&quot;&gt;http://snert:8080/hawkular/accounts/personas/current&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please note that this does not yet work for all subsystems.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_server_overview_page&quot;&gt;Server Overview page&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When you go to an indivdual application server you will now see a brand new
overview page&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-server-overview&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/a8_server_overview.png&quot; alt=&quot;Server Overview&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 2. Server overview&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This page is now also the default when you select an application server from the list.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_url_list&quot;&gt;URL List&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The URL list page has been revamped to show individual servers in small tiles that
include the state and also a sparkline diagram of the response time.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-server-overview&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/a8_url_list.png&quot; alt=&quot;URL List&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 3. Server overview&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As you can see, it is now possible to filter the tiles shown by name
and also state.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_release_notes&quot;&gt;Release notes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Full list of Jira issues fixed in this release:
&lt;a href=&quot;/releasenotes/1.0.0.Alpha8.html&quot;&gt;Release Notes - Hawkular - Version 1.0.0.Alpha8&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_notes_for_windows_users&quot;&gt;Notes for Windows users&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Windows:
To be able to perform deployments on Windows the user must hand-edit &lt;code&gt;standalone.xml&lt;/code&gt; and replace:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;openblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;blobTransferPolicy.uploadUrl=file:${org.hawkular.data.dir:${jboss.server.data.dir}}&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;with&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;openblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;blobTransferPolicy.uploadUrl=file:///${org.hawkular.data.dir:${jboss.server.data.dir}}&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To run successfully you must start hawkular like:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;openblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;standalone.bat -Dorg.hawkular.data.dir=&amp;lt;HawkulaInstallDirUsingFORWARDSlashes&amp;gt;/standalone/data&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_watch_the_demo_online&quot;&gt;Watch the demo online&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Visit the recording here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;600&quot; height=&quot;400&quot; src=&quot;http://www.hawkular.org/https://www.youtube.com/embed/2a5HAnt7Dik?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We will announce the next milestone demo on our
&lt;a href=&quot;https://plus.google.com/b/100667078659222571663/+HawkularOrgProject&quot;&gt;Google Plus page&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_downloads&quot;&gt;Downloads&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can download the release here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha8/hawkular-dist-1.0.0.Alpha8.zip&quot;&gt;Hawkular 1.0.0.Alpha8 (zip)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha8/hawkular-dist-1.0.0.Alpha8.tar.gz&quot;&gt;Hawkular 1.0.0.Alpha8 (tar.gz)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Agent-installer:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/wildfly-monitor/0.11.1.Final/hawkular-wildfly-monitor-installer-0.11.2.Final-standalone.jar&quot;&gt;Agent installer 0.11.2 (zip)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_what_s_next&quot;&gt;What&amp;#8217;s next?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The next Alpha is planned for January 20th, and we are planning to work on the following features:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Stabilization work&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;More work on labels&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Allow to use tokens all over the place&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Move Hawkular onto WildFly 10 (if available )&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>BTM: Instrumenting an application running from a docker image</title>
      <link>http://www.hawkular.org/blog/2015/12/01/hawkular-btm-instrument-docker-image.html</link>
      <author>noreply@hawkular.org (Gary Brown)</author>
      <pubDate>Tue, 1 Dec 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/12/01/hawkular-btm-instrument-docker-image.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This post outlines how to instrument a docker image, to capture business transaction management data and report it to a business transaction management server running in a remote location.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_obtaining_an_example_docker_image&quot;&gt;Obtaining an example docker image&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To demonstrate the approach, we will use an example docker image associated with a Javascript application running on Vert.x. Either download the complete example distribution from &lt;a href=&quot;https://github.com/vert-x3/vertx-examples/releases/tag/3.0.0&quot;&gt;here&lt;/a&gt;, and navigate to the &lt;em&gt;docker-examples/vertx-docker-javascript&lt;/em&gt; folder, or create a folder in your preferred location with the following two files:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Dockerfile&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;###
# vert.x docker example using a JavaScript verticle
# To build:
#  docker build -t sample/vertx-javascript .
# To run:
#  docker run -t -i -p 8080:8080 sample/vertx-javascript
###

# Extend vert.x image
FROM vertx/vertx3

# Set the name of the verticle to deploy
ENV VERTICLE_NAME hello-verticle.js

# Set the location of the verticles
ENV VERTICLE_HOME /usr/verticles

EXPOSE 8080

# Copy your verticle to the container
COPY $VERTICLE_NAME $VERTICLE_HOME/

# Launch the verticle
WORKDIR $VERTICLE_HOME
ENTRYPOINT [&quot;sh&quot;, &quot;-c&quot;]
CMD [&quot;vertx run $VERTICLE_NAME -cp $VERTICLE_HOME/*&quot;]&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;hello-verticle.js&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;vertx.createHttpServer().requestHandler(function (request) {
    request.response().end(&quot;Wild world&quot;);
}).listen(8080);&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Next, we should try out this example application so that we know how it works without any instrumentation. (Note: this assumes that you already have docker installed on your system, and the docker daemon is running. If not please see &lt;a href=&quot;http://www.docker.com&quot; class=&quot;bare&quot;&gt;http://www.docker.com&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As described in the &lt;em&gt;Dockerfile&lt;/em&gt; comment block, first run the command:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;docker build -t sample/vertx-javascript .&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;and once you have the &lt;em&gt;Successfully built &amp;#8230;&amp;#8203;&lt;/em&gt; message, run:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;docker run -t -i -p 8080:8080 sample/vertx-javascript&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;and once you have seen the &lt;em&gt;Succeeded in deploying verticle&lt;/em&gt; message, go to a browser and enter the URL &lt;a href=&quot;http://localhost:8080&quot; class=&quot;bare&quot;&gt;http://localhost:8080&lt;/a&gt;. This should display the text &lt;strong&gt;Wild world&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_creating_an_instrumented_version_of_the_docker_image&quot;&gt;Creating an instrumented version of the docker image&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When instrumenting a Java application, whether a standalone Java app, or components running within an application server, we only need to set the &lt;em&gt;JAVA_OPTS&lt;/em&gt; environment variable to reference a &lt;strong&gt;javaagent&lt;/strong&gt; jar, and define some properties for contacting the BTM server (i.e. URL and username/password).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When running an application within a docker image, although it is possible to specify environment variables (such as &lt;em&gt;JAVA_OPTS&lt;/em&gt;), it is not possible to reference files (i.e. jars) outside of the image. Therefore to be able to instrument an image, we need to create a separate image based on the one we wish to instrument, with the additional steps required to include the &lt;strong&gt;javaagent&lt;/strong&gt; and required properties.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To achieve this, create a separate folder from the image being instrumented, and define the following file:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Dockerfile&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;###
# vert.x docker example using a JavaScript verticle, instrumented for BTM
# To build:
#  docker build -t sample/vertx-javascript-with-btm .
# To run:
#  docker run -t -i --net=host sample/vertx-javascript-with-btm
###

# Extend vert.x javascript sample image
FROM sample/vertx-javascript

ENV BTM_URI http://localhost:8180/hawkular/btm
ENV BTM_USERNAME jdoe
ENV BTM_PASSWORD password

ENV BTM_VERSION=0.6.0.Final
ENV BTM_AGENT=/libs/hawkular-btm-agent-rest-$BTM_VERSION.jar

ADD https://repository.jboss.org/nexus/service/local/artifact/maven/redirect?r=releases&amp;amp;g=org.hawkular.btm&amp;amp;a=hawkular-btm-agent-rest&amp;amp;v=$BTM_VERSION&amp;amp;e=jar $BTM_AGENT

ENV JAVA_OPTS -javaagent:$BTM_AGENT=boot:$BTM_AGENT -Dhawkular-btm.base-uri=\$BTM_URI -Dhawkular-btm.config.refresh=10 -Dhawkular-btm.username=\$BTM_USERNAME -Dhawkular-btm.password=\$BTM_PASSWORD&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Most of the dockerfile is defining environment variable defaults, but the most important steps are the final two, adding the Hawkular BTM agent to the image and then defining the &lt;em&gt;JAVA_OPTS&lt;/em&gt; variable to reference it (along with the required properties).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Next we need to build the new instrumented image:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;docker build -t sample/vertx-javascript-with-btm .&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Once this has been successfully built, we need to start up a BTM server. This can be done by downloading the most recent distribution from &lt;a href=&quot;https://github.com/hawkular/hawkular-btm/releases&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-btm/releases&lt;/a&gt;, unpacking the distribution and running the following command from the top level folder:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;bin/standalone.sh -Djboss.socket.binding.port-offset=100&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This starts the BTM server on port 8180, so it does not conflict with the port being used by the instrumented application.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Final step is to run the instrumented example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;docker run -t -i --net=host sample/vertx-javascript-with-btm&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
Instead of defining port mapping, we have used the &lt;em&gt;--net=host&lt;/em&gt; option, to enable the instrumented application to call out to the BTM server running on the host. Also, the default environment variables can be overridden by using the &lt;em&gt;--env&lt;/em&gt; option (e.g. &lt;em&gt;--env BTM_URI=http://&amp;#8230;&amp;#8203;&amp;#8230;&amp;#8203;&lt;/em&gt;).
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Finally, once the &lt;em&gt;Succeeded in deploying verticle&lt;/em&gt; message is displayed, we return to a browser. If we enter a URL &lt;a href=&quot;http://localhost:8080/test/app&quot; class=&quot;bare&quot;&gt;http://localhost:8080/test/app&lt;/a&gt; and press return, we should see the same message as before (&lt;strong&gt;Wild world&lt;/strong&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If we now go to the BTM console (&lt;a href=&quot;http://localhost:8180/hawkular-ui/btm&quot; class=&quot;bare&quot;&gt;http://localhost:8180/hawkular-ui/btm&lt;/a&gt; logging in as &lt;em&gt;jdoe&lt;/em&gt; with password &lt;em&gt;password&lt;/em&gt;), you should see the entered URL in the &lt;em&gt;Candidates&lt;/em&gt; page. This shows that the BTM server has been informed about the business transaction performed on that URI.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_summary&quot;&gt;Summary&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This post has shown how any Java based application, defined as a docker image, can be instrumented by defining a derived image that adds the &lt;strong&gt;javaagent&lt;/strong&gt; jar and sets the required properties for communicating with the BTM server.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Monitoring Business Transactions in JBoss Ticket Monster App (Part 2)</title>
      <link>http://www.hawkular.org/blog/2015/11/30/hawkular-btm-0-6-0-released.html</link>
      <author>noreply@hawkular.org (Gary Brown)</author>
      <pubDate>Mon, 30 Nov 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/11/30/hawkular-btm-0-6-0-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce release 0.6.0.Final of the Hawkular Business Transaction Management project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The main focus for this release has been creating a UI to display statistical information about the configured business transactions. A demo can be seen &lt;a href=&quot;https://vimeo.com/147347020&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_highlights_of_this_release&quot;&gt;Highlights of this release&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Statistics page per business transaction configuration showing&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;a histogram with min, avg, max details, and transaction/fault counts overlaid as a bar chart&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fault pie chart&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;property pie chart with combobox to select the property of interest&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Selecting pie chart segment, for fault or property value, can add item to filter, focusing the information being displayed&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Validation capability added to the business transaction configuration UI page. If validation errors are detected in a business transaction configuration, it will be held in a staging area on the server, and is not published out to any active collector agents until fixed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;URI candidate list compression - where many URIs are related to a template with path parameter, the parameter will be inferred, and only the template URI shown in the list&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Processing faults, captured in the collector, will now be associated with the business transaction fragment so that they can be handled with an understanding of the context in which they occurred&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Where available, the &apos;principal&apos; will now be recorded against the business transaction (fragment). Servlet instrumentation rules have been updated to store this information on the business transaction, rather than node detail level.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SQL prepared statement description now excludes any representation of binary data, to make the description more readable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JAVA_OPT parameters required to configure the collector (java) agent have now been simplified, moving the byteman properties into BTM specific agent&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock warning&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Warning&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
There are some backward incompatible changes to the REST service APIs to hopefully make the APIs simpler and more consistent.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Download the release from &lt;a href=&quot;https://github.com/hawkular/hawkular-btm/releases/tag/0.6.0.Final&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Documentation on how to use Hawkular BTM can be found &lt;a href=&quot;http://www.hawkular.org/docs/components/btm/index.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The detailed release notes can be found &lt;a href=&quot;https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12316120&amp;amp;version=12328755&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Feature requests and bugs should be reported in our project &lt;a href=&quot;https://issues.jboss.org/browse/HWKBTM&quot;&gt;jira&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Yet another release of Hawkular, the seventh one !</title>
      <link>http://www.hawkular.org/blog/2015/11/19/hawkular-1.0.0.Alpha7-released.html</link>
      <author>noreply@hawkular.org (Thomas Heute)</author>
      <pubDate>Thu, 19 Nov 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/11/19/hawkular-1.0.0.Alpha7-released.html</guid>
      	<description>
	&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_what_is_new&quot;&gt;What is new?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular, the monitoring platform, is happy to announce the release of its seventh milestone 1.0.0.Alpha7.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_alert_center&quot;&gt;Alert Center&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;More progress on the alert center, with the option to list, search and edit triggers (the rules of the alerts definitions).
Alerts are also more prominent from the resources themselves.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_ui_modifications&quot;&gt;UI modifications&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Small/medium enhancements to the UI.
Ability to zoom in in a graph for more details.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_release_notes&quot;&gt;Release notes&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Full list of Jira issues fixed in this release:
&lt;a href=&quot;/releasenotes/1.0.0.Alpha7.html&quot;&gt;Release Notes - Hawkular - Version 1.0.0.Alpha7&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_watch_the_demo_online&quot;&gt;Watch the demo online&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Hawkular console demo also includes a preview of Hawkular BTM (Business Transaction Management)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Visit the recording here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;600&quot; height=&quot;400&quot; src=&quot;http://www.hawkular.org/https://www.youtube.com/embed/ExUnnEuM2zk?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We will announce the next milestone demo on our
&lt;a href=&quot;https://plus.google.com/+HawkularOrgProject&quot;&gt;Google Plus page&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_downloads&quot;&gt;Downloads&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can download the release here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha7/hawkular-dist-1.0.0.Alpha7.zip&quot;&gt;Hawkular 1.0.0.Alpha7 (zip)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha7/hawkular-dist-1.0.0.Alpha7.tar.gz&quot;&gt;Hawkular 1.0.0.Alpha7 (tar.gz)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_what_s_next&quot;&gt;What&amp;#8217;s next?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The next Alpha is planned for December 16th, and we are planning to work on the following:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;More stabilization work&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;More work on the organizations / multitenancy&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support agent download from server for installer purposes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start of an &apos;overview&apos; page per app server&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_btw&quot;&gt;Btw&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There is one easter-egg in the release, it&amp;#8217;s in the demo ;)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Monitoring Business Transactions in JBoss Ticket Monster App</title>
      <link>http://www.hawkular.org/blog/2015/11/10/hawkular-btm-0-5-0-released.html</link>
      <author>noreply@hawkular.org (Gary Brown)</author>
      <pubDate>Tue, 10 Nov 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/11/10/hawkular-btm-0-5-0-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce release 0.5.0.Final of the Hawkular Business Transaction Management project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The main focus of this release has been the development of a UI for configuring business transactions. This has lead to the introduction of an iterative approach for defining business transactions, as shown in this &lt;a href=&quot;https://vimeo.com/145283731&quot;&gt;demo monitoring the JBoss Ticket Monster application&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This demo shows how quickly an application can be monitored, without making any changes to the application, allowing business metrics to be obtained. In this case, the performance id can be captured from all bookings, allowing a pie chart to be displayed showing the percentage of bookings for each performance.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Feel free to try out Hawkular BTM on your own applications and provide feedback on any issues you find, or feature requests that you feel will improve the software.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_highlights_of_this_release&quot;&gt;Highlights of this release&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;UI for displaying summary details for Business Transactions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UI for configuring information about a Business Transaction&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Business Transaction level filtering. Enables transaction information to be &apos;ignored&apos; (permanently), &apos;disabled&apos; (temporarily), or &apos;all&apos;. Other intermediate levels of granularity may be supported in the future, including potentially filtering on a per instance basis.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support for JSON expression evaluation using JSONPath&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deriving &apos;completion time&apos; from Business Transaction instances, and storing independent from response time, in Elasticsearch. Percentile information is derived for the completion time, for use in the business transaction summary display&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added instrumentation rules for observe EJB invocations in JBoss EAP and Wildfly servers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added action for REST URI template processing to extract path and query parameters as business transaction properties&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Implemented refresh mechanism for retrieving updates to business transaction configurations within the collector (client), enabling iterative approach for defining the configuration&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Download the release from &lt;a href=&quot;https://github.com/hawkular/hawkular-btm/releases/tag/0.5.0.Final&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Documentation on how to use Hawkular BTM can be found &lt;a href=&quot;http://www.hawkular.org/docs/components/btm/index.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The detailed release notes can be found &lt;a href=&quot;https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12316120&amp;amp;version=12328438&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Feature requests and bugs should be reported in our project &lt;a href=&quot;https://issues.jboss.org/browse/HWKBTM&quot;&gt;jira&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Metrics 0.9.0 - Release</title>
      <link>http://www.hawkular.org/blog/2015/10/30/hawkular-metrics-0.8.0.Final-released.html</link>
      <author>noreply@hawkular.org (Stefan Negrea)</author>
      <pubDate>Fri, 30 Oct 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/10/30/hawkular-metrics-0.8.0.Final-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce release 0.9.0 of Hawkular Metrics. This is a regular schedule release anchored by integration enhancements for &lt;a href=&quot;http://www.hawkular.org/&quot;&gt;Hawkular&lt;/a&gt; &lt;a href=&quot;https://github.com/hawkular/hawkular&quot;&gt;project&lt;/a&gt; via &lt;a href=&quot;https://github.com/hawkular/hawkular-bus&quot;&gt;Hawkular Bus&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_major_changes&quot;&gt;Major Changes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.hawkular.org/&quot;&gt;Hawkular&lt;/a&gt; integration&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;When deployed within Hawkular, the project now publishes metrics insertion events on the &lt;a href=&quot;https://github.com/hawkular/hawkular-bus&quot;&gt;Hawkular Bus&lt;/a&gt; for consumption by interested parties (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-83&quot;&gt;HWKMETRICS-83&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-10&quot;&gt;HWKMETRICS-10&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added support for publishing large amounts of events (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-315&quot;&gt;HWKMETRICS-315&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Improved tag query&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;It is now possible to query metrics by tag via respective metric type end-points: &lt;code&gt;/gauges&lt;/code&gt;, &lt;code&gt;/counters&lt;/code&gt;,  &lt;code&gt;/availability&lt;/code&gt; (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-317&quot;&gt;HWKMETRICS-317&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;InfluxDB compatibility&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Added millisecond unit support (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-322&quot;&gt;HWKMETRICS-322&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_release_links&quot;&gt;Release links&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Github Release:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/releases/tag/0.9.0&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-metrics/releases/tag/0.9.0&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JBoss Nexus Maven artifacts:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&quot; class=&quot;bare&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jira release tracker:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12328458&quot; class=&quot;bare&quot;&gt;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12328458&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_hawkular_metrics_clients&quot;&gt;Hawkular Metrics Clients&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One of Hawkular Metrics&apos; objectives is to &lt;strong&gt;be easy to integrate with&lt;/strong&gt;; providing language specific clients is an important component for fulfilling this objective. Here is the current list of official clients:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ruby: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-ruby&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-ruby&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-python&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-python&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-go&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-go&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_thanks&quot;&gt;Thanks&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A big &quot;Thank  you&quot; goes to John Sanda, Thomas Segismont, Mike Thompson, Matt Wringe, Michael Burman, Libor Zoubek, and Heiko Rupp for their project  contributions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Metrics 0.10.0 - Release</title>
      <link>http://www.hawkular.org/blog/2015/11/30/hawkular-metrics-0.10.0.Final-released.html</link>
      <author>noreply@hawkular.org (Stefan Negrea)</author>
      <pubDate>Fri, 30 Oct 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/11/30/hawkular-metrics-0.10.0.Final-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce release 0.10.0 of Hawkular Metrics. This is a regular schedule release anchored by bus and performance and stability  enhancements, and container work. This release is not as large as previous ones because of we have a few major updates that will make their way into 0.11.0.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_major_changes&quot;&gt;Major Changes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Containers&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Docker containers for Hawkular Metrics REST Interface are now based on Wildfly 9 (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-147&quot;&gt;HWKMETRICS-147&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The deprecated container images have been moved out of the Hawkular Metrics repository (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-328&quot;&gt;HWKMETRICS-328&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Hawkular Bus Integration&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Performance improvements (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-319&quot;&gt;HWKMETRICS-319&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Influx Endpoint&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use series name prefix to match a counter or a gauge (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-66&quot;&gt;HWKMETRICS-66&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_release_links&quot;&gt;Release links&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Github Release:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/releases/tag/0.10.0&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-metrics/releases/tag/0.10.0&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JBoss Nexus Maven artifacts:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&quot; class=&quot;bare&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jira release tracker:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12328552&quot; class=&quot;bare&quot;&gt;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12328552&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_hawkular_metrics_clients&quot;&gt;Hawkular Metrics Clients&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One of Hawkular Metrics&apos; objectives is to &lt;strong&gt;be easy to integrate with&lt;/strong&gt;; providing language specific clients is an important component for fulfilling this objective. Here is the current list of official clients:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ruby: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-ruby&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-ruby&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-python&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-python&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-go&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-go&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_thanks&quot;&gt;Thanks&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A big &quot;Thank  you&quot; goes to John Sanda, Thomas Segismont, Mike Thompson, Matt Wringe, Michael Burman, Libor Zoubek, and Heiko Rupp for their project  contributions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Introduction to Hawkular Data Mining Module</title>
      <link>http://www.hawkular.org/blog/2015/10/24/hawkular-datamining.html</link>
      <author>noreply@hawkular.org (Pavol Loffay)</author>
      <pubDate>Sat, 24 Oct 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/10/24/hawkular-datamining.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I would like to introduce a module which will provide functionality for predicting alerts and also showing forecasts
of metrics in Hawkular UI.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_architecture&quot;&gt;Architecture&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let&amp;#8217;s start with the architecture how it fits to Hawkular. This module isn&amp;#8217;t intended to work in standalone fashion.
Used algorithm inside the engine will eventually change but architecture will remain as is described in the following
diagram.
On application startup, or if forecast for given metrics gets enabled, predictive model is initialized with data from
metrics module. If there is a new metric data available on the bus, it recalculates the model and provide users with
better
predictions. For alert prediction it is crucial to know the threshold value. Predicted value is compared to the
threshold
and if necessary, an alert event is posted on the bus. Predicted values for arbitrary timestamps can
be queried through REST API.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/hawkular-datamining-arch.png&quot; alt=&quot;Architecture&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. Architecture&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This module is not yet included in the main Hawkular distribution; therefore has to be started from separate application
server. To run this application, execute maven with dev profile. It produces configured wildfly in target directory of
hawkular-datamaning-dist module. Later it will be possible to deploy it as standalone web application in the Hawkular
server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;openblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Assuming the Hawkular server is running:&lt;/div&gt;&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;mvn clean install -Pdev &amp;amp;&amp;amp; ./hawkular-datamaning-dist/target/wildfly-*/bin/standalone.sh&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_algorithm&quot;&gt;Algorithm&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Metric data are basically streams of data coming from feeds therefore the algorithm has to recalculate weights of
predictive model for each new incoming data in order to get the most accurate results (online learning).
Apache Spark was chosen to provide streaming and distributed data processing engine. At the moment only local mode of
Apache Spark is used.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the following chart regression line of &apos;Heap Used&apos; metrics is showed. Currently, the line is drawn on
top of the historical data, the plan is to have it on the right to denote the future predictions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/hawkular-datamining-forecast.png&quot; alt=&quot;Forecast of Heap Used&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 2. Yellow line is showing the result of linear regression of &apos;Heap Used&apos; metrics.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So far I have been using linear regression with stochastic gradient descent. However this model doesn&amp;#8217;t fulfill
the requirements to get accurate results and predict seasonality. It was a good start to establish the architecture.
Further I&amp;#8217;m going to
continue with more sophisticated methods like ARIMA (Autoregressive integrated moving average) and investigate
possibility of using neural networks.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_goals&quot;&gt;Goals&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Provide an alert prediction for given set of metrics. Users should be able to optionally enable a prediction.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Show forecast of near future in Hawkular UI.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_next_steps&quot;&gt;Next steps&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Customize charts for forecasting &lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-738&quot;&gt;HAWKULAR-738&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Seasonal ARIMA model&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Forecasting with Multi-Layer neural networks&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_links&quot;&gt;Links&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Repository &lt;a href=&quot;https://github.com/hawkular/hawkular-datamining&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-datamining&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hawkular with customized charts &lt;a href=&quot;https://github.com/pavolloffay/hawkular/tree/prediction-charts&quot; class=&quot;bare&quot;&gt;https://github.com/pavolloffay/hawkular/tree/prediction-charts&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>The sixth milestone of Hawkular released</title>
      <link>http://www.hawkular.org/blog/2015/10/21/hawkular-1.0.0.Alpha6-released.html</link>
      <author>noreply@hawkular.org (Heiko W.Rupp)</author>
      <pubDate>Wed, 21 Oct 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/10/21/hawkular-1.0.0.Alpha6-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular, the monitoring platform, is happy to announce the release of its sixth milestone 1.0.0.Alpha6.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_alert_center&quot;&gt;Alert Center&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We have started providing the so called &apos;Alert Center&apos;, a place where you can see all fired alerts and alert
definitions in one place&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-add-jdbc-driver&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha6_alert_center.png&quot; alt=&quot;Alert Center&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. List of definitions in Alert Center&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_organizations&quot;&gt;Organizations&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We have also started providing support for organizations, where a user may belong to
zero, one or more organizations. This to support multi-tenancy in Hawkular, so that
it could be run in a central installation, but with multiple separate departments only
seing their own resources&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-add-jdbc-driver&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha6_orgs.png&quot; alt=&quot;Organizations&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 2. List of organization members&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_creation_and_deletion_of_data_sources&quot;&gt;Creation and deletion of Data sources&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There is also a new dialog to add a Datasource to a managed WildFly server&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-add-jdbc-driver&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha6_add_ds.png&quot; alt=&quot;Add Datasource button&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 3. Add Datsource button and action drop-down&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_agent_installer&quot;&gt;Agent installer&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We have now a little helper, the wildfly-agent installer, that makes it much easier to install
the agent inside a WildFly server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;openblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Run the installer&lt;/div&gt;&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;java -jar target/hawkular-wildfly-monitor-installer-0.10.1.Final-SNAPSHOT-standalone.jar \
  --module=/path/to/module.zip \
  --wildfly-home=/opt/wildfly-9.0.0.Final \
  --hawkular-server-url=http://myServer:8080&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Agent is then installed to Wildfly Server &lt;code&gt;/opt/wildfly-9.0.0.Final&lt;/code&gt; as a module and is able to
report to Hawkular Server located at &lt;code&gt;&lt;a href=&quot;http://myServer:8080&quot; class=&quot;bare&quot;&gt;http://myServer:8080&lt;/a&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Note that the installer uses a default of jdoe/password for &lt;em&gt;user/password&lt;/em&gt; that is encoded in
a properties file inside the installer jar. If you need a different value you need to edit those properties.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We will in the future (also) support the WildFly Feature packs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_release_notes&quot;&gt;Release notes&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Full list of Jira issues fixed in this release:
&lt;a href=&quot;/releasenotes/1.0.0.Alpha6.html&quot;&gt;Release Notes - Hawkular - Version 1.0.0.Alpha6&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_watch_the_demo_online&quot;&gt;Watch the demo online&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Visit the recording here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;600&quot; height=&quot;400&quot; src=&quot;http://www.hawkular.org/https://www.youtube.com/embed/i2KCTAp9Cb4?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Most parts of the Ansible playbooks and roles shown are
available &lt;a href=&quot;https://github.com/pilhuhn/hawkular-agent-ansible&quot;&gt;on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We will announce the next milestone demo on our
&lt;a href=&quot;https://plus.google.com/b/100667078659222571663/+HawkularOrgProject&quot;&gt;Google Plus page&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_downloads&quot;&gt;Downloads&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can download the release here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha6/hawkular-dist-1.0.0.Alpha6.zip&quot;&gt;Hawkular 1.0.0.Alpha6 (zip)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha6/hawkular-dist-1.0.0.Alpha6.tar.gz&quot;&gt;Hawkular 1.0.0.Alpha6 (tar.gz)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Wildfly-Monitor module is available standalone from:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/wildfly-monitor/0.11.1.Final/hawkular-monitor-0.11.1.Final-module.zip&quot;&gt;WildFly monitor 0.11.1 (zip)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Agent-installer:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/wildfly-monitor/0.11.1.Final/hawkular-wildfly-monitor-installer-0.11.2.Final-standalone.jar&quot;&gt;Agent installer 0.11.2 (zip)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_what_s_next&quot;&gt;What&amp;#8217;s next?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The next Alpha is planned for November 18th, and we are planning to work on the following features:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;More work on the alert center&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;More work on the organizations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finish work for JDBC Drivers and Datasources&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support agent download from server for installer purposes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start of an &apos;overview&apos; page per app server&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_btw&quot;&gt;Btw&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are two easter-eggs in the release :-)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Metrics 0.8.0 - Release</title>
      <link>http://www.hawkular.org/blog/2015/10/12/hawkular-metrics-0.8.0.Final-released.html</link>
      <author>noreply@hawkular.org (Stefan Negrea)</author>
      <pubDate>Mon, 12 Oct 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/10/12/hawkular-metrics-0.8.0.Final-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce release 0.8.0 of Hawkular Metrics. This short schedule release is anchored by major enhancements for metrics query aggregation, updated container support, and performance and stability enhancements.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_major_changes&quot;&gt;Major Changes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Counters&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Counter rates computations now avoid counter value resets (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-218&quot;&gt;HWKMETRICS-218&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Counter rates are now aligned with the actual counter data used to calculate the rate (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-284&quot;&gt;HWKMETRICS-284&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Aggregate Metric Statistics&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Added support  for aggregate statistics based on multiple metrics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Gauges, counters, and counter rates are supported&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Two methods of aggregation are currently available&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;uniform&lt;/strong&gt;: data from multiple metrics is bucketed as originating from a single source and then statistics are computed on the entire set&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;stacked&lt;/strong&gt;: statistics are first computed for every matching metric and then those statistics are stacked (added)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;by default uniform statistics are enabled, stacking is enabled by &lt;code&gt;stacked=true&lt;/code&gt; query parameter&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The end-points are  &lt;code&gt;/gauges/data&lt;/code&gt; , &lt;code&gt;/counters/data&lt;/code&gt;, &lt;code&gt;/counters/data/rate&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There is support to query by either tags or metrics ids; but not both&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Relevant JIRAs: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-292&quot;&gt;HWKMETRICS-292&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-263&quot;&gt;HWKMETRICS-263&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-264&quot;&gt;HWKMETRICS-264&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Data storage updates&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Schema changes will require rebuilding the database&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reduced data storage footprint by limiting the size of  metric type (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-301&quot;&gt;HWKMETRICS-301&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Container support&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Secure connections are enabled between Hawkular Metrics and the Heapster sink (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-217&quot;&gt;HWKMETRICS-217&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cqlsh can be access directly from within the Cassandra docker (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-260&quot;&gt;HWKMETRICS-260&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Various updates to the Heapster sink to support latest Hawkular Metrics features: &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-285&quot;&gt;HWKMETRICS-285&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-273&quot;&gt;HWKMETRICS-273&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-276&quot;&gt;HWKMETRICS-276&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-292&quot;&gt;HWKMETRICS-292&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_release_links&quot;&gt;Release links&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Github Release:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/releases/tag/0.8.0&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-metrics/releases/tag/0.8.0&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JBoss Nexus Maven artifacts:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&quot; class=&quot;bare&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jira release tracker:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12328157&quot; class=&quot;bare&quot;&gt;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12328157&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_hawkular_metrics_clients&quot;&gt;Hawkular Metrics Clients&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One of Hawkular Metrics&apos; objectives is to &lt;strong&gt;be easy to integrate with&lt;/strong&gt;; providing language specific clients is an important component for fulfilling this objective. Here is the current list of official clients:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ruby: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-ruby&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-ruby&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-python&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-python&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-go&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-go&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_thanks&quot;&gt;Thanks&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A big &quot;Thank  you&quot; goes to John Sanda, Thomas Segismont, Mike Thompson, Matt Wringe, Michael Burman, Libor Zoubek, Jirka Kremser, and Heiko Rupp for their project  contributions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Titan Graph DB Performance Tips</title>
      <link>http://www.hawkular.org/blog/2015/10/09/graph-db-performance.html</link>
      <author>noreply@hawkular.org (Lukas Krejci)</author>
      <pubDate>Fri, 9 Oct 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/10/09/graph-db-performance.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In Hawkular Inventory, we use the Tinkerpop API (version 2 for the time being)
to store our inventory model in a graph database. We chose Titan as the storage
engine configured to store the data in the Cassandra cluster that is also
backing Hawkular Metrics and Alerts. This blog post will guide you through some
performance-related lessons with Titan that we learned so far.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Inventory is under heavy development with a lot of redesign and refactoring
going on between releases so we took quite a naive approach to storing and
querying data from the graph database. That is, we store entities from our
model as vertices in the graph and the relationships between the entities as
edges in the graph. Quite simple and a school book example of how it should
look like.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We did declare a couple of indices in the database on the read-only aspects
of the vertices (i.e. a &quot;type&quot; of the entity the vertex corresponds to) but we
actually didn&amp;#8217;t pay too much attention to the performance. We wanted to have
the model right first.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Fast forward a couple of months and of course, the performance started to be
a real problem. The Hawkular agent for Wildfly is inserting a non-trivial
amount of entities and not only inserting them but also querying them has seen
a huge performance degradation compared to the simple examples we were unit
testing with (due to number of vertices and edges stored).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The time has come to think about how to squeeze some performance out of Titan
as well as how to store the data and query it more intelligently.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So what we did, you ask, to gain an order of mangnitude speed up?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are 2 aspects that needed our attention actually - insert performance,
and query performance, which is where we are an order of magnitude faster now.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I will focus only on the query performance in this post.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As a model example, let&amp;#8217;s consider the following query: find me all resources
in a certain feed that have a certain resource type.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For illustration purposes, this will be a fabricated graph that we will be
querying.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/2015-10-09-inv-structure.png&quot; alt=&quot;Example Inventory&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In &lt;a href=&quot;https://github.com/tinkerpop/gremlin/wiki&quot;&gt;Gremlin&lt;/a&gt; query language, our
example query would be expressed without any optimizations, that we will going
to describe later in the post, like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;g.V() &lt;b class=&quot;conum&quot;&gt;(1)&lt;/b&gt;
  .has(&quot;name&quot;, &quot;Red Hat, Inc.&quot;)
  .has(&quot;type&quot;, &quot;tenant&quot;) &lt;b class=&quot;conum&quot;&gt;(2)&lt;/b&gt;
  .out(&quot;contains&quot;) &lt;b class=&quot;conum&quot;&gt;(3)&lt;/b&gt;
  .has(&quot;name&quot;, &quot;staging&quot;)
  .has(&quot;type&quot;, &quot;environment&quot;) &lt;b class=&quot;conum&quot;&gt;(4)&lt;/b&gt;
  .out(&quot;contains&quot;) &lt;b class=&quot;conum&quot;&gt;(5)&lt;/b&gt;
  .has(&quot;name&quot;, &quot;test.redhat.com&quot;)
  .has(&quot;type&quot;, &quot;feed&quot;) &lt;b class=&quot;conum&quot;&gt;(6)&lt;/b&gt;
  .out(&quot;contains&quot;) &lt;b class=&quot;conum&quot;&gt;(7)&lt;/b&gt;
  .has(&quot;type&quot;, &quot;resource&quot;) &lt;b class=&quot;conum&quot;&gt;(8)&lt;/b&gt;
  .as(&quot;result&quot;) &lt;b class=&quot;conum&quot;&gt;(9)&lt;/b&gt;
    .in(&quot;defines&quot;) &lt;b class=&quot;conum&quot;&gt;(10)&lt;/b&gt;
    .has(&quot;type&quot;, &quot;resourceType&quot;)
    .has(&quot;name&quot;, &quot;JBoss EAP&quot;) &lt;b class=&quot;conum&quot;&gt;(11)&lt;/b&gt;
  .back(&quot;result&quot;); &lt;b class=&quot;conum&quot;&gt;(12)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;For all vertices in the graph&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Choose those that have the type &quot;tenant&quot; called &quot;Red Hat, Inc.&quot;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go out from them following the &quot;contains&quot; edges, to the target vertices&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;choose those that have the type &quot;environment&quot; and name &quot;staging&quot;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;out, following &quot;contains&quot; edges&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;choose vertices with type &quot;feed&quot; and name &quot;test.redhat.com&quot;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;out, following &quot;contains&quot; edges&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;choose vertices with type &quot;resource&quot;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mark the position in the traversal as a &quot;result&quot;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;follow &quot;defines&quot; edges that point to the &quot;result&quot; vertices&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;choose all the source vertices of the edges that have type &quot;Resource Type&quot;
and name &quot;JBoss EAP&quot;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;if the above yields a vertex, go back to the &quot;result&quot; and use that instead&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So out of that pipeline, as they call it, out come the vertices representing
resources with the desired resource type that live under given feed. E.g. in
the example above, the query will return &lt;code&gt;eap1-test.redhat.com&lt;/code&gt; and
&lt;code&gt;eap2-test.redhat.com&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So what&amp;#8217;s wrong with that you ask?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_performance_tips&quot;&gt;Performance Tips&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_reduce_number_of_hops&quot;&gt;1.1. Reduce number of Hops&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the graph visualization you can notice that there is a &lt;code&gt;contains&lt;/code&gt; edge
between a number of vertices. Semantically, in Hawkular Inventory vertices
connected by these edges form a tree and thus each of the vertices can be
uniquely identified by its path along the &lt;code&gt;contains&lt;/code&gt; edges. We call this
path a canonical path and we use this path in a number of ways in the API.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Additionally, this path is stored on each vertex (and indexed by a unique
index to ensure consistency of the data). Having the path stored on each
vertex and having an index on it enables us to be &quot;clever&quot; with the query
and rewrite the parts that follow the &lt;code&gt;contains&lt;/code&gt; chain from the Tenant
vertices down by a simple lookup of the canonical path.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As such, the original query would be transformed into:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;g.V()
  .has(&quot;path&quot;, &quot;Red Hat, Inc./staging/test.redhat.com&quot;)
  .out(&quot;contains&quot;)
  .has(&quot;type&quot;, &quot;resource&quot;)
  .as(&quot;result&quot;)
    .in(&quot;defines&quot;)
    .has(&quot;type&quot;, &quot;resourceType&quot;)
    .has(&quot;name&quot;, &quot;JBoss EAP&quot;)
  .back(&quot;result&quot;);&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is a lot faster than the original, because we use an index to find our
starting point much &quot;deeper&quot; in the graph than previously and have to make
less hops to get to our results.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_avoid_code_as_back_code_if_possible&quot;&gt;1.2. Avoid &lt;code&gt;.as()&amp;#8230;&amp;#8203;back()&lt;/code&gt; If Possible&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is not shown in the example but we found that we used the &lt;code&gt;.as()&amp;#8230;&amp;#8203;back()&lt;/code&gt;
construct in more places than necessary. Avoiding it speeds the execution up.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_mirror_properties_on_the_edges&quot;&gt;1.3. Mirror Properties on The Edges&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is the single most important optimization we&amp;#8217;ve done so far. The rationale
is this. To jump from a vertex to another vertex over an edge is a fairly
expensive operation. Titan uses the adjacency lists to store the vertices and
their edges in wide rows in Cassandra. It uses another adjacency list for edges
and their target vertices.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So to go from vertex to vertex, Titan actually has to do 2 queries. It would
be much easier if we could avoid that at least in some cases.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The solution here is to copy the values of some (frequently used and, in our
case, immutable) properties from the &quot;source&quot; and &quot;target&quot; vertices directly
to the edges. This helps especially in the cases where you do some kind of
filtering on the target vertices that you instead can do directly on the edges.
If there is a high number of edges to go through, this helps tremendously
because you greatly reduce the number of times you have to do the &quot;second hop&quot;
to the target vertex.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So this is the final version of the query that is an order of magnitude faster
than the original:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;g.V()
  .has(&quot;path&quot;, &quot;Red Hat, Inc./staging/test.redhat.com&quot;)
  .outE(&quot;contains&quot;) &lt;b class=&quot;conum&quot;&gt;(1)&lt;/b&gt;
  .has(&quot;targetType&quot;, &quot;resource&quot;) &lt;b class=&quot;conum&quot;&gt;(2)&lt;/b&gt;
  .inV() &lt;b class=&quot;conum&quot;&gt;(3)&lt;/b&gt;
  .as(&quot;result&quot;)
    .inE(&quot;defines&quot;) &lt;b class=&quot;conum&quot;&gt;(4)&lt;/b&gt;
    .has(&quot;sourceType&quot;, &quot;resourceType&quot;)
    .has(&quot;sourceName&quot;, &quot;JBoss EAP&quot;)
  .back(&quot;result&quot;);&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.out(label)&lt;/code&gt; goes to the target vertex, while &lt;code&gt;.outE(label)&lt;/code&gt; goes only to
the edge&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We&amp;#8217;re now on the edge and are filtering on its properties&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And we&amp;#8217;re jumping on the target vertex&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Again, only jumping on the edge and filtering only on its properties.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;While I am sure there are still some optimizations left that we could do to
make this even faster, I am quite satisfied with the speed up we were able to
achieve just by these changes.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular-BTM 0.4.0 released</title>
      <link>http://www.hawkular.org/blog/2015/10/06/hawkular-btm-0-4-0-released.html</link>
      <author>noreply@hawkular.org (Gary Brown)</author>
      <pubDate>Tue, 6 Oct 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/10/06/hawkular-btm-0-4-0-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce release 0.4.0.Final of the Hawkular Business Transaction Management project. The main focus for this release has been starting work on the server side capabilities and the introduction of an initial UI. A demo of the new functionality can be found &lt;a href=&quot;https://youtu.be/vCIgC3QuJTI&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/2015-10-06-btm-kibana.png&quot; alt=&quot;Kibana dashboard&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. Kibana dashboard showing response time information&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_highlights_of_this_release&quot;&gt;Highlights of this release&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Deriving Response Time metrics from the Business Transaction Fragments&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Storing the Business Transaction Fragments, and derived Response Time metrics, in Elasticsearch&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Creating of an initial UI based around Kibana to display the Response Time metric information&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Download the release from &lt;a href=&quot;https://github.com/hawkular/hawkular-btm/releases/tag/0.4.0.Final&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The detailed release notes can be found &lt;a href=&quot;https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12316120&amp;amp;version=12328248&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Feature requests and bugs should be reported in our project &lt;a href=&quot;https://issues.jboss.org/browse/HWKBTM&quot;&gt;jira&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Metrics - 2k Commits</title>
      <link>http://www.hawkular.org/blog/2015/10/05/hawkular-metrics-2k-commits.html</link>
      <author>noreply@hawkular.org (Stefan Negrea)</author>
      <pubDate>Mon, 5 Oct 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/10/05/hawkular-metrics-2k-commits.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Hawkular Metrics project reached a nice milestone last week. On Tuesday a pull-request merge commit marked the &lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/commit/1e04c5219b4eee6da0eab2714e7196a3dc45f0e1&quot;&gt;2000th&lt;/a&gt; commit on the master branch of the project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here are few other interesting data points about the project:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;over 25k lines of code (~87% Java)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/commits/master&quot;&gt;over 2k commits&lt;/a&gt;, &lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/pulls?q=is%3Aall&quot;&gt;over 385 pull requests&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/releases&quot;&gt;17 releases&lt;/a&gt; (with a monthly release cadence)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/commit/d725243544e1d692610cf56b7fe0ffdaff3487f8&quot;&gt;19 months since first repository commit&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics&quot;&gt;24 contributors, 35 forks, and 54 stars in Github&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For those not familiar with &lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/blob/master/README.adoc&quot;&gt;Hawkular Metrics&lt;/a&gt;, the project is a high performance storage engine for large volume metric data. The project uses Cassandra as a storage engine because of its flexible data model well suited for time-series data storage and linear scalability with no single point of failure.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Metrics offers powerful querying, aggregation, and tagging features for gauge, availability, and counter metrics. The data storage was designed with multi-tenancy as a core feature, which is supported out-of-box. The main public API for the project is a clean REST interface.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;These &lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/commits/1e04c5219b4eee6da0eab2714e7196a3dc45f0e1&quot;&gt;first 2000 commits&lt;/a&gt; are just the beginning of great things to come in a relatively young project. There are plans to add additional metric types and more complex statistical and querying capabilities. Ingestion data aggregation, cross metric down-sampling, and rich tagging queries over tag data are just a few of the features we have planned. So far we have been very careful introducing features in order to keep a API clean and deliver robust software.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We welcome all contributions and input. If you or your organization is looking for a metric storage engine, we would love to talk with you. We want to learn about your use case, how you approach metric storage, and if there features are missing in Hawkular Metrics for your particular application.  A good resource for future plans as well as past releases is the &lt;a href=&quot;https://issues.jboss.org/projects/HWKMETRICS?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&amp;amp;status=all&quot;&gt;Hawkular Metrics JIRA&lt;/a&gt;. Feel free to contact us overy irc (#hawkular on freenode), &lt;a href=&quot;https://lists.jboss.org/mailman/listinfo/hawkular-dev&quot;&gt;mailing list&lt;/a&gt;, or email.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As a closing, I want to send a big “Thank You” to the &lt;a href=&quot;http://www.hawkular.org/&quot;&gt;Hawkular organization&lt;/a&gt; for hosting the project and to all the project committers for their outstanding contributions:  &lt;a href=&quot;https://github.com/tsegismont&quot;&gt;Thomas Segismont&lt;/a&gt;, &lt;a href=&quot;https://github.com/stefannegrea&quot;&gt;Stefan Negrea&lt;/a&gt;, &lt;a href=&quot;https://github.com/jsanda&quot;&gt;John Sanda&lt;/a&gt;, &lt;a href=&quot;https://github.com/mtho11&quot;&gt;Mike Thompson&lt;/a&gt;, &lt;a href=&quot;https://github.com/pilhuhn&quot;&gt;Heiko Rupp&lt;/a&gt;, &lt;a href=&quot;https://github.com/burmanm&quot;&gt;Micheal Burman&lt;/a&gt;, &lt;a href=&quot;https://github.com/mwringe&quot;&gt;Matt Wringe&lt;/a&gt;, &lt;a href=&quot;https://github.com/ppalaga&quot;&gt;Peter Palaga&lt;/a&gt;, &lt;a href=&quot;https://github.com/jkandasa&quot;&gt;Jeeva Kandasamy&lt;/a&gt;, &lt;a href=&quot;https://github.com/heiko-braun&quot;&gt;Heiko Braun&lt;/a&gt;, &lt;a href=&quot;https://github.com/Jiri-Kremser&quot;&gt;Jirka Kremser&lt;/a&gt;, &lt;a href=&quot;https://github.com/vnugent&quot;&gt;Viet Nguyen&lt;/a&gt;, &lt;a href=&quot;https://github.com/jimmidyson&quot;&gt;Jimmi Dyson&lt;/a&gt;, &lt;a href=&quot;https://github.com/aslakknutsen&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpkrohling&quot;&gt;Juraci Paixão Kröhling&lt;/a&gt;, &lt;a href=&quot;https://github.com/theute&quot;&gt;Thomas Heute&lt;/a&gt;, &lt;a href=&quot;https://github.com/jshaughn&quot;&gt;Jay Shaughnessy&lt;/a&gt;, &lt;a href=&quot;https://github.com/metlos&quot;&gt;Lukas Krejci&lt;/a&gt;, &lt;a href=&quot;https://github.com/jstrachan&quot;&gt;James Strachan&lt;/a&gt;, &lt;a href=&quot;https://github.com/gkhachik&quot;&gt;Garik Khachikyan&lt;/a&gt;, &lt;a href=&quot;https://github.com/spadgett&quot;&gt;Sam Padgett&lt;/a&gt;, &lt;a href=&quot;https://github.com/vrockai&quot;&gt;Villiam Rockai&lt;/a&gt;, &lt;a href=&quot;https://github.com/jmazzitelli&quot;&gt;John Mazzitelli&lt;/a&gt;, &lt;a href=&quot;https://github.com/ammendonca&quot;&gt;Alexandre Mendonça&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To 4000 commits in half the time!&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Metrics 0.7.0 - Release</title>
      <link>http://www.hawkular.org/blog/2015/09/30/hawkular-metrics-0.7.0.Final-released.html</link>
      <author>noreply@hawkular.org (Stefan Negrea)</author>
      <pubDate>Wed, 30 Sep 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/09/30/hawkular-metrics-0.7.0.Final-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce release 0.7.0 of Hawkular Metrics. This release is anchored by major enhancements to counter metrics, updated tag support, and many performance and stability enhancements.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_major_changes&quot;&gt;Major Changes:&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cassandra Upgrade&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Cassandra version 2.2.x is now required for data storage&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Updated support for counter metrics&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Counter raw data and rate data now support buckets similar to the way gauge data does (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-280&quot;&gt;HWKMETRICS-280&lt;/a&gt;, &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-283&quot;&gt;HWKMETRICS-283&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The same query parameters as gauge metrics are supported.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tagging functionality (add, delete, update) is now identical to availability and gauge metrics.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Revamped tag functionality&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Tag support has been updated to have identical functionality across all metric types.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tagging data points is no longer supported; however, this functionality may resurface when requirements are better understood and there is a real use case around it (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-247&quot;&gt;HWKMETRICS-247&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Improved metric tag storage and querying; metric tags are no longer stored in the data table (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-254&quot;&gt;HWKMETRICS-254&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Data storage updates&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Schema changes will require rebuilding database&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Interval column has been removed from all tables (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-3&quot;&gt;HWKMETRICS-3&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stop the warning message in Cassandra log about batch statement size threshold being exceeded (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-252&quot;&gt;HWKMETRICS-252&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;System-wide data retention default setting is now configurable via system property (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-251&quot;&gt;HWKMETRICS-251&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Data retention can be set during tenant creation (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-127&quot;&gt;HWKMETRICS-127&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Influx endpoint&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;time_precision parameter is now supported (Hawkular Metrics does not support microseconds precision though)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;integer &quot;overflow&quot; fixes; long integers are now used where needed&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;time range restrictions support values without unit (i.e. &apos;time &amp;gt; 1010101010&apos;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PTrans&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;logback replaces log4j as logging backend&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;REST API documentation&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Improved documentation (no more broken links, more details on parameters and data types)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.hawkular.org/docs/rest/rest-metrics.html&quot; class=&quot;bare&quot;&gt;http://www.hawkular.org/docs/rest/rest-metrics.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_release_links&quot;&gt;Release links&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Github Release:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/releases/tag/0.7.0&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-metrics/releases/tag/0.7.0&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JBoss Nexus Maven artifacts:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&quot; class=&quot;bare&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jira release tracker:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12327874/&quot; class=&quot;bare&quot;&gt;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12327874/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_hawkular_metrics_clients&quot;&gt;Hawkular Metrics Clients&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One of Hawkular Metrics&apos; objectives is to &lt;strong&gt;be easy to integrate with&lt;/strong&gt;; providing language specific clients is an important component for fulfilling this objective. Here is the current list of official clients:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ruby: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-ruby&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-ruby&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-python&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-python&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-go&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-go&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_thanks&quot;&gt;Thanks&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A big &quot;Thank  you&quot; goes to John Sanda, Thomas Segismont, Mike Thompson, Matt Wringe, Michael Burman, Libor Zoubek, Jirka Kremser, and Heiko Rupp for their project  contributions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>The fifth milestone of Hawkular released</title>
      <link>http://www.hawkular.org/blog/2015/09/23/hawkular-1.0.0.Alpha5-released.html</link>
      <author>noreply@hawkular.org (Heiko W.Rupp)</author>
      <pubDate>Wed, 23 Sep 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/09/23/hawkular-1.0.0.Alpha5-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular, the monitoring platform, is happy to announce the release of its fourth milestone 1.0.0.Alpha5.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_improvements_in_wildfly_handling&quot;&gt;Improvements in WildFly handling&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Along with other improvments and bug fixes, this release has again circled around improved support for WildFly kind
of servers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_deploy_to_wildfly_servers&quot;&gt;Deploy to WildFly servers&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It is now possible to upload deployments to managed WildFly servers&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;On the deployments subtab, there is now a button that triggers a wizard to upload a deployment to a managed server:&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-server-add-deployment&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/2015-09-23-add-deployment-step.png&quot; alt=&quot;Deployment step&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. Wizard step to add a deployment&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_creation_of_jdbc_driver_modules&quot;&gt;Creation of JDBC driver modules&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There is also a new dialog to add a JDBC driver to a managed WildFly server&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-add-jdbc-driver&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/2015-09-23-add-driver.png&quot; alt=&quot;Add JDBC-Driver button&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 2. Add JDBC-Driver button&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;_jdr_report&quot;&gt;JDR Report&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And last but not least it is possible to obtain a so called &apos;JBoss Diagnostic Report&apos; from a managed server, which
can then be sent to Red Hat support when a case has been opened. You will find a button at the end of the WildFly
server pages.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Full list of Jira issues fixed in this release:
&lt;a href=&quot;/releasenotes/1.0.0.Alpha5.html&quot;&gt;Release Notes - Hawkular - Version 1.0.0.Alpha5&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_watch_the_demo_online&quot;&gt;Watch the demo online&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Join us on
&lt;a href=&quot;https://plus.google.com/events/crndlsuatqmk52ac9el8dbnueao&quot; class=&quot;bare&quot;&gt;https://plus.google.com/events/crndlsuatqmk52ac9el8dbnueao&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_downloads&quot;&gt;Downloads&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can download the release here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha5/hawkular-dist-1.0.0.Alpha5.zip&quot;&gt;Hawkular 1.0.0.Alpha5 (zip)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha5/hawkular-dist-1.0.0.Alpha5.tar.gz&quot;&gt;Hawkular 1.0.0.Alpha5(tar.gz)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_what_s_next&quot;&gt;What&amp;#8217;s next?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The next Alpha is planned for October 21st, and we are looking forward to work on the following features:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Central alert center&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Improve handling of JDBC drivers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Creation of data sources&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Easier installation of the WildFly agent&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Monitoring Rails App using Hawkular Metrics</title>
      <link>http://www.hawkular.org/blog/2015/09/03/monitoring-rails-using-hawkular-metrics.html</link>
      <author>noreply@hawkular.org (Libor Zoubek)</author>
      <pubDate>Thu, 3 Sep 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/09/03/monitoring-rails-using-hawkular-metrics.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this post I am going to show a way to monitor Rails application performance using Hawkular Metrics.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_setting_up_hawkular_metrics&quot;&gt;Setting up Hawkular Metrics&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are several ways of setting up Hawkular Metrics standalone server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Build &amp;amp; deploy&lt;/strong&gt; - follow &lt;a href=&quot;https://github.com/hawkular/hawkular-metrics&quot;&gt;Hawkular Metrics Readme&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Docker image&lt;/strong&gt; - start &lt;a href=&quot;https://hub.docker.com/r/hawkular/hawkular-metrics/&quot;&gt;Hawkular Metrics Docker Image&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Public instance&lt;/strong&gt; - use &lt;a href=&quot;http://livingontheedge.hawkular.org/hawklar/metrics&quot; class=&quot;bare&quot;&gt;http://livingontheedge.hawkular.org/hawklar/metrics&lt;/a&gt; which runs full Hawkular including Metrics. But be sure your data will get lost at some point as this instance gets rebuilt/cleaned up from time to time.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_hawkular_ruby_client&quot;&gt;Hawkular Ruby Client&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Recently we started to work on a &lt;a href=&quot;https://github.com/hawkular/hawkular-client-ruby&quot;&gt;hawkular-client&lt;/a&gt; in Ruby. So far we have implemented APIs for Hawkular Metrics. In this post we&amp;#8217;ll use the client to push metric data, but it can also retrieve data for further analysis or reports, for more see &lt;a href=&quot;http://www.hawkular.org/hawkular-client-ruby/Hawkular/Metrics/Client.html&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_monitoring_rails_application&quot;&gt;Monitoring Rails Application&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are several ways to monitor your Rails application&amp;#8217;s performance. The way being shown here is pretty easy to implement, but requires modifications in Rails application. It takes advantage of &lt;code&gt;around_filter&lt;/code&gt; of main ApplicationController. Within this filter we&amp;#8217;re going to measure each controller&amp;#8217;s response time to handle request.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_rails_demo_application&quot;&gt;Rails Demo Application&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;ve created simple Rails4 application called &lt;a href=&quot;https://github.com/lzoubek/rails-demo&quot;&gt;rails-demo&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I added the dependency on &lt;a href=&quot;https://rubygems.org/gems/hawkular-client&quot;&gt;hawkular-client&lt;/a&gt; gem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/lzoubek/rails-demo/blob/master/app/controllers/application_controller.rb&quot;&gt;Application controller&lt;/a&gt; code is pretty easy&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;require &quot;hawkularclient&quot;

class ApplicationController &amp;lt; ActionController::Base

  # Prevent CSRF attacks by raising an exception.
  # For APIs, you may want to use :null_session instead.
  protect_from_forgery with: :exception


  class MetricsReporter

    def initialize
      tenant_id = &quot;hawkular.org&quot;
      # create hawkular metrics client &lt;b class=&quot;conum&quot;&gt;(1)&lt;/b&gt;
      @client = Hawkular::Metrics::Client::new(&quot;http://localhost:8080/hawkular/metrics&quot;,&quot;&quot;,&quot;&quot;,{:tenant =&amp;gt; tenant_id})
      # create tenant in case it does not exist
      if @client.tenants.query.select { |tenant|  tenant.id == tenant_id}.empty?
      	@client.tenants.create(tenant_id)
      end
    end

    def around(controller, &amp;amp;block)
      # measure measure measure
      now = Time.now
      block.call
      time_spent = Time.now - now
      # metric ID must be unique within tenant &lt;b class=&quot;conum&quot;&gt;(2)&lt;/b&gt;
      gauge = &quot;App.#{controller.class.name}:#{controller.params[:action]}&quot;
      # make sure metric definition is created &lt;b class=&quot;conum&quot;&gt;(3)&lt;/b&gt;
      @client.gauges.create({:id =&amp;gt; gauge, :tags =&amp;gt; {:app =&amp;gt; &quot;App&quot;}}) rescue
      # report time in milliseconds
      @client.gauges.push_data(gauge ,{:value =&amp;gt; time_spent * 1000})
    end

  end

  # enable filter
  around_filter MetricsReporter::new

end&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;We create Hawkular Metrics &lt;strong&gt;@client&lt;/strong&gt;. Point it to your instance URL, leave user/pass empty (as this has not been implemented yet) and set &lt;strong&gt;tenant&lt;/strong&gt; option.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We encode our application Name, controller name and controller action into metric ID. So we have different metrics for listing objects and ie. editing an object.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We need to create metric definition with our tags, so we&amp;#8217;re able to find all metrics related to rails-demo app later. This line is not required in case you don&amp;#8217;t want to assign tags to your metric definitions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let&amp;#8217;s start Rails dev environment&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;gem install rails
git clone https://github.com/lzoubek/rails-demo.git
cd rails-demo
bundler install
bin/rake db:migrate RAILS_ENV=development
rails server&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;By now, WEBrick should be listening on localhost, open &lt;a href=&quot;http://localhost:3000/products&quot; class=&quot;bare&quot;&gt;http://localhost:3000/products&lt;/a&gt; and in case there is no error displayed congratulations, we are monitoring &lt;strong&gt;rails-demo&lt;/strong&gt;! Let&amp;#8217;s start hitting the UI with some more requests using helper bash script located in &lt;code&gt;rails-demo&lt;/code&gt; repository&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;./hit.sh&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At this time we are simulating traffic on &lt;strong&gt;rails-demo&lt;/strong&gt; application and pushing controller&amp;#8217;s response times to Hawkular Metrics service.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_the_results&quot;&gt;The Results&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Currently Hawkular Metrics (standalone) has no UI. But there is a bunch of useful angular components like &lt;a href=&quot;https://github.com/hawkular/hawkular-charts&quot;&gt;hawkular-charts&lt;/a&gt;, so I wrote simple UI which can at least find metric definitions by tags and draw metric data into line chart.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To watch metric data from rails-demo application open &lt;a href=&quot;http://lzoubek.github.io/hawkular-metrics-ui-demo&quot;&gt;Hawkular Metrics UI Demo&lt;/a&gt;, fill in &lt;strong&gt;Metrics API URL&lt;/strong&gt; (must be reachable from browser), &lt;strong&gt;Tenant ID&lt;/strong&gt; and tags.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;rails-controller-response-times&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/hawkular-metrics-demo-ui.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/hawkular-metrics-demo-ui.png&quot; alt=&quot;Rails Controller response times&quot; width=&quot;800&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_what_s_next&quot;&gt;What&amp;#8217;s next?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As you may have already noticed, Hawkular Metrics server perfomance can have negative impact on rails-demo application performance because we synchronously push the data within around_filter code.  Even the fact, that rails application must be modified in order to be monitored might not be a good thing. In the next blog post I&amp;#8217;ll write a simple service that is going to parse rails log files and report  data to Hawkular Metrics. In fact, it would be awesome to reuse &lt;a href=&quot;https://github.com/scoutapp/scout-plugins&quot;&gt;scout plugins&lt;/a&gt; and forward their reports into Hawkular Metrics.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Having metrics is only one piece in puzzle. Integration with &lt;a href=&quot;/docs/components/alerts/index.html&quot;&gt;Hawkular Alerts&lt;/a&gt; will let you detect performance regressions or unexpected loads.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Metrics 0.6.0 - Release</title>
      <link>http://www.hawkular.org/blog/2015/08/29/hawkular-metrics-0.6.0.Final-released.html</link>
      <author>noreply@hawkular.org (Stefan Negrea)</author>
      <pubDate>Sat, 29 Aug 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/08/29/hawkular-metrics-0.6.0.Final-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce release 0.6.0 of Hawkular Metrics. The release is anchored by enhancements for counter metrics, updates to the container infrastructure, and overall performance and stability enhancements.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_major_changes&quot;&gt;Major Changes:&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Querying&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Metrics can now be searched with regexp filtering capabilities on tags&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Metrics queries now support logical AND for tags&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Internal&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;TenantId and type were moved to the MetricId instead of Metric class&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Implicit tenants (not manaully created prior to sending first set of metric data) are now created on metrics insertion&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Container&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Updated to the latest Heapster version (0.17)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The communication between the Hawkular Metrics and Cassandra containers have now been secured. This means that only Hawkular Metrics can communicate with its Cassandra containers.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Counters&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Per-minute rates can be retrieved via the /hawkular/metrics/counters/{id}/rate endpoint.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Task scheduling&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The scheduler API and schema has undergone several changes. It is now possible to group related tasks so that order of execution can be controlled when there are interdependencies. There is still ongoing work to support asynchronous job execution and to provide fault tolerance.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ruby Client&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The project has now an official Ruby client, this joins the existing Go and Python clients.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_hawkular_metrics_clients&quot;&gt;Hawkular Metrics Clients&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One of Hawkular Metrics&apos; objectives is to &lt;strong&gt;be easy to integrate with&lt;/strong&gt;; providing language specific clients is an important component for fulfilling this objective. Here is the current list of official clients:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ruby: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-ruby&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-ruby&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-python&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-python&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go: &lt;a href=&quot;https://github.com/hawkular/hawkular-client-go&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-client-go&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_release_links&quot;&gt;Release links&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Github Release:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/releases/tag/0.6.0&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-metrics/releases/tag/0.6.0&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JBoss Nexus Maven artifacts:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&quot; class=&quot;bare&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jira release tracker:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12327689/&quot; class=&quot;bare&quot;&gt;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12327689/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_thanks&quot;&gt;Thanks&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A big &quot;Thank  you&quot; goes to John Sanda, Thomas Segismont, Mike Thompson, Matt Wringe, Michael Burman, Libor Zoubek, Jirka Kremser, and Heiko Rupp for their project  contributions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>The fourth milestone of Hawkular released</title>
      <link>http://www.hawkular.org/blog/2015/08/27/hawkular-1.0.0.Alpha4-released.html</link>
      <author>noreply@hawkular.org (Peter Palaga)</author>
      <pubDate>Thu, 27 Aug 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/08/27/hawkular-1.0.0.Alpha4-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular, the monitoring platform, is happy to announce the release of its fourth milestone 1.0.0.Alpha4.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_improvements_in_alerts_definitions&quot;&gt;Improvements in Alerts definitions&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Alerts are there to inform the user about an occurrence of a problem in some of the monitored resources. The present
release adds some new configuration dialogs and improves the existing ones.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are new configuration options to setup Alerts based on JVM Heap Usage and Garbage Collection.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-jvm-heap-usage-alerts&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/2015-08-27-jvm-heap-usage-alerts.png&quot; alt=&quot;JVM Alert Settings for Heap Usage&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. JVM Alert Settings for Heap Usage&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There is a new dialog to configure Alerts for Datasources.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-ds-alerts&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/2015-08-27-ds-alerts.png&quot; alt=&quot;JVM Alert Settings for Datasources&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 2. JVM Alert Settings for Datasources&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And there are new Specialized dialogs to configure Alerts for URLs&apos; Availability and Response Time.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-url-avail-alerts&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/2015-08-27-url-avail-alerts.png&quot; alt=&quot;JVM Alert Settings for URLs&apos; Availability&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 3. Settings for URLs&apos; Availability&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_red_hat_access_portal_integration&quot;&gt;Red Hat Access Portal Integration&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We added an integration with the &lt;a href=&quot;https://access.redhat.com/&quot;&gt;Red Hat Access Portal&lt;/a&gt; to Hawkular.
Users with valid Access Portal credentials are now able to browse the Knowledge Base, view and create Support Cases
using the Hawkular user interface. On the future releases, we plan to improve this integration by adding more features.
If that sounds interesting to you, we are looking forward for your feedback on #hawkular channel on
&lt;a href=&quot;https://freenode.net/&quot;&gt;Freenode&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-rh-access&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/2015-08-27-rh-access.png&quot; alt=&quot;Open a ticket on Red Hat Access portal using the Hawkular UI&quot; width=&quot;400&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 4. Open a ticket on Red Hat Access portal using the Hawkular UI&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_backend&quot;&gt;Backend&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;While these changes in backend are not used by the UI yet, they present an important step towards a new UI functionality
in future releases:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Hawkular Inventory now provides an API for configuration of resources and Hawkular Agent is using this API.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hawkular Bus and Agent now support the execution of operations on any resource
&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-483&quot;&gt;HAWKULAR-483&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hawkular Bus offers a new infrastructure to stream large data from UI to monitored Application Servers.
This is especially important for another feature that was added in the backend, namely the support for deploying
applications on monitored Application Servers.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_other_minor_tweaks_and_fixes&quot;&gt;Other minor tweaks and fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-488&quot;&gt;HAWKULAR-488&lt;/a&gt; - Display IP Address for Application Servers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-254&quot;&gt;HAWKULAR-254&lt;/a&gt; - Blank screen on Windows&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-336&quot;&gt;HAWKULAR-336&lt;/a&gt; - Inconsistent time information on URL details page&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-406&quot;&gt;HAWKULAR-406&lt;/a&gt; - Same data for 2 different Wfly servers shown&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-494&quot;&gt;HAWKULAR-494&lt;/a&gt; - Datasources not unique per server&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-497&quot;&gt;HAWKULAR-497&lt;/a&gt; - Resources in inventory are lost at restart&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-521&quot;&gt;HAWKULAR-521&lt;/a&gt; - &quot;http://livingontheedge.hawkular.org&quot; isn&amp;#8217;t using the hawkular favicon.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-526&quot;&gt;HAWKULAR-526&lt;/a&gt; - Downtime duration alert settings don&amp;#8217;t persist after save.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-536&quot;&gt;HAWKULAR-536&lt;/a&gt; - License Check of imported node_modules&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-553&quot;&gt;HAWKULAR-553&lt;/a&gt; - Url input is not validated (enough)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR-579&quot;&gt;HAWKULAR-579&lt;/a&gt; - &quot;Alert Settings&quot; link on URL details &amp;gt; All Alerts does notthing when clicked&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Full list of Jira issues fixed in this release:
&lt;a href=&quot;/releasenotes/1.0.0.Alpha4.html&quot;&gt;Release Notes - Hawkular - Version 1.0.0.Alpha4&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_watch_the_demo_online&quot;&gt;Watch the demo online&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;600&quot; height=&quot;400&quot; src=&quot;http://www.hawkular.org/https://www.youtube.com/embed/nekjPRwf50U?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_downloads&quot;&gt;Downloads&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can download the release here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha4/hawkular-dist-1.0.0.Alpha4.zip&quot;&gt;Hawkular 1.0.0.Alpha4 (zip)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha4/hawkular-dist-1.0.0.Alpha4.tar.gz&quot;&gt;Hawkular 1.0.0.Alpha4
(tar.gz)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_what_s_next&quot;&gt;What&amp;#8217;s next?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The next Alpha is planned for September 25th, and we are looking forward to work on the following features:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Deployment of new applications into managed servers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Definition of jdbc drivers and data sources&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Introduction to AutoResolve triggers</title>
      <link>http://www.hawkular.org/blog/2015/08/25/hawkular-alerts-autoresolve.html</link>
      <author>noreply@hawkular.org (Lucas Ponce)</author>
      <pubDate>Tue, 25 Aug 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/08/25/hawkular-alerts-autoresolve.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Alerts provide a simple Alert life-cycle management and an automated Alert resolution as core features.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_alert_lifecycle&quot;&gt;Alert Lifecycle&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Triggers are defined to detect problems. When a problem happens a new alert is generated by the engine
with the information about the data that matched the defined conditions. Also an Alert provides a simple lifecycle to
indicate the status of the problem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A new Alert starts with &lt;strong&gt;OPEN&lt;/strong&gt; status, optionally moves to &lt;strong&gt;ACKNOWLEDGED&lt;/strong&gt; to indicate the alert has been seen and the
issue is being resolved, and is finally set to &lt;strong&gt;RESOLVED&lt;/strong&gt; to indicate that the problem has been fixed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Alert lifecycle can be handled manually or can be managed automatically by the AutoResolve tooling.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_autoresolve_triggers&quot;&gt;AutoResolve triggers&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A trigger has one or multiple conditions that are set to detect a problem. When incoming data matches the
condition expresions an alert is fired to inform about this new issue. In this context, if the engine is still
receiving data, new alerts will be generated even if it refers to the &lt;strong&gt;same&lt;/strong&gt; problem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The detection of multiple alerts belonging to the &lt;strong&gt;same&lt;/strong&gt; problem can be controlled with fine granularity.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Alerts allow to define that once a problem triggered an alert, the trigger is not going to evaluate more data
until the issue is resolved to avoid repeated alerts for the same issue.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Resolution of a problem can be done manually or automatically using &lt;strong&gt;AUTORESOLVE&lt;/strong&gt; triggers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A trigger defines conditions that are responsible to detect a problem. These conditions are called &lt;strong&gt;FIRING&lt;/strong&gt; conditions
in Hawkular Alerts. Optionally, a trigger can define conditions that are responsible to detect when the problem is
gone. These new ones are called &lt;strong&gt;AUTORESOLVE&lt;/strong&gt; conditions. So, in the engine a trigger will be in &lt;strong&gt;FIRING&lt;/strong&gt; mode when it
is evaluating data to detect a problem while it will be a in &lt;strong&gt;AUTORESOLVE&lt;/strong&gt; mode when it is evaluating data to detect that
the problem is no longer present.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;These combination of &lt;strong&gt;FIRING&lt;/strong&gt; and &lt;strong&gt;AUTORESOLVE&lt;/strong&gt; conditions ensures that only &lt;strong&gt;one alert&lt;/strong&gt; is generated for a problem
and when the problem is resolved the trigger automatically returns to firing mode.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_example_of_alerting_on_process_availability&quot;&gt;Example of alerting on process availability&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let&amp;#8217;s define a simple example to show how AutoResolve triggers work.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In &lt;a href=&quot;https://github.com/lucasponce/hawkular-examples/blob/master/extended-tests/process-autoresolve/create-definition-check-process.sh&quot;&gt;create-definition-check-process.sh&lt;/a&gt; bash script
we have defined an AutoResolve trigger activating flags &lt;strong&gt;autoResolve&lt;/strong&gt; and &lt;strong&gt;autoResolveAlerts&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This fragment shows how to mark a trigger as AutoResolve:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;{
 &quot;id&quot;: &quot;check-firefox-process&quot;,
 &quot;name&quot;: &quot;Firefox process&quot;,
 &quot;description&quot;: &quot;Check availability firefox process&quot;,
 &quot;actions&quot;: {
   &quot;email&quot;: [&quot;my-group-to-notify&quot;]
 },
 &quot;firingMatch&quot;: &quot;ALL&quot;,
 &quot;autoResolveMatch&quot;: &quot;ALL&quot;,
 &quot;enabled&quot;: true,
 &quot;autoDisable&quot;: false,
 &quot;autoEnable&quot;: false,
 &quot;autoResolve&quot;: true, &lt;b class=&quot;conum&quot;&gt;(1)&lt;/b&gt;
 &quot;autoResolveAlerts&quot;: true, &lt;b class=&quot;conum&quot;&gt;(2)&lt;/b&gt;
 &quot;severity&quot;: &quot;HIGH&quot;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;autoResolve&lt;/strong&gt; flag set to &lt;strong&gt;true&lt;/strong&gt; indicates that the trigger will activate &lt;strong&gt;FIRING&lt;/strong&gt; and &lt;strong&gt;AUTORESOLVE&lt;/strong&gt; modes. Flag set
to &lt;strong&gt;false&lt;/strong&gt; will run the trigger only in &lt;strong&gt;FIRING&lt;/strong&gt; mode.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;autoResolveAlerts&lt;/strong&gt; flag set to &lt;strong&gt;true&lt;/strong&gt; will automatically mark all unresolved alerts (for the trigger) as &lt;strong&gt;resolved&lt;/strong&gt;
when &lt;strong&gt;AUTORESOLVE&lt;/strong&gt; trigger detect problem is gone. Flag set to &lt;strong&gt;false&lt;/strong&gt; will not modify the alert lifecycle.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And the next fragment will show how to declare &lt;strong&gt;FIRING&lt;/strong&gt; and &lt;strong&gt;AUTORESOLVE&lt;/strong&gt; conditions linked with the trigger:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;{
 &quot;triggerMode&quot;: &quot;FIRING&quot;, &lt;b class=&quot;conum&quot;&gt;(1)&lt;/b&gt;
 &quot;type&quot;: &quot;AVAILABILITY&quot;,
 &quot;dataId&quot;: &quot;firefox-process&quot;,
 &quot;operator&quot;: &quot;NOT_UP&quot;
}

...

{
 &quot;triggerMode&quot;: &quot;AUTORESOLVE&quot;, &lt;b class=&quot;conum&quot;&gt;(2)&lt;/b&gt;
 &quot;type&quot;: &quot;AVAILABILITY&quot;,
 &quot;dataId&quot;: &quot;firefox-process&quot;,
 &quot;operator&quot;: &quot;UP&quot;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;triggerMode&lt;/strong&gt; indicates in which mode will this condition be executed, &lt;strong&gt;FIRING&lt;/strong&gt; mode is used to detect the
problem we want to alert. In our example, it is an occurence of the Firefox process not being up.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;AUTORESOLVE&lt;/strong&gt; conditions are executed to detect when the probem is not present.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Finally, in &lt;a href=&quot;https://github.com/lucasponce/hawkular-examples/blob/master/extended-tests/process-autoresolve/send-data-check-process.sh&quot;&gt;send-data-check-process.sh&lt;/a&gt;
bash script we show how we can check and send availability data about process we want to monitor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The format of the payload is shown in the next fragment:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;{
 &quot;availability&quot;: [
    {&quot;id&quot;: &quot;firefox-process&quot;, &lt;b class=&quot;conum&quot;&gt;(1)&lt;/b&gt;
     &quot;type&quot;: &quot;AVAILABILITY&quot;,
     &quot;timestamp&quot;: $timestamp,
     &quot;value&quot;: &quot;$firefox_availability&quot;
     }
 ]
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;This &lt;strong&gt;id&lt;/strong&gt; should match the &lt;strong&gt;dataId&lt;/strong&gt; field defined in the conditions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Examples can be run using &lt;a href=&quot;/blog/2015/08/19/hawkular-alerts-standalone.html&quot;&gt;Hawkular Alerts in Standalone&lt;/a&gt;
deployment used in the previous post.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;More details about Hawkular Alerts features can be found at&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;/docs/dev/alerts.html&quot;&gt;Hawkular Alerts Developer Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;/docs/rest/rest-alerts.html&quot;&gt;Hawkular Alerts REST API&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Using Hawkular Alerts as a standalone engine</title>
      <link>http://www.hawkular.org/blog/2015/08/19/hawkular-alerts-standalone.html</link>
      <author>noreply@hawkular.org (Lucas Ponce)</author>
      <pubDate>Wed, 19 Aug 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/08/19/hawkular-alerts-standalone.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Alerts is a component of the Hawkular project. It&amp;#8217;s goal is to provide flexible and scalable alerting services in a easily consumable way. Some of Hawkular Alerts features are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Flexible, multi-condition Triggers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Powerful &quot;Dampening&quot; to control your alert firing rate .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Simple Alert Life-cycle management.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Automated Trigger disable and enable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Automated Alert Resolution by detecting the end of your alerting event.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pluggable Action and Notification capabilities to act on your alerts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Complete REST API for Definition and Execution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Optional standalone deployment or get added value with Hawkular Metrics or Hawkular.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multi-platform deployment as a J2EE WAR file on JBoss WildFly.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_standalone_deployments&quot;&gt;Standalone deployments&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One of the possibilities of the deployments is to use Alerts as a standalone component.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this scenario, the engine can run on an Wildfly server and we can interact via Java or REST API to create alerts
definitions or feed data.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Details of how to install and configure Hawkular Alerts can be found in the &lt;a href=&quot;http://www.hawkular.org/docs/components/alerts/index.html&quot;&gt;component documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_hello_world&quot;&gt;Hello World&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let&amp;#8217;s start using Hawkular Alerts with a small example.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We are going to create an alert definition like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;TRIGGER trigger-for-poc
WHEN
    data-x &amp;lt; 5 AND data-y &amp;gt; 5
HAPPENS
    2 consecutive times
THEN
    EMAIL to:admin-group@hawkular.org,cc:cc-group@hawkular.org&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;from this script &lt;a href=&quot;https://github.com/lucasponce/hawkular-examples/blob/master/create-definitions.sh&quot;&gt;create-definitions.sh&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the example, we create a trigger with two conditions that is linked with an email action for alert notifications.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now that we have the definitions created on the engine, next step will be to send data to evaluate the conditions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For this example we are going to use directly the REST API from a bash script &lt;a href=&quot;https://github.com/lucasponce/hawkular-examples/blob/master/send-data.sh&quot;&gt;send-data.sh&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The example sends random data to the engine, triggering alerts when two consecutive evaluations of the conditions
happens, then an email notification is sent with the action details.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We have created a &lt;a href=&quot;https://youtu.be/3i64kO0XEjw&quot;&gt;short demo&lt;/a&gt; showing the whole scenario.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe src=&quot;http://www.hawkular.org/https://www.youtube.com/embed/3i64kO0XEjw?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This example is quite simple and its goal is to show the flexibility to use the engine.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;More details about Hawkular Alerts features can be found at&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;/docs/dev/alerts.html&quot;&gt;Hawkular Alerts Developer Guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;/docs/rest/rest-alerts.html&quot;&gt;Hawkular Alerts REST API&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Feel free to try out the latest release for yourself on your own applications. If you have any questions or comments,
 please contact us on &lt;a href=&quot;/community/join.html&quot;&gt;these channels&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you have suggestions for features/enhancements, or find any bugs, then please log an issue in the &lt;a href=&quot;https://issues.jboss.org/browse/HWKALERTS&quot;&gt;project jira&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Visualising Business Transaction Information using Hawkular BTM 0.3.0.Final with RTGov Integration</title>
      <link>http://www.hawkular.org/blog/2015/08/14/hawkular-btm-0.3.0-demo.html</link>
      <author>noreply@hawkular.org (Gary Brown)</author>
      <pubDate>Fri, 14 Aug 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/08/14/hawkular-btm-0.3.0-demo.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Hawkular Business Transaction Management (BTM) project has released version &lt;a href=&quot;https://github.com/hawkular/hawkular-btm/releases/tag/0.3.0.Final&quot;&gt;0.3.0.Final&lt;/a&gt;. Some of the new features within this release:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Extract correlation ids, properties/details and message content from business transaction instances. This enables the generic information captured by instrumenting the underlying technologies to be enhanced with business specific information that can be useful for later analysis and to help correlate different parts of an overall business transaction instance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;BTM to RTGov gateway, to enable the business transaction instance data collected by BTM to be reported and visualised using RTGov (Runtime Governance) tooling.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fault path handling for switchyard services.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To demonstrate the use of Hawkular BTM, to extract business transaction specific data and report the information to RTGov, we have created a &lt;a href=&quot;https://youtu.be/bxeRJAsAu_8&quot;&gt;short screencast&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe src=&quot;http://www.hawkular.org/https://www.youtube.com/embed/bxeRJAsAu_8?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Feel free to try out the latest release for yourself on your own applications. If you have any questions or comments, please contact us on &lt;a href=&quot;/community/join.html&quot;&gt;these channels&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you have suggestions for features/enhancements, or find any bugs, then please log an issue in the &lt;a href=&quot;https://issues.jboss.org/browse/HWKBTM&quot;&gt;project jira&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular, all good things make three!</title>
      <link>http://www.hawkular.org/blog/2015/07/30/hawkular-1.0.0.Alpha3-released.html</link>
      <author>noreply@hawkular.org (Heiko Rupp)</author>
      <pubDate>Thu, 30 Jul 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/07/30/hawkular-1.0.0.Alpha3-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We are very happy to release the third version of Hawkular!
As with the previous one, this was the most important release of Hawkular so far.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_app_server_support&quot;&gt;App server support&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The main focus of this release clearly was the extended monitoring of &lt;a href=&quot;http://www.wildfly.org/&quot;&gt;WildFly&lt;/a&gt; application
servers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
For the moment you will need to instrument your server manually following
&lt;a href=&quot;http://www.hawkular.org/docs/user/getting-started.html#_install_a_wildfly_monitoring_agent&quot;&gt;these instructions&lt;/a&gt;.
We will make this easier in the future.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Deployments in the monitored server can now be enabled/disabled and redeployed. Deployment of new content
will come in the next release.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-server-deploy-detail&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/1.0.0.Alpha3_deploy_actions.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha3_deploy_actions.png&quot; alt=&quot;Hawkular server deployments&quot; width=&quot;500&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We also have a new &lt;em&gt;web&lt;/em&gt;-tab that gives statistics about the web subsystem of the managed WildFly&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-webtab&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/1.0.0.Alpha3_web_tab.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha3_web_tab.png&quot; alt=&quot;Wildfly servers web stats&quot; width=&quot;500&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_more_details_for_urls&quot;&gt;More details for URLs&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular now also collects the current IP address and the server information for the URLs being monitored&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-url-detail&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/1.0.0.Alpha3_url_traits.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha3_url_traits.png&quot; alt=&quot;URL details&quot; width=&quot;500&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_notable_changes_in_this_release_were&quot;&gt;Notable changes in this release were:&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Implement more app server details as mentioned above&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upgrade underlying versions of Hawkular-Metrics and other subsystems&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;More alerting capabilities&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Head over to the &lt;a href=&quot;/releasenotes/1.0.0.Alpha3.html&quot;&gt;Full release notes&lt;/a&gt; for more details.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_demo&quot;&gt;Demo&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We have again run a demonstration of the new Hawkular features:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;600&quot; height=&quot;400&quot; src=&quot;http://www.hawkular.org/https://www.youtube.com/embed/otLyoXYlV-s?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We plan to do a lot more Alpha releases with even more features, the next Alpha is planned for August 26th, and
&lt;a href=&quot;/docs/dev/development.html&quot;&gt;you can help us&lt;/a&gt; :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thank you for the contributions!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_downloads&quot;&gt;Downloads&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can download the release here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha3/hawkular-dist-1.0.0.Alpha3.zip&quot;&gt;Hawkular 1.0.0.Alpha3 (zip)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha3/hawkular-dist-1.0.0.Alpha3.tar.gz&quot;&gt;Hawkular 1.0.0.Alpha3
(tar.gz)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_what_s_next&quot;&gt;What&amp;#8217;s next?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;During the weeks until the next release and demo we want to address the following:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;More details of the application servers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Uploading of new applications into managed servers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;More alerting related changes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An easiert to grasp resource naming schema&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hopefully definition of jdbc drivers and data sources&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Monitoring a Vert.x Application using Hawkular BTM 0.2.0.Final</title>
      <link>http://www.hawkular.org/blog/2015/07/22/hawkular-btm-0.2.0-demo.html</link>
      <author>noreply@hawkular.org (Gary Brown)</author>
      <pubDate>Wed, 22 Jul 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/07/22/hawkular-btm-0.2.0-demo.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Hawkular Business Transaction Management (BTM) project has released version &lt;a href=&quot;https://github.com/hawkular/hawkular-btm/releases/tag/0.2.0.Final&quot;&gt;0.2.0.Final&lt;/a&gt;. Some of the new features within this release:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;URI inclusion/exclusion support, allowing business transactions to be filtered based on initial URIs of interest.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Propagate business transaction name, identified based on inclusion URI, through subsequent fragments for the same business transaction instance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Define instrumentation rules for Vert.x (HTTP and EventBus).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For those not familiar with &lt;a href=&quot;https://http://vertx.io&quot;&gt;Vert.x&lt;/a&gt;, it is an event driven, polyglot &quot;tool-kit for building reactive applications on the JVM&quot;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To demonstrate the use of Hawkular BTM, to monitor business transactions executing on vert.x, we have created a &lt;a href=&quot;https://youtu.be/TtAXiYhqTSk&quot;&gt;short screencast&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe src=&quot;http://www.hawkular.org/https://www.youtube.com/embed/TtAXiYhqTSk?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Feel free to try out the latest release for yourself on your own applications. If you have any questions or comments, please contact us on &lt;a href=&quot;/community/join.html&quot;&gt;these channels&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you have suggestions for features/enhancements, or find any bugs, then please log an issue in the &lt;a href=&quot;https://issues.jboss.org/browse/HWKBTM&quot;&gt;project jira&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular, the second release!</title>
      <link>http://www.hawkular.org/blog/2015/07/02/hawkular-1.0.0.Alpha2-released.html</link>
      <author>noreply@hawkular.org (Heiko Rupp)</author>
      <pubDate>Thu, 2 Jul 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/07/02/hawkular-1.0.0.Alpha2-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We are very happy to release the second version of Hawkular!
As with the previous one, this was the most important release of Hawkular so far.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_app_server_support&quot;&gt;App server support&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The main focus of this release clearly was the monitoring of &lt;a href=&quot;http://www.wildfly.org/&quot;&gt;WildFly&lt;/a&gt; application servers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
For the moment you will need to instrument your server manually following
&lt;a href=&quot;http://www.hawkular.org/docs/user/getting-started.html#_install_a_wildfly_monitoring_agent&quot;&gt;these instructions&lt;/a&gt;.
We will make this easier in the future.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&quot;img-serverslist&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/1.0.0.Alpha1_serverslist.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha1_serverslist.png&quot; alt=&quot;Hawkular servers list&quot; width=&quot;500&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now when you click on a server name you can see some of the details like JVM-Info, defined Datasources and a list of
deployments on the server.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-serversdetail&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/1.0.0.Alpha2_appserver_details.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha2_appserver_details.png&quot; alt=&quot;Hawkular servers details&quot; width=&quot;500&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_notable_changes_in_this_release_were&quot;&gt;Notable changes in this release were:&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Move the underlying container to WildFly 9.0 CR2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Implement some app server details as mentioned above&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upgrade underlying versions of Hawkular-Metrics and other subsystems&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Head over to the &lt;a href=&quot;/releasenotes/1.0.0.Alpha2.html&quot;&gt;Full release notes&lt;/a&gt; for more details.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_demo&quot;&gt;Demo&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thomas Heute has run a demonstration of the new Hawkular features, that you can watch here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;600&quot; height=&quot;400&quot; src=&quot;http://www.hawkular.org/https://www.youtube.com/embed/MbGoVh4d6cA?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We plan to do a lot more Alpha releases with even more features, the next Alpha is planned for July 29th, and
&lt;a href=&quot;/docs/dev/development.html&quot;&gt;you can help us&lt;/a&gt; :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thank you for the contributions!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_downloads&quot;&gt;Downloads&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can download the release here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha2/hawkular-dist-1.0.0.Alpha2.zip&quot;&gt;Hawkular 1.0.0.Alpha2 (zip)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha2/hawkular-dist-1.0.0.Alpha2.tar.gz&quot;&gt;Hawkular 1.0.0.Alpha2
(tar.gz)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_what_s_next&quot;&gt;What&amp;#8217;s next?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;During the weeks until the next release and demo we want to address the following:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;More details of the application servers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fix issues that are reported around web site pings and existing appserver details&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start running operations on the managed servers like redeploying applications&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_android_client&quot;&gt;Android client&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As you have seen in the demo video, Hawkular has an Android client, that is implemented by GSoC student
Arthur Dryomov. Here is the current version of its metrics screen&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-serversdetail&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/1.0.0.Alpha2_android_client.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha2_android_client.png&quot; alt=&quot;Android client metrics chart&quot; width=&quot;300&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular-BTM 0.1.0 released</title>
      <link>http://www.hawkular.org/blog/2015/07/01/hawkular-btm-0-1-0-released.html</link>
      <author>noreply@hawkular.org (Gary Brown)</author>
      <pubDate>Wed, 1 Jul 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/07/01/hawkular-btm-0-1-0-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce release 0.1.0 of the Hawkular Business Transaction Management project. The main focus for this release has been on capturing as much structural information about a business transaction as possible, with the minimum of configuration on the part of the user.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_highlights_of_this_release&quot;&gt;Highlights of this release&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Definition of the Business Transaction model for exchanging trace fragments related to business transaction execution across multiple systems/environments&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Basic in-memory REST service for reporting and querying business transaction fragments (&lt;a href=&quot;http://www.hawkular.org/docs/rest/rest-btm.html&quot;&gt;REST API documentation&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Integration with Hawkular Accounts, to provide authorization and authentication&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Embedded business transaction collector (agent), leveraging &lt;a href=&quot;http://byteman.jboss.org&quot;&gt;ByteMan&lt;/a&gt; to instrument technologies of interest&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Provide instrumentation rule model and translation to ByteMan rules (text based)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Instrumentation agent tested in:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Java standalone app (e.g. micro services)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wildfly&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Apache Tomcat&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Apache Karaf OSGi Container&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Initial instrumentation rules for:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Camel core&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HTTP clients (apache httpclient, java HttpURLConnection, RESTEasy JAX-RS client)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JMS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Servlet&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restlet&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JDBC&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SwitchYard&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Only basic information for each of these technologies is currently recorded, so future releases will enhance these rules, as well as add rules for other relevant technologies. If you have particular technologies you are interested in instrumenting, then please raise a feature request in our jira.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Download the release from &lt;a href=&quot;https://github.com/hawkular/hawkular-btm/releases/tag/0.1.0.Final&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The detailed release notes can be found &lt;a href=&quot;https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12316120&amp;amp;version=12327163&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Feature requests and bugs should be reported in our project &lt;a href=&quot;https://issues.jboss.org/browse/HWKBTM&quot;&gt;jira&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_thanks&quot;&gt;Thanks&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thanks to Juraci Paixão Kröhling for his help on integrating with Hawkular Accounts and Peter Palaga for his help with the release.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Monitoring a SwitchYard Application using Hawkular BTM 0.1.0.Final</title>
      <link>http://www.hawkular.org/blog/2015/07/01/hawkular-btm-0.1.0-demo.html</link>
      <author>noreply@hawkular.org (Gary Brown)</author>
      <pubDate>Wed, 1 Jul 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/07/01/hawkular-btm-0.1.0-demo.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular BTM 0.1.0.Final is the first release of the Hawkular Business Management project, and therefore currently only provides a minimal level of functionality. However despite the early stage of the project, this post will show how a business transaction implemented using SwitchYard can be monitored across two separate applications using JMS and Web Services.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This post assumes that the Hawkular BTM 0.1.0.Final distribution has been downloaded and unzipped, and the &lt;strong&gt;&lt;em&gt;BTM_HOME&lt;/em&gt;&lt;/strong&gt; environment variable setup, as described in the &lt;a href=&quot;http://www.hawkular.org/docs/components/btm/index.html&quot;&gt;user documentation&lt;/a&gt;. The environment being monitored is &lt;strong&gt;SwitchYard 2.0.0.Final&lt;/strong&gt; installed in &lt;strong&gt;Wildfly 8.1.0.Final&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For this post, we will be deploying the SwitchYard &lt;em&gt;quickstarts/demos/multiApp&lt;/em&gt; example. Once SwitchYard has been installed in Wildfly, follow the instructions in the &lt;em&gt;multiApp/README.md&lt;/em&gt; to deploy the application into Wildfly. Once deployed, stop the Wildfly server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;From a command window in the Wildfly &lt;em&gt;bin&lt;/em&gt; folder, run the following commands:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;. $BTM_HOME/client/env.sh
./standalone.sh -c standalone-full.xml&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Simple as that! Now the Wildfly server, running the SwitchYard application, has been instrumented (using &lt;a href=&quot;http://byteman.jboss.org/&quot;&gt;ByteMan&lt;/a&gt;) to capture some information relevant for Business Transaction Management. However before performing any transactions we need to startup the Business Transaction Management Server. Go to the BTM distribution&amp;#8217;s root folder and run:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;bin/standalone.sh -Dkeycloak.import=standalone/configuration/hawkular-realm.json \
                             -Djboss.socket.binding.port-offset=100&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;em&gt;keycloak.import&lt;/em&gt; argument is only required when starting the server for the first time, and initialises Hawkular Accounts (including setting up a default user &lt;strong&gt;jdoe&lt;/strong&gt; with password &lt;strong&gt;password&lt;/strong&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now we are ready to perform a business transaction instance. Open a command window in the SwitchYard &lt;em&gt;quickstarts/demos/multiApp&lt;/em&gt; folder and run:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;mvn exec:java -Pwildfly --settings ../../settings.xml&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That should return with a XML document indicating that the order has been accepted.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now issue the following command, to request a list of business transaction fragments from the Business Transaction Management Server:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;curl -X GET -u jdoe:password http://localhost:8180/hawkular/btm/transactions | python -m json.tool&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This will generate two business transaction fragments, the first for the OrderService web service, and the second for the JMS application that receives the order and then invokes the OrderService web service. See the &lt;a href=&quot;data/blog/2015/btm/hawkular-btm-0.1.0-demo.json&quot;&gt;full JSON here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The condensed and annotated version of the first fragment is:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;First business transaction fragment&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;    {
        &quot;id&quot;: &quot;9d037fcc-d3fc-4b51-a273-ae05d762ad32&quot;, &lt;b class=&quot;conum&quot;&gt;(1)&lt;/b&gt;
        &quot;nodes&quot;: [
            {
                &quot;correlationIds&quot;: [
                    {
                        &quot;scope&quot;: &quot;Interaction&quot;,
                        &quot;value&quot;: &quot;d9c727d6-9688-4206-8db5-226fe73abb79&quot; &lt;b class=&quot;conum&quot;&gt;(2)&lt;/b&gt;
                    }
                ],
                &quot;details&quot;: {
                    &quot;btm_source&quot;: &quot;javax-servlet&quot;, &lt;b class=&quot;conum&quot;&gt;(3)&lt;/b&gt;
                    &quot;remoteAddr&quot;: &quot;127.0.0.1&quot;,
                    &quot;remoteHost&quot;: &quot;127.0.0.1&quot;
                },
                &quot;startTime&quot;: 1435758196356,
                &quot;type&quot;: &quot;Consumer&quot;,
                &quot;uri&quot;: &quot;http://localhost:8080/quickstart-demo-multiapp/OrderService&quot;,
                &quot;duration&quot;: 391,
                &quot;endpointType&quot;: &quot;HTTP&quot;,
                &quot;nodes&quot;: [
                    {
                        &quot;details&quot;: {
                            &quot;btm_source&quot;: &quot;switchyard&quot;
                        },
                        &quot;operation&quot;: &quot;submitOrder&quot;, &lt;b class=&quot;conum&quot;&gt;(4)&lt;/b&gt;
                        &quot;startTime&quot;: 1435758196555,
                        &quot;type&quot;: &quot;Service&quot;,
                        &quot;uri&quot;: &quot;{urn:switchyard-quickstart-demo:multiapp:0.1.0}OrderService&quot;,
                        &quot;duration&quot;: 96,
                        &quot;nodes&quot;: [
                            {
                                &quot;details&quot;: {
                                    &quot;btm_source&quot;: &quot;switchyard&quot;
                                },
                                &quot;duration&quot;: 17,
                                &quot;nodes&quot;: [],
                                &quot;operation&quot;: &quot;lookupItem&quot;, &lt;b class=&quot;conum&quot;&gt;(4)&lt;/b&gt;
                                &quot;startTime&quot;: 1435758196565,
                                &quot;type&quot;: &quot;Service&quot;,
                                &quot;uri&quot;: &quot;{urn:switchyard-quickstart-demo:multiapp:0.1.0}OrderService/InventoryService&quot;
                            }
                        ]
                    }
                ]
            }
        ]
    }&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Each business transaction fragment has a unique id&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This interaction based correlation id will link this business transaction fragment with the web service invocation in the second fragment below&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Each node can provide additional details, which includes the &lt;em&gt;btm_source&lt;/em&gt; used to identify the technology that generated the node&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This fragment shows one SwitchYard Service (OrderService) calling another SwitchYard Service (OrderService/InventoryService)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The condensed and annotated version of the second fragment is:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Second business transaction fragment&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;    {
        &quot;id&quot;: &quot;bc832ed0-787d-47f0-993d-f37c1ca58b95&quot;,
        &quot;nodes&quot;: [
            {
                &quot;details&quot;: {
                    &quot;btm_source&quot;: &quot;javax-jms&quot;
                },
                &quot;startTime&quot;: 1435758194986,
                &quot;type&quot;: &quot;Consumer&quot;,
                &quot;uri&quot;: &quot;HornetQQueue[OrderRequestQueue]&quot;, &lt;b class=&quot;conum&quot;&gt;(1)&lt;/b&gt;
                &quot;duration&quot;: 1904,
                &quot;endpointType&quot;: &quot;JMS&quot;,
                &quot;nodes&quot;: [
                    .... (removed nodes associated with camel components)
                        &quot;nodes&quot;: [
                            {
                                &quot;details&quot;: {
                                    &quot;btm_source&quot;: &quot;switchyard&quot;
                                },
                                &quot;operation&quot;: &quot;submitOrder&quot;, &lt;b class=&quot;conum&quot;&gt;(2)&lt;/b&gt;
                                &quot;startTime&quot;: 1435758195245,
                                &quot;type&quot;: &quot;Service&quot;,
                                &quot;uri&quot;: &quot;{urn:switchyard-quickstart-demo:multiapp:0.1.0}OrderInput&quot;,
                                &quot;duration&quot;: 1524,
                                &quot;nodes&quot;: [
                                     .... (removed nodes associated with camel components)
                                        &quot;nodes&quot;: [
                                            {
                                                &quot;details&quot;: {
                                                    &quot;btm_source&quot;: &quot;switchyard&quot;
                                                },
                                                &quot;operation&quot;: &quot;submitOrder&quot;, &lt;b class=&quot;conum&quot;&gt;(3)&lt;/b&gt;
                                                &quot;startTime&quot;: 1435758195310,
                                                &quot;type&quot;: &quot;Service&quot;,
                                                &quot;uri&quot;: &quot;{urn:switchyard-quickstart-demo:multiapp:0.1.0}OrderInputComponent/OrderWebService&quot;,
                                                &quot;duration&quot;: 1454,
                                                &quot;nodes&quot;: [
                                                    {
                                                        &quot;correlationIds&quot;: [
                                                            {
                                                                &quot;scope&quot;: &quot;Interaction&quot;,
                                                                &quot;value&quot;: &quot;d9c727d6-9688-4206-8db5-226fe73abb79&quot; &lt;b class=&quot;conum&quot;&gt;(4)&lt;/b&gt;
                                                            }
                                                        ],
                                                        &quot;details&quot;: {
                                                            &quot;btm_source&quot;: &quot;java-httpurlconnection&quot;,
                                                            &quot;http_method&quot;: &quot;POST&quot;
                                                        },
                                                        &quot;duration&quot;: 35,
                                                        &quot;endpointType&quot;: &quot;HTTP&quot;,
                                                        &quot;startTime&quot;: 1435758196129,
                                                        &quot;type&quot;: &quot;Producer&quot;,
                                                        &quot;uri&quot;: &quot;http://localhost:8080/quickstart-demo-multiapp/OrderService&quot;
                                                    }
                    ....
    }&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The business transaction is initiated by a message being received on a JMS queue&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A SwitchYard Service is called which then invokes a SwitchYard Reference with a web service binding&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The SwitchYard Reference is currently recorded as a separate Service node&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HTTP invocation with the matching interaction correlation id, linking this Producer node with the Consumer node in the first business transaction fragment&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;These two business transaction fragments show how a business transaction instance can be traced across JMS, Apache Camel, SwitchYard and HTTP (Web Service), with the two fragments being correlated based on an ID shared between the HTTP Producer and Consumer nodes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Feel free to try out the release for yourself on your own applications. If you have any questions or comments, please contact us on &lt;a href=&quot;/community/join.html&quot;&gt;these channels&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you have suggestions for features/enhancements, or find any bugs, then please log an issue in the &lt;a href=&quot;https://issues.jboss.org/browse/HWKBTM&quot;&gt;project jira&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Metrics 0.4.0 - Release</title>
      <link>http://www.hawkular.org/blog/2015/06/23/hawkular-metrics-0-4-0-released.html</link>
      <author>noreply@hawkular.org (Stefan Negrea)</author>
      <pubDate>Mon, 22 Jun 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/06/23/hawkular-metrics-0-4-0-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce release 0.4.0 of Hawkular Metrics. The release is anchored by new Counter metric
implementation, various stability enhancements, and Grafana integration updates.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_release_updates&quot;&gt;Release Updates&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There was an email thread on Hawkular Devel List about 1 week ago that announced some minor changes to the
release process for Hawkular Metrics. This release is the first to apply the plan. Going forward, the project
will follow &lt;a href=&quot;https://developer.jboss.org/wiki/JBossProjectVersioning&quot;&gt;JBoss Project Versioning&lt;/a&gt; guidelines.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To avoid confusion here is an explanation of the release version number. The current release 0.4.0.Final
contains the code that was initially planned under 0.3.5. The version bump was required to align the
release version with the release mechanics. But there are no surprising commits or changes in functionality
that were not expected to be released.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_here_is_a_list_of_major_changes_in_this_release&quot;&gt;Here is a list of major changes in this release:&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Documentation&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Added a new, Metrics specific, documentation section on the Hawkular  website&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Installation, configuration and Grafana integration are covered&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Link: &lt;a href=&quot;http://www.hawkular.org/docs/components/metrics/index.html&quot; class=&quot;bare&quot;&gt;http://www.hawkular.org/docs/components/metrics/index.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;External Integration&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The Grafana graph panel editor is now able to autocomplete the metric name&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Documentation regrading the Grafana integration is now covered by the official Hawkular Metrics documentation (see above)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Heapster versions 0.14.0 and up can use Hawkular-Metrics as their time series data storage.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Updates to core API (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-113&quot;&gt;HWKMETRICS-113&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Metric is now a concrete type. GaugeMetric and AvailabilityMetric classes have been removed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The new DataPoint class replaces the former GaugeDataPoint and AvailabilityDataPoint classes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All of the new model classes are immutable. We will continue refactoring to make model classes immutable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Swagger and Jackson dependencies have been removed from core&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cassandra&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Cassandra Java driver upgraded to version 2.1.6 (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-109&quot;&gt;HWKMETRICS-109&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Embedded Cassandra is no longer part of the Hawkular Metrics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cassandra is now an integral part of Hawkular Project&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Embedded Cassandra has been moved to &lt;a href=&quot;https://github.com/hawkular/hawkular-commons&quot;&gt;Hawkular Commons&lt;/a&gt; repository&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For now, will keep including the compatible embedded jar distribution as part of the release downloads&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;NOTE: the embedded Cassandra should only be used for testing, debugging, or developing Hawkular Metrics. In production
environments please use a full Cassandra deployment.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Updated Counter Metric (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-53&quot;&gt;HWKMETRICS-53&lt;/a&gt;,
&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-59&quot;&gt;HWKMETRICS-59&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Core and REST APIs support reading/writing counters&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Core API supports generating and reading rates&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;REST API for rates will come in next release&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Developer tools&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Gatling load testing scenario added&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Source code: &lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/tree/master/load-tests&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-metrics/tree/master/load-tests&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This is part of the on-going effort for testing and performance profiling&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_release_links&quot;&gt;Release links&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Github Release:
&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/releases/tag/0.4.0&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-metrics/releases/tag/0.4.0&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JBoss Nexus Maven artifacts:
&lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&quot; class=&quot;bare&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jira release tracker:
&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12327451/&quot; class=&quot;bare&quot;&gt;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12327451/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_hawkular_metrics_0_5_0_beyond&quot;&gt;Hawkular Metrics 0.5.0 &amp;amp; Beyond&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Gauge Aggregates - Long-term storage of numeric metrics at the expense  of losing some fidelity. With task queue
released in 0.3.4, the expectation is to start the actual implementation 0.5.0.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update REST testing - while the current set of tests is a good gauge for regressions, the overall coverage is
still low.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Improved docker and kubernetes support - this is a long term goal for the project&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The counters will received improved REST API support&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Initial support in the Python &amp;amp; Golang clients for counters&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_thanks&quot;&gt;Thanks&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A  big &quot;Thank  you&quot; goes to John Sanda, Thomas Segismont, Mike Thompson, Matt Wringe, Michael Burman, Jirka Kremser, and Heiko Rupp for their  project  contributions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>MarsJUG and RivieraDEV retrospective</title>
      <link>http://www.hawkular.org/blog/2015/06/17/marsjug-and-rivieradev-retrospective.html</link>
      <author>noreply@hawkular.org (Thomas Segismont)</author>
      <pubDate>Wed, 17 Jun 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/06/17/marsjug-and-rivieradev-retrospective.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Recently, I gave a talk in French at the &lt;a href=&quot;http://marsjug.org/&quot;&gt;Marseille Java User Group&lt;/a&gt;
and did it again last week at the &lt;a href=&quot;http://www.rivieradev.com/&quot;&gt;RivieraDEV&lt;/a&gt; conference.
The presentation was called &lt;em&gt;&quot;Tenir ses applications à l&amp;#8217;oeil avec Hawkular Metrics&quot;&lt;/em&gt; (&lt;em&gt;&quot;Keep an eye on your applications
with Hawkular Metrics&quot;&lt;/em&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;m a MarsJUG &lt;em&gt;aficionado&lt;/em&gt;, so it was fun to be on the other side of the desk.
But it was my first time at RivieraDEV, and I have to say I was quite impressed.
The organization team did an awesome job, and the sessions I&amp;#8217;ve attended were all very interesting.
Needless to say, a conference located in the French Riviera has some advantages&amp;#8230;&amp;#8203;&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;fr&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;At the &lt;a href=&quot;https://twitter.com/hashtag/RivieraDev?src=hash&quot;&gt;#RivieraDev&lt;/a&gt; Speaker diner.  I must admit it : better than the &lt;a href=&quot;https://twitter.com/hashtag/devoxx?src=hash&quot;&gt;#devoxx&lt;/a&gt; one 😊 &lt;a href=&quot;http://t.co/6IVX0ZGYY7&quot;&gt;pic.twitter.com/6IVX0ZGYY7&lt;/a&gt;&lt;/p&gt;&amp;mdash; Daniel De Luca (@danieldeluca) &lt;a href=&quot;https://twitter.com/danieldeluca/status/609077780114976768&quot;&gt;11 Juin 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&quot;http://www.hawkular.org///platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I was well surprised to see the room packed for my presentation, as the RivieraDEV audience was mostly comprised of
developers, not system administrators. This is a good sign: more and more, monitoring tools draw attention
of the development side.&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-partner=&quot;tweetdeck&quot;&gt;&lt;p lang=&quot;fr&quot; dir=&quot;ltr&quot;&gt;Tenir ses applications à l&amp;#39;œil avec &lt;a href=&quot;https://twitter.com/hawkular_org&quot;&gt;@hawkular_org&lt;/a&gt; Metrics et &lt;a href=&quot;https://twitter.com/tsegismont&quot;&gt;@tsegismont&lt;/a&gt; ! &lt;a href=&quot;http://t.co/wul0NbeyTO&quot;&gt;pic.twitter.com/wul0NbeyTO&lt;/a&gt;&lt;/p&gt;&amp;mdash; RivieraDEV (@RivieraDEV) &lt;a href=&quot;https://twitter.com/RivieraDEV/status/609274503382831104&quot;&gt;June 12, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&quot;http://www.hawkular.org///platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I came back home with very good feedback from the attendees.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_interoperability_idea_validated&quot;&gt;Interoperability idea validated&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One of the nicest questions I was asked at RivieraDEV was, in the following or similar terms:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;m interested but I have Nagios everywhere, and I won&amp;#8217;t remove it. Can I use Hawkular with it?&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;While we haven&amp;#8217;t worked on Nagios interoperability yet, we have a tool called
&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/tree/master/clients/ptranslator&quot;&gt;PTrans&lt;/a&gt;, which listens to metric data sent
over several common protocols (&lt;em&gt;graphite&lt;/em&gt; and &lt;em&gt;collectd&lt;/em&gt; among others).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So Nagios integration is possible, and would be a very nice contribution (subliminal message).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_dashboards&quot;&gt;Dashboards&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It&amp;#8217;s one thing to store data, but of course everyone wants to do something with it! So the ability to work with Grafana
on top of Hawkular Metrics was appreciated. And as promised to a participant,
there&amp;#8217;s now &lt;a href=&quot;http://www.hawkular.org/docs/components/metrics/grafana_integration.html&quot;&gt;a guide for the setup&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;But we&amp;#8217;re also working on our own charting Javascript library, so you&amp;#8217;ll be soon be able to create your own dashboards
or embed graphs in your applications.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_opentsdb_comparison&quot;&gt;OpenTSDB comparison&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At the MarsJUG as well as RivieraDEV, I was asked how Hawkular Metrics relates to OpenTSDB, and why we don&amp;#8217;t use
OpenTSDB.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here&amp;#8217;s my own opinion:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;It is similar in goals, I think: being simple to use (from a client), and capable of ingesting and storing
loads of data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;With the RHQ project, we have experience in storing metric data in Apache Cassandra; it fits our known needs, so from
a user/customer support perspective, it feels more comfortable to me.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hawkular Metrics can run on Microsoft Windows out-of-the-box; as far as I know, OpenTSDB cannot;
and this platform is not a niche for us.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hawkular Metrics is probably simpler to administrate in small environments, because you don&amp;#8217;t have to deploy HBase.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That&amp;#8217;s it. You can review the
&lt;a href=&quot;http://fr.slideshare.net/ThomasSegismont/gardez-vosapplicationsloeilavechawkularmetrics&quot;&gt;slides&lt;/a&gt; online or download them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you attended one the sessions, I hope you enjoyed it. And see you next year hopefully!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular, the first release!</title>
      <link>http://www.hawkular.org/blog/2015/06/04/hawkular-1.0.0.Alpha1-released.html</link>
      <author>noreply@hawkular.org (Thomas Heute)</author>
      <pubDate>Thu, 4 Jun 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/06/04/hawkular-1.0.0.Alpha1-released.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We are very happy to release our very first version of Hawkular!
This is an important milestone for us, one of many more to come.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;What you can already do with this release:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Self register &amp;amp; login&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&quot;img-welcome&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/1.0.0.Alpha1_welcome.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha1_welcome.png&quot; alt=&quot;Hawkular welcome page&quot; width=&quot;500&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add URLs to monitor. Hawkular will tell you if your URLs are accessible and what was the response time from the server, it keeps history of this data and you can browse the graphs to see the data at a particular time. The monitoring data for URLs added by you can be seen by you only.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&quot;img-urllist&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/1.0.0.Alpha1_urllist.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha1_urllist.png&quot; alt=&quot;Hawkular URL list&quot; width=&quot;500&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Be alerted by Email when certain thresholds are met with dampening to avoid false alerts&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&quot;img-urlavailability&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/1.0.0.Alpha1_urlavailability.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha1_urlavailability.png&quot; alt=&quot;Hawkular URL availability&quot; width=&quot;500&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;img-urlresponsetime&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/1.0.0.Alpha1_urlresponsetime.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha1_urlresponsetime.png&quot; alt=&quot;Hawkular URL response time&quot; width=&quot;500&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add WildFly servers to monitor (for the moment you will need to instrument your server manually following &lt;a href=&quot;http://www.hawkular.org/docs/user/getting-started.html#_install_a_wildfly_monitoring_agent&quot;&gt;these instructions&lt;/a&gt; and Hawkular user interface will tell you if they are up or down).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&quot;img-serverslist&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/1.0.0.Alpha1_serverslist.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/1.0.0.Alpha1_serverslist.png&quot; alt=&quot;Hawkular servers list&quot; width=&quot;500&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There is a lot more behind the scenes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Hawkular Metrics is a sub-project that allows you to store timeseries over a long period of time, this is based on the work done with the RHQ project and uses Cassandra in the background&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hawkular Alerts is a component used by Hawkular to manage alerts. It is extremely configurable through a rule based engine&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The WildFly Agent exposes a lot of metrics from WildFly but also feed the inventory with deployments, datasources, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We plan to do a lot more Alpha releases with even more features, the next Alpha is planned for July 1st, and &lt;a href=&quot;/docs/dev/development.html&quot;&gt;you can help us&lt;/a&gt; :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thank you for the contributions!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can download it here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha1/hawkular-dist-1.0.0.Alpha1.zip&quot;&gt;Hawkular 1.0.0.Alpha1 (zip)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://download.jboss.org/hawkular/hawkular/1.0.0.Alpha1/hawkular-dist-1.0.0.Alpha1.tar.gz&quot;&gt;Hawkular 1.0.0.Alpha1 (tar.gz)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Oh, and we have a new logo, the hawk is looking at your apps, be kind to him!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-logo&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/hawkular_logo_200x200.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/hawkular_logo_200x200.png&quot; alt=&quot;Hawkular logo&quot; width=&quot;200&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Metrics 0.3.4 - Release</title>
      <link>http://www.hawkular.org/blog/2015/06/01/hawkular-metrics-0-3-4-released.html</link>
      <author>noreply@hawkular.org (Stefan Negrea)</author>
      <pubDate>Mon, 1 Jun 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/06/01/hawkular-metrics-0-3-4-released.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce release 0.3.4 of Hawkular Metrics. The release is anchored by stability improvements and Docker + Kubernetes work.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_here_are_the_release_highlights&quot;&gt;Here are the release highlights:&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;InfluxDB Compatibility Layer&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;pretty printing of query results with the &apos;pretty&apos; query parameter&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;absolute moment operands in queries (ex: select * from test where time &amp;gt; 1501560s and time &amp;lt; 4560546h)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;various fixes which allow to integrate nicely with Grafana (declaring Hawkular Metrics as an InfluxDB 0.8 datasource)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RxJavaMigration&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;big refactoring to use RxJava instead of Guava&amp;#8217;s ListenableFuture&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RxJava provides a much richer API for building asynchronous programs&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Server Start-up&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;the server no longer requires Cassandra to be started first&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;any client requests will get back a 503 response code if the server has not fully initialized due to Cassandra
being down at start up time&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Docker and Kubernetes&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;all project docker images are now available in Docker Hub! Get them here:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://registry.hub.docker.com/u/hawkular/hawkular-metrics/&quot; class=&quot;bare&quot;&gt;https://registry.hub.docker.com/u/hawkular/hawkular-metrics/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://registry.hub.docker.com/u/hawkular/hawkular-cassandra/&quot; class=&quot;bare&quot;&gt;https://registry.hub.docker.com/u/hawkular/hawkular-cassandra/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;improved replication controller support now means that both the Hawkular-Metrics and Cassandra images can be scaled
up or down&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;various other smaller improvements, including better support for when containers startup&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;REST API (IMPORTANT!)&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;tenantId&lt;/code&gt; header was renamed to &lt;code&gt;Hawkular-Tenant&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;tenantId&lt;/code&gt; header fallback was removed&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;GET {id}/tags&lt;/code&gt; only returns the tags, not the whole definition anymore&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;GET {id}&lt;/code&gt; returns the metric definition (see &lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-110&quot;&gt;HWKMETRICS-110&lt;/a&gt; for
known issue)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UI Explorer&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;was removed from the project&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;discussions are underway to find a new home for the functionality and code (probably hawkular-ui-components)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;npm is no longer required to compile the project&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Task Queue&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;a generic task queue was designed and developed as part of this release&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;provides functionality for scheduling and executing background tasks or jobs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;task execution is&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;scalable - automatically distributed among Hawkular Metrics servers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;durable - Tasks are persisted&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fault tolerant - Tasks are rescheduled for future execution when there is a failure&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it will serve as the foundation for&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;computing/storing aggregated metrics (i.e., rollups)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;deleting metrics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;changing data retention&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;this functionality will be basis for any background task based design for the project&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_release_links&quot;&gt;Release links&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Github Release:
&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/releases/tag/0.3.4&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-metrics/releases/tag/0.3.4&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JBoss Nexus Maven artifacts:
&lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&quot; class=&quot;bare&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jira release tracker:
&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12327259/&quot; class=&quot;bare&quot;&gt;https://issues.jboss.org/browse/HWKMETRICS/fixforversion/12327259/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_hawkular_metrics_0_3_5_and_beyond&quot;&gt;Hawkular Metrics 0.3.5 and Beyond&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Gauge Aggregates - Long-term storage of numeric metrics at the expense of losing some fidelity. With task queue
released in 0.3.4, the expectation is to start the actual implementation 0.3.5.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update REST testing - while the current set of tests is a good gauge for regressions, the overall coverage is still
low. The plan for 0.3.5 is to increase coverage.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Improved Docker and Kubernetes support - this is a long term goal for the project&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RXJava - the initial transition from Guava was done in 0.3.4. Future releases will build upon this foundation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_thanks&quot;&gt;Thanks&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A big &quot;Thank  you&quot; goes to John Sanda, Thomas Segismont, Mike Thompson, Matt Wringe, Michael Burman, and Heiko Rupp for their project
contributions. Special mentions go to Jeeva Kandasamy and Jirka Kremser for their project help.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Introducing the latest Hawkular component: Business Transaction Management</title>
      <link>http://www.hawkular.org/blog/2015/04/30/introducing-btm.html</link>
      <author>noreply@hawkular.org (Gary Brown)</author>
      <pubDate>Thu, 30 Apr 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/04/30/introducing-btm.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;m pleased to introduce a new component to the Hawkular family aimed at delivering a &lt;strong&gt;Business Transaction Management&lt;/strong&gt; solution. The initial focus will be on tracing a business transaction across a range of resources, on-premises and in the cloud, to provide an end to end view helping to isolate business transaction failures and performance bottlenecks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At this stage we are still putting together high level plans and hope to start publishing more details of a roadmap over the coming weeks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you have requirements in this area, please feel free to &lt;a href=&quot;https://issues.jboss.org/browse/HWKBTM&quot;&gt;create a jira&lt;/a&gt;, or discuss them on our &lt;a href=&quot;http://www.hawkular.org/community/join.html&quot;&gt;irc channel or dev mailing list&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hello GSoC Students</title>
      <link>http://www.hawkular.org/blog/2015/04/29/hello-to-gsoc-students.html</link>
      <author>noreply@hawkular.org (Heiko W. Rupp)</author>
      <pubDate>Wed, 29 Apr 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/04/29/hello-to-gsoc-students.html</guid>
      	<description>
	&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org/http://2.bp.blogspot.com/-PutwgzAxESE/VT9mlQ41uVI/AAAAAAAA4Jc/PIkJV51Z5Zw/s1600/GoogleSummer_2015logo_horizontal.jpg&quot; alt=&quot;GSoC Logo&quot; width=&quot;320&quot; height=&quot;200&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We are pretty happy, that Hawkular is participating in this years edition of
&lt;a href=&quot;https://www.google-melange.com/gsoc/dashboard/google/gsoc2015&quot;&gt;&lt;em&gt;Google Summer of Code&lt;/em&gt;&lt;/a&gt; (GSoC) with two
projects:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Aakarsh Agarwal on &lt;em&gt;Hawkular - pluggable data processors for metrics&lt;/em&gt;:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular-metrics deals with computation of
values and operations on the raw data. This project is aimed to develop interface for plugins that improve the
performance of Hawkular-Metrics making it more dependable, dynamic and extending the scope of its usage in operating
with data sets.Plugins are needed to apply statistical algorithms to the data and compute those necessary functions.
Such plugins may be plugged in at runtime whenever user wants it to.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Artur Dryomov on &lt;em&gt;Hawkular Android Client&lt;/em&gt;:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Mobile phones, especially smartphones, came to our life very quickly.
We use them every day and sometimes more often than our computers. At the moment there is no way to use Hawkular
comfortably on Android, there is only a web interface. This conclusion assumes that some work should be done to
provide a new way of user interaction with Hawkular. My work is to implement this idea in an Android application for
Hawkular.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The later proposal is done together with the Aerogear project. Daniel Passos from &lt;a href=&quot;https://aerogear.org&quot;&gt;AeroGear&lt;/a&gt; is
the official mentor for the student.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Intro to Hawkular, a middleware open-source management solution</title>
      <link>http://www.hawkular.org/blog/2015/04/14/intro-to-hawkular.html</link>
      <author>noreply@hawkular.org (Thomas Heute)</author>
      <pubDate>Fri, 17 Apr 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/04/14/intro-to-hawkular.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;strong class=&quot;big&quot;&gt;mission&lt;/strong&gt; of Hawkular is to provide an easy-to-use management solution with a particular focus on your &lt;strong class=&quot;big&quot;&gt;middleware applications&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Our efforts are primarily about &lt;strong class=&quot;big&quot;&gt;monitoring&lt;/strong&gt; at this stage. We are putting a lot of efforts in providing a &lt;strong class=&quot;big&quot;&gt;usable user interface&lt;/strong&gt;, it&amp;#8217;s no longer an after-thought, the UI design actually drives a lot of the requirements (and don&amp;#8217;t worry all the capabilities of the UI interface are available through a REST interface, this is per design).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We also think that alerts should be &lt;strong class=&quot;big&quot;&gt;smart&lt;/strong&gt; ! We definitely want to reduce the amount of false alerts to the minimum. A slower response time might not prove a dysfunction if there is a heavier usage of a system, it would be if the response time increase for no reason. Higher load and higher response time may trigger auto-scaling in a cloud environment… We also want to add &lt;strong class=&quot;big&quot;&gt;prediction&lt;/strong&gt; capabilities to let you react &lt;strong class=&quot;big&quot;&gt;before&lt;/strong&gt; things start breaking.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Provisioning and configuration&lt;/div&gt;
Speaking of auto-scaling and cloud environment, in a later phase we (and/or &lt;a href=&quot;http://www.hawkular.org/community/join.html&quot;&gt;you&lt;/a&gt;?) will add provisioning and configurations of servers to Hawkular.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular will also help you with out of the box alert configurations that makes sense and that you can adjust/change/remove/add. Because we deal with many common issues through supporting our projects and products we aim at bringing that knowledge back into the monitoring tool.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;No matter if you belong to the SOA &quot;old-school&quot; or Micro Services &quot;hype&quot;, it&amp;#8217;s usually hard to properly get a grasp of the relations between multiple services running on multiple servers and how one can affect another one. It is our goal to focus on an application rather than on a plain list of servers. We&amp;#8217;ll help you visualize that infrastructure by discovering as much as possible the relationships between the various elements and making this graph of resources easy to browse, we&amp;#8217;ll want to tell you what applications are affected when a particular service, database, server&amp;#8230;&amp;#8203; is having issues.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As for the &lt;strong class=&quot;big&quot;&gt;current status&lt;/strong&gt;, we are heavily working on the core services (Metrics storing and collection, alerts, inventory, reactive architecture&amp;#8230;&amp;#8203;) but to get something usable today we are already providing a tool to monitor websites by providing its URL. You&amp;#8217;ll immediately get historical data about availability and response times on which you can decide to receive email notifications when something goes wrong. (&lt;a href=&quot;http://www.hawkular.org/blog/2015/04/09/alert-notifiers-for-mobile-devices.html&quot;&gt;Mobile push notifications and SMS using Twilio just made it&lt;/a&gt; and PagerDuty support is on its way ! Easily extensible)&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-ping-service&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;a class=&quot;image&quot; href=&quot;/img/blog/2015/hawkular-intro1.png&quot;&gt;&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/hawkular-intro1.png&quot; alt=&quot;Hawkular ping service&quot; width=&quot;800&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. Hawkular ping service&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To &lt;strong class=&quot;big&quot;&gt;get started&lt;/strong&gt; you have several options (more info &lt;a href=&quot;http://www.hawkular.org/docs/user/getting-started.html&quot;&gt;here&lt;/a&gt;):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use our docker image. Assuming you have docker already installed, it&amp;#8217;s also a very easy way to get started, here are the instructions:&lt;/p&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;sudo docker run -d -p 8081:8080 hawkular/hawkular&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open your web browser and go to &lt;a href=&quot;http://localhost:8081&quot; class=&quot;bare&quot;&gt;http://localhost:8081&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.hawkular.org/docs/dev/development.html#_full_distribution&quot;&gt;Build from sources&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It&amp;#8217;s fully open-source and as you can tell we are at the beginning of the journey (with 10+ years of experience with the &lt;a href=&quot;http://rhq-project.github.io/rhq/&quot;&gt;RHQ project&lt;/a&gt;),  feel free to contribute &lt;a href=&quot;https://lists.jboss.org/mailman/listinfo/hawkular-dev&quot;&gt;ideas&lt;/a&gt; and &lt;a href=&quot;https://github.com/hawkular/hawkular.git&quot;&gt;code&lt;/a&gt; and/or report &lt;a href=&quot;https://issues.jboss.org/browse/HAWKULAR&quot;&gt;issues&lt;/a&gt; !&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That&amp;#8217;s it! Questions? Comments? Feel free to ask here or &lt;a href=&quot;irc://irc.freenode.net/#hawkular&quot;&gt;join us on Freenode&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular-Monitor Agent</title>
      <link>http://www.hawkular.org/blog/2015/04/14/hawkular-monitor-agent-intro.html</link>
      <author>noreply@hawkular.org (John Mazzitelli)</author>
      <pubDate>Tue, 14 Apr 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/04/14/hawkular-monitor-agent-intro.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/hawkular/hawkular-agent&quot;&gt;Hawkular Monitor agent&lt;/a&gt; is in good enough shape now
to be able to blog about it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Hawkular Monitor agent is a Wildfly subsystem extension deployed as a module inside Wildfly.
At the time of writing, this currently works in Wildfly 8.2 Final.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You define what metrics you want to collect and what availabilty checks to make by adding metric sets and avail sets
to standalone.xml. You could also use the JBoss CLI to do this, rather than directly editing standalone.xml, if you wish.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A sample configuration &lt;a href=&quot;https://github.com/hawkular/hawkular-agent/blob/master/hawkular-wildfly-monitor/src/main/assembly/subsystem.xml&quot;&gt;is found here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;An example of a metric to be collected is:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;&amp;lt;metric-dmr name=&quot;heap.used&quot;
            interval=&quot;30&quot;
            timeUnits=&quot;seconds&quot;
            resource=&quot;/core-service=platform-mbean/type=memory&quot;
            attribute=&quot;heap-memory-usage#used&quot; /&amp;gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This defines a metric named &quot;heap.used&quot; which is the heap memory used by the WildFly VM.
The metric will be collected every 30 seconds.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here is an example of an availability check:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;&amp;lt;avail-dmr name=&quot;app-server&quot;
           interval=&quot;30&quot;
           timeUnits=&quot;seconds&quot;
           resource=&quot;/&quot;
           attribute=&quot;server-state&quot;
           upRegex=&quot;run.*&quot; /&amp;gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This will look at the WildFly&amp;#8217;s &quot;server-state&quot; and if its value matches the
regular expression &quot;run.*&quot; then this availability check will report UP. Otherwise, it will report DOWN.
If no upRegex is provided, then some simple heuristics are performed to determine the availability status
(specifically if the value is a number then a 0 is considered DOWN and non-zero is considered UP;
otherwise, if the value is the string &quot;up&quot; or &quot;ok&quot; (case insenstive) it is considered UP,
otherwise it is considered DOWN.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The full XML Schema for the Hawkular Monitor agent subsystem configuration can be
&lt;a href=&quot;https://github.com/hawkular/hawkular-agent/blob/master/hawkular-wildfly-monitor/src/main/resources/schema/hawkular-agent-monitor-subsystem.xsd&quot;&gt;found here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Currently, what can be monitored or checked for availability is any resource in the WildFly management hierachy
(in the same WildFly where Hawkular Monitor agent is deployed). Future development is underway to allow the
Hawkular Monitor agent to monitor resources in remote WildFly instances, as well as remote JMX resources.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Today, you have the option to store the metric and availability data directly to a Hawkular-Metrics instance or to
a Hawkular ecosystem (this is the &amp;lt;storage-adapter&amp;gt; definition). As the Hawkular ecosystem is built out (specifically, as inventory is brought into the picture),
a fuller integration with Hawkular Monitor agent will be possible.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you have any questions on this, or suggestions on what features we need to add or enhance, please ping us on
the #hawkular freenode chat room or send an email to the &lt;a href=&quot;https://lists.jboss.org/mailman/listinfo/hawkular-dev&quot;&gt;hawkular-dev mailing list&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;how_to_build&quot;&gt;How To Build&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Clone &lt;a href=&quot;https://github.com/hawkular/hawkular-agent&quot;&gt;the source code&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Build via Maven: &quot;mvn clean install&quot;&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The Wildfly module that houses the Hawkular Monitor agent will be found in a zip file under hawkular-agent/hawkular-wildfly-monitor.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unzip the Hawkular Monitor agent into whatever Wildfly 8.2 instance you want.&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Alternatively, you can use the Maven wildfly-extension-plugin to do this:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;cd hawkular-agent/hawkular-wildfly-monitor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mvn -Dorg.hawkular.wildfly.home=/source/hawkular/kettle/target/wildfly-8.2.0.Final/ clean install wildfly-extension:deploy&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Notice the above command installed Hawkular Monitor agent inside my Hawkular Kettle build&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;dmr_client&quot;&gt;DMR Client&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A standalone library has been included in the hawkular-agent repository that can be used to talk to a WildFly&amp;#8217;s
management interface via a more strongly-typed API that sits above the DMR API. The
&lt;a href=&quot;https://github.com/hawkular/hawkular-agent/tree/master/hawkular-dmr-client/src/main/java/org/hawkular/dmrclient&quot;&gt;DMR Client&lt;/a&gt;
provides this capability in a single-jar library. The Hawkular Monitor agent uses it, but since it is a
standalone library, anyone that wants to talk to WildFly&amp;#8217;s management interface can use it. Currently, its snapshots are
released on Nexus which you can
&lt;a href=&quot;https://repository.jboss.org/nexus/content/repositories/snapshots/org/hawkular/agent/hawkular-dmr-client/&quot;&gt;find here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A simple example of its usage is as follows:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;import org.jboss.as.controller.client.ModelControllerClient;
import org.hawkular.dmrclient.Address;
import org.hawkular.dmrclient.CoreJBossASClient;

// ...

ModelControllerClient mcc = ModelControllerClient.Factory.create(&quot;myhostname&quot;, 9990);
// now use the hawkular-dmr-client library
try (CoreJBossASClient client = new CoreJBossASClient(mcc)) {
    // get version of the wildfly instance from DMR root resource &quot;/&quot;
    String rv = client.getStringAttribute(&quot;release-version&quot;, Address.root());

    // get install directory of the WildFly instance from DMR resource &quot;/core-service=server-environment&quot;
    String hd = client.getStringAttribute(&quot;home-dir&quot;, Address.parse(&quot;/core-service=server-environment&quot;));
} catch (Exception e) {
    // do something about the error
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You no longer have to worry about how to build DMR ModelNodes in the correct format to perform these kinds of operations.
The Hawkular DMR Client API will build the ModelNode requests and process the ModelNode responses for you.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;CoreJBossASClient is one of several strongly-typed API objects that extend
&lt;a href=&quot;https://github.com/hawkular/hawkular-agent/blob/master/hawkular-dmr-client/src/main/java/org/hawkular/dmrclient/JBossASClient.java&quot;&gt;JBossASClient&lt;/a&gt;.
Others can be used to access common resource types in the DMR hierarchy, such as
&lt;a href=&quot;https://github.com/hawkular/hawkular-agent/blob/master/hawkular-dmr-client/src/main/java/org/hawkular/dmrclient/DatasourceJBossASClient.java&quot;&gt;DatasourceJBossASClient&lt;/a&gt;
which can be used to manipulate datasources.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Alert notifiers for mobile devices</title>
      <link>http://www.hawkular.org/blog/2015/04/09/alert-notifiers-for-mobile-devices.html</link>
      <author>noreply@hawkular.org (Thomas Segismont)</author>
      <pubDate>Thu, 9 Apr 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/04/09/alert-notifiers-for-mobile-devices.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Alerts has new notifications senders which target mobile devices. Let&amp;#8217;s start with a brief explanation of
notification sending.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;how_notification_senders_work&quot;&gt;How notification senders work?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When the alert engine detects a problem, it sends an action message to the configured sender(s) for this type of issue.
The action message has all the details:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;which problem triggered the alert&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;who are the configured recipients&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&quot;img-action-plugins&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/alert-action-plugins.png&quot; alt=&quot;Action plugins overview&quot; width=&quot;600&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. Action plugins overview&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;The alert engine inspects notification data to determine which action messages should be sent to the Hawkular bus.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then it sends a message for each configured notification (email/SMS/push).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Action plugins pick up their messages and build the notification with the details given in the notification message.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Makes sense? Now which new plugins do we have?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;unified_push_notifications&quot;&gt;Unified Push Notifications&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Alert&amp;#8217;s &lt;code&gt;aerogear&lt;/code&gt; plugin is able to send notification messages to
&lt;a href=&quot;https://www.jboss.org/unifiedpush/&quot;&gt;Aerogear&amp;#8217;s Unified Push Server&lt;/a&gt;. Which means that you can send alerts as native push
messages to an Android, iOS, Windows or Firefox OS application.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At the time of writing, Hawkular doesn&amp;#8217;t have a mobile application for any of these platforms (an Android application
might come soon with the help of a Google Summer of Code student). So for demonstration purposes we&amp;#8217;ve built a sample
application, &lt;code&gt;Hawkugear&lt;/code&gt; and ran it with the Android Emulator.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-action-plugins&quot; class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/blog/2015/hawkugear-android-app.png&quot; alt=&quot;Hawkugear Android application&quot; width=&quot;350&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 2. Hawkugear Android application&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The application lacks proper formatting of course, but you can see on this screenshot that the notification message
landed properly on the mobile device after travelling through the Hawkular Bus, the Aerogear Unified Push Server and
Google Cloud&amp;#8217;s Messaging platform.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To configure the &lt;code&gt;aerogear&lt;/code&gt; sender plugin, add these system property definitions (with your own values) into your
Wildfly &lt;code&gt;standalone.xml&lt;/code&gt; file:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;system-properties&amp;gt;
    &amp;lt;property name=&quot;org.hawkular.actions.aerogear.root.server.url&quot; value=&quot;http://localhost:9191/ag-push/&quot;/&amp;gt;
    &amp;lt;property name=&quot;org.hawkular.actions.aerogear.application.id&quot; value=&quot;as304-6019-8a256afkbc-935b274-16247&quot;/&amp;gt;
    &amp;lt;property name=&quot;org.hawkular.actions.aerogear.master.secret&quot; value=&quot;94b2-qc156s-719725j6-4k04d566-bs0a340&quot;/&amp;gt;
&amp;lt;/system-properties&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Or using the CLI:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/system-property=org.hawkular.actions.aerogear.root.server.url:add(value=&quot;http://localhost:9191/ag-push/&quot;)
/system-property=org.hawkular.actions.aerogear.application.id:add(value=&quot;as304-6019-8a256afkbc-935b274-16247&quot;)
/system-property=org.hawkular.actions.aerogear.master.secret:add(value=&quot;94b2-qc156s-719725j6-4k04d566-bs0a340&quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;short_message_service&quot;&gt;Short Message Service&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There&amp;#8217;s also an &lt;code&gt;sms&lt;/code&gt; plugin which is built on &lt;a href=&quot;https://www.twilio.com/sms&quot;&gt;Twilio&amp;#8217;s SMS services&lt;/a&gt;. No mobile application
required here, all you need to do is to create a Twilio account and configure the plugin with your application &lt;code&gt;sid&lt;/code&gt;,
authorization &lt;code&gt;token&lt;/code&gt;, and &lt;code&gt;from&lt;/code&gt; number.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As for the &lt;code&gt;aerogear&lt;/code&gt; plugin, add these system property definitions (with your own values) into your Wildfly
&lt;code&gt;standalone.xml&lt;/code&gt; file:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;system-properties&amp;gt;
    &amp;lt;property name=&quot;org.hawkular.actions.sms.sid&quot; value=&quot;ACdc5f132a3c49700934481addd5ce1659&quot;/&amp;gt;
    &amp;lt;property name=&quot;org.hawkular.actions.sms.token&quot; value=&quot;3036d49cAf5Cd019c81de12354d57ac49a&quot;/&amp;gt;
    &amp;lt;property name=&quot;org.hawkular.actions.sms.from&quot; value=&quot;+14158141829&quot;/&amp;gt;
&amp;lt;/system-properties&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Or using the CLI:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/system-property=org.hawkular.actions.sms.sid:add(value=&quot;ACdc5f132a3c49700934481addd5ce1659&quot;)
/system-property=org.hawkular.actions.sms.token:add(value=&quot;3036d49cAf5Cd019c81de12354d57ac49a&quot;)
/system-property=org.hawkular.actions.sms.from:add(value=&quot;+14158141829&quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;more_to_come&quot;&gt;More to come&amp;#8230;&amp;#8203;&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We have planned to integrate with &lt;a href=&quot;http://www.pagerduty.com/&quot;&gt;PagerDuty&lt;/a&gt;. In the beginning, each notification message
will be sent with a new indentifier. As a consequence, PagerDuty will see recurrent notifications of the same problem
as different incidents. The Hawkular Alerts team is working on an incident worflow and we should be able to solve this
problem in the near future.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That&amp;#8217;s it! Questions? Comments? Feel free to ask here or &lt;a href=&quot;irc://irc.freenode.net/#hawkular&quot;&gt;join us on Freenode&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Testing collectd integration</title>
      <link>http://www.hawkular.org/blog/2015/2015-04-08-1.html</link>
      <author>noreply@hawkular.org (Thomas Segismont)</author>
      <pubDate>Wed, 8 Apr 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/2015-04-08-1.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular Metrics is able to store data coming from &lt;a href=&quot;http://collectd.org/&quot; target=&quot;_blank&quot;&gt;collectd&lt;/a&gt;. To enable this
feature, you need to start the
&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/tree/master/clients/ptranslator&quot; target=&quot;_blank&quot;&gt;ptrans&lt;/a&gt; proxy, point it
to your Metrics server, and configure the collectd network plugin to send data to ptrans.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;img-stack&quot; class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org/../../img/blog/2015/collectd-ptrans-metrics.png&quot; alt=&quot;collectd/ptrans/metrics stack&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot;&gt;Figure 1. collectd/ptrans/metrics stack&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Logo_der_Software_collectd.svg#/media/File:Logo_der_Software_collectd.svg&quot;&gt;
collectd logo by Florian Forster. Licensed under CC BY-SA 2.0 de via Wikimedia Commons&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;regression_test_requirements&quot;&gt;Regression test requirements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To make sure the collectd/ptrans/Hawkular stack never gets broken, we wanted to have an integration test. This test
should fill the following requirements:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;do not fail the build on machines where collectd is not available (non-Linux developers machines, or simply machines
where collectd is not installed)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;run on Travis-CI, where each pull request is tested before being merged&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;make sure all data sent from collectd lands on the Hawkular Metrics server&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;run as quickly as possible&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here&amp;#8217;s an outline of the implementation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;skip_test_when_collectd_is_not_available&quot;&gt;Skip test when collectd is not available&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/junit-team/junit/wiki/Assumptions-with-assume&quot; target=&quot;_blank&quot;&gt;jUnit Assumptions&lt;/a&gt; provide a nice way
to test the presence of external dependencies. The default jUnit runner will skip the test if the assumption fails. So
skipping the test when collectd is not available is just a matter of testing if the collectd binary exists, is a regular
file, and is executable.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;private static final String COLLECTD_PATH = System.getProperty(&quot;collectd.path&quot;, &quot;/usr/sbin/collectd&quot;);

// ...

@Before
public void setUp() throws Exception {
    // ...
    assumeCollectdIsPresent();
    // ...
}

private void assumeCollectdIsPresent() {
    Path path = Paths.get(COLLECTD_PATH);
    assumeTrue(COLLECTD_PATH + &quot; does not exist&quot;, Files.exists(path));
    assumeTrue(COLLECTD_PATH + &quot; is not a file&quot;, Files.isRegularFile(path));
    assumeTrue(COLLECTD_PATH + &quot; is not executable&quot;, Files.isExecutable(path));
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;run_on_travis_ci&quot;&gt;Run on Travis-CI&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://docs.travis-ci.com/user/installing-dependencies/&quot;&gt;
Travis lets you customize the virtual running the build&lt;/a&gt;. Installing packages on the Ubuntu-based VM is very
straightforward, just add a couple of lines in the &lt;code&gt;before_install&lt;/code&gt; target of your &lt;code&gt;.travis.yml&lt;/code&gt; file:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;before_install:
- sudo apt-get update -qq
- sudo apt-get install -qq collectd collectd-utils&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;verify_data_has_landed_on_the_metrics_server&quot;&gt;Verify data has landed on the Metrics server&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;collectd lets you configure one or more &lt;em&gt;write plugins&lt;/em&gt;. The network plugin is required to send data to ptrans. We also
activate the csv plugin and make it log the measurements to &lt;em&gt;stdout&lt;/em&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-conf&quot; data-lang=&quot;conf&quot;&gt;LoadPlugin csv
&amp;lt;Plugin csv&amp;gt;
    DataDir stdout
&amp;lt;/Plugin&amp;gt;

LoadPlugin network
&amp;lt;Plugin network&amp;gt;
    Server &quot;127.0.0.1&quot; &quot;25826&quot;
    ReportStats false
&amp;lt;/Plugin&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then we start collectd, preventing it to fork to the background with the &lt;code&gt;-f&lt;/code&gt; option, and wait until a minimum number
of measurements has been sent:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;@Test
public void shouldFindCollectdMetricsOnServer() throws Exception {

    // ...

    ImmutableList.Builder&amp;lt;String&amp;gt; collectdCmd = ImmutableList.builder();
    collectdCmd.add(COLLECTD_PATH, &quot;-C&quot;, collectdConfFile.getAbsolutePath(), &quot;-f&quot;);
    collectdProcessBuilder.command(collectdCmd.build());
    collectdProcess = collectdProcessBuilder.start();

    waitForCollectdValues();

    // ...

}

private void waitForCollectdValues() throws Exception {
    long c;
    do {
        Thread.sleep(MILLISECONDS.convert(1, SECONDS));
        c = Files.lines(collectdOut.toPath())
                 .filter(l -&amp;gt; l.startsWith(&quot;PUTVAL&quot;))
                 .collect(counting());
    } while (c &amp;lt; MINIMUM);
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When enough measurements have been collected and sent, all we need to do is to parse collectd &lt;em&gt;stdout&lt;/em&gt; and compare with
server data, which can be loaded with an HTTP request.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;run_as_quickly_as_possible&quot;&gt;Run as quickly as possible&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At this point, all the ingredients can be combined to build an integration test. But the experience showed that running
it could take quite some time, even if the minimum number of measurements was low, and data collectd frequently (every
second).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A bit of investigation demonstrated that the test was spending an unexpected amount of time in  the
&lt;code&gt;waitForCollectdValues&lt;/code&gt; method. It turned out that buffering of collectd output was the cause. To avoid it, we can use
the &lt;code&gt;stdbuf&lt;/code&gt; tool from GNU &lt;code&gt;coreutils&lt;/code&gt;: as explained in the manual page, it&amp;#8217;s a tool to run a command &quot;with modified
buffering operations for its standard streams&quot;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With this slight modification, the test runs in a few seconds:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;File stdbuf = new File(&quot;/usr/bin/stdbuf&quot;);
ImmutableList.Builder&amp;lt;String&amp;gt; collectdCmd = ImmutableList.builder();
if (stdbuf.exists() &amp;amp;&amp;amp; stdbuf.canExecute()) {
    collectdCmd.add(stdbuf.getAbsolutePath(), &quot;-o0&quot;, &quot;-e0&quot;);
}
collectdCmd.add(COLLECTD_PATH, &quot;-C&quot;, collectdConfFile.getAbsolutePath(), &quot;-f&quot;);
collectdProcessBuilder.command(collectdCmd.build());
collectdProcess = collectdProcessBuilder.start();&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That&amp;#8217;s it!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Metrics 0.3.1 - Release</title>
      <link>http://www.hawkular.org/blog/2015/2015-04-07-1.html</link>
      <author>noreply@hawkular.org (Stefan Negrea)</author>
      <pubDate>Tue, 7 Apr 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/2015-04-07-1.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hello Everybody,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce a big milestone for the Hawkular Metrics project. We are releasing today for the
first time from the repository hosted by the Hawkular organization.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Major changes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;dlist&quot;&gt;
&lt;dl&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;UI&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The core UI has been migrated to Hawkular UI related projects (hawkular-ui-components, hawkular, and
hawkular-ui-services). The explorer project is still available for testing purposes.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;REST&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Consistent error reporting and status codes usage across endpoints&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added Availability statistics (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-35&quot;&gt;HWKMETRICS-35&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Total downtime duration&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Last downtime&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Percentage of uptime&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Number of downtimes&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;New Numeric Metric statistics (&lt;a href=&quot;https://issues.jboss.org/browse/HWKMETRICS-34&quot;&gt;HWKMETRICS-34&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Average&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Median&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;95th Percentile&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The REST implementation has been decoupled from the actual core logic, which paves the way for alternate REST
implementations&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Core&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Large refactoring of the core classes and packages, the domain related logic has been pushed to the core layer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Memory storage engine has been dropped from the project. Cassandra (embedded or standalone) is the exclusive
storage engine.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;InfluxDB Integration&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;  Influx Java client supports sending and reading data (it was not possible before because of the endoint URI
differences) to/from Hawkular Metrics. Other clients are not tested but should work as well.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;PTrans&lt;/dt&gt;
&lt;dd&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Configurable list of listeners (previously all collectd, ganglia, &amp;#8230;&amp;#8203; etc listeners were started)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bug fix: send data to Metrics server if the buffer is full or no data was received recently (previously data could
sit in the buffer and wait for the buffer to be full before being sent)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Github Release:
&lt;a href=&quot;https://github.com/hawkular/hawkular-metrics/releases/tag/0.3.1&quot; class=&quot;bare&quot;&gt;https://github.com/hawkular/hawkular-metrics/releases/tag/0.3.1&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;JBoss Nexus Maven artifacts:
&lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&quot; class=&quot;bare&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/hawkular/metrics/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A big &quot;Thank you&quot; goes to John Sanda, Thomas Segismont, Mike Thompson, and Heiko Rupp for their project contributions. Special mentions go to Jeeva Kandasamy, Jirka Kremser, and Michael Burman for their project help.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am happy to announce that Matt Wringe joined the Hawkular Metrics team with a focus on containers and project integrations. We are looking forward to his contributions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Any discussion, suggestions or contributions are more than welcomed; so feel free to comment on this post or join
&lt;a href=&quot;irc://irc.freenode.net/#hawkular&quot;&gt;#Hawkular on freenode&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Discontinued</title>
      <link>http://www.hawkular.org/blog/2015/2015-04-01-1.html</link>
      <author>noreply@hawkular.org (Heiko W. Rupp)</author>
      <pubDate>Wed, 1 Apr 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/2015-04-01-1.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Yesterday on March 31st, we had a good number of Meetings with other folks of JBoss in the new new
Red Hat office in Newcastle, called &lt;em&gt;The Pub&lt;/em&gt;.
Among others we were also discussing the future of Monitoring. After all the beers^w discussions we have decided to
discontinue Hawkular.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We found out that software is always at fault:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;it does not have all the features users want&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it is too slow (always!)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it uses too much memory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it uses too much cpu&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So instead of investing more time and effort into Hawkular, we will replace it with this new Microservice&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;public static String isHealthy(String resource) {
    return &quot;no&quot;;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;All the existing Hawkular source code will be donated to the 1. Association of Possibly Retired Invariant Lines of
code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thanks for your attention&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Dockerized Hawkular builds available</title>
      <link>http://www.hawkular.org/blog/2015/2015-03-30-1.html</link>
      <author>noreply@hawkular.org (Heiko W. Rupp)</author>
      <pubDate>Mon, 30 Mar 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/2015-03-30-1.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As described earlier, we have assembled all the components of Hawkular into a single package, the &lt;em&gt;Kettle&lt;/em&gt;.
This allows you to just build/download one package, start and work with it instead of caring of the individual
sub-packages.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To make the process to play with Hawkular even easier, we have also created a build-pipeline that creates a Docker
image out of the Kettle and publishes it to Docker Hub as hawkular/hawkular.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can download and run them like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;$ docker run -d -p 8081:8080 hawkular/hawkular&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After the download of the image has finished, it will take a while until Hawkular is fully started up.
When it is up, you can reach the Hawkular UI at &lt;a href=&quot;http://localhost:8081/&quot; class=&quot;bare&quot;&gt;http://localhost:8081/&lt;/a&gt;  ( If you are
running docker on OS/X via boot2docker, you need to use the IP address that is stored in the &lt;code&gt;DOCKER_HOST&lt;/code&gt;
environment variable instead of &lt;code&gt;localhost&lt;/code&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;More information is available in the
&lt;a href=&quot;/docs/user/getting-started&quot;&gt;Getting started&lt;/a&gt; document.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>The Kettle starts boiling</title>
      <link>http://www.hawkular.org/blog/2015/2015-02-24-1.html</link>
      <author>noreply@hawkular.org (Heiko W. Rupp)</author>
      <pubDate>Tue, 24 Feb 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/2015-02-24-1.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We have been working hard the last weeks to integrate the individual pieces of hawkular into some &lt;em&gt;good old
distribution&lt;/em&gt;, basically a thingy you can check out, unzip and run. And here it is, the &lt;em&gt;Kettle&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;http://www.hawkular.org//img/Kettle.png&quot; alt=&quot;Kettle&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To build the Kettle you basically checkout the Hawkular main repository and run &lt;code&gt;mvn install&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;git clone https://github.com/hawkular/hawkular.git
cd hawkular
mvn install -Pdev -Dlicense.skip
cd kettle/target
cd wildfly-8.2.0.Final
bin/standalone.sh&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can then point your web browser at &lt;a href=&quot;http://localhost:8080/&quot; class=&quot;bare&quot;&gt;http://localhost:8080/&lt;/a&gt; and use Hawkular.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Hawkular Metrics 0.2.7 - Release</title>
      <link>http://www.hawkular.org/blog/2015/2015-02-16-1.html</link>
      <author>noreply@hawkular.org (Heiko W. Rupp)</author>
      <pubDate>Mon, 16 Feb 2015 00:00:00 +0000</pubDate>
      <guid isPermaLink="false">blog/2015/2015-02-16-1.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hawkular-metrics has published under its old name &lt;em&gt;rhq-metrics&lt;/em&gt; its version 0.2.7 release.
From Stefans announcement:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I want to summarize the latest release of the RHQ Metrics project and the future of the project.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;rhq_metrics_migrates_to_hawkular_organization&quot;&gt;RHQ Metrics migrates to Hawkular organization&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Release 0.2.7 of the RHQ Metrics is the last one from the current repository. But do not panic! Beyond the mechanics of the transfer and rename, the development will continue with the regular crew.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For the migration, two project repositories (rhq-metrics and rhq-metrics-openshift) will just be transferred to the Hawkular organization. The code from rhqm-charts was already moved to Hawkular, so we will just close the RHQ repository. We will have a follow up communication once all the infrastructure is in place under the new organization.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;rhq_metrics_0_2_7_was_released_today&quot;&gt;RHQ Metrics 0.2.7 was released today&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This release has mainly stability fixes and minor enhancements. The Keycloak integration was delayed and not part of this release (as announced in the planning notes). For more details checkout the Github release notes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Github Release:
&lt;a href=&quot;https://github.com/rhq-project/rhq-metrics/releases/tag/0.2.7&quot; class=&quot;bare&quot;&gt;https://github.com/rhq-project/rhq-metrics/releases/tag/0.2.7&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;JBoss Nexus Maven artifacts:
&lt;a href=&quot;http://origin-repository.jboss.org/nexus/content/repositories/public/org/rhq/metrics/&quot; class=&quot;bare&quot;&gt;http://origin-repository.jboss.org/nexus/content/repositories/public/org/rhq/metrics/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;openshift_cartridge_for_rhq_metrics_0_2_7&quot;&gt;OpenShift Cartridge for RHQ Metrics 0.2.7&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The cartridge supports RHQ Metrics 0.2.7, 0.2.6, and 0.2.5. Just a reminder, the cartridge is the simplest and easiest way to get a public facing instance of RHQ Metrics in just a few minutes with a single command. The cartridge configures Cassandra, Wildfly, and RHQ Metrics (REST interface and UI console) to run in a single gear. For more details please visit the Github repository of the project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Sample command to create a new RHQ Metrics deployment:
rhc app create test_app &lt;a href=&quot;https://raw.githubusercontent.com/rhq-project/rhq-metrics-openshift/master/metadata/manifest.yml&quot; class=&quot;bare&quot;&gt;https://raw.githubusercontent.com/rhq-project/rhq-metrics-openshift/master/metadata/manifest.yml&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Github Repository:
&lt;a href=&quot;https://github.com/rhq-project/rhq-metrics-openshift&quot; class=&quot;bare&quot;&gt;https://github.com/rhq-project/rhq-metrics-openshift&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A big &quot;Thank you!&quot; goes to John Sanda, Mike Thompson, Heiko Rupp, and Thomas Segismont for their project contributions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Any discussion, suggestions or contributions are more than welcomed; so feel free to reply to this email or comment directly on the various forum threads.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thank you,
Stefan Negrea&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>

  </channel>
</rss>
